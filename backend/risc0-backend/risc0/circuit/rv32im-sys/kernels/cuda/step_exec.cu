// Copyright 2024 RISC Zero, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code is automatically generated

#include "extern.cuh"

__device__ void step_exec(
    void* ctx, uint32_t steps, uint32_t cycle, Fp* arg0, Fp* arg1, Fp* arg2, Fp* arg3, Fp* arg4) {
  uint32_t mask = steps - 1;
  Fp extern_args[96];
  Fp extern_outs[32];
  // loc(unknown)
  Fp x0(56361032);
  // loc(unknown)
  Fp x1(65280);
  // loc(unknown)
  Fp x2(8388608);
  // loc(unknown)
  Fp x3(56361024);
  // loc(unknown)
  Fp x4(54525952);
  // loc(unknown)
  Fp x5(219862);
  // loc(unknown)
  Fp x6(56361023);
  // loc(unknown)
  Fp x7(47);
  // loc(unknown)
  Fp x8(56360975);
  // loc(unknown)
  Fp x9(56360967);
  // loc(unknown)
  Fp x10(2013235201);
  // loc(unknown)
  Fp x11(32768);
  // loc(unknown)
  Fp x12(2013204481);
  // loc(unknown)
  Fp x13(2013143041);
  // loc(unknown)
  Fp x14(8192);
  // loc(unknown)
  Fp x15(2013020161);
  // loc(unknown)
  Fp x16(4096);
  // loc(unknown)
  Fp x17(2012774401);
  // loc(unknown)
  Fp x18(2048);
  // loc(unknown)
  Fp x19(2012282881);
  // loc(unknown)
  Fp x20(2011299841);
  // loc(unknown)
  Fp x21(512);
  // loc(unknown)
  Fp x22(2009333761);
  // loc(unknown)
  Fp x23(1024);
  // loc(unknown)
  Fp x24(50331661);
  // loc(unknown)
  Fp x25(50331660);
  // loc(unknown)
  Fp x26(50331662);
  // loc(unknown)
  Fp x27(50331658);
  // loc(unknown)
  Fp x28(50331659);
  // loc(unknown)
  Fp x29(50331653);
  // loc(unknown)
  Fp x30(115);
  // loc(unknown)
  Fp x31(131070);
  // loc(unknown)
  Fp x32(131072);
  // loc(unknown)
  Fp x33(31);
  // loc(unknown)
  Fp x34(192);
  // loc(unknown)
  Fp x35(35);
  // loc(unknown)
  Fp x36(4194304);
  // loc(unknown)
  Fp x37(16384);
  // loc(unknown)
  Fp x38(23);
  // loc(unknown)
  Fp x39(55);
  // loc(unknown)
  Fp x40(103);
  // loc(unknown)
  Fp x41(111);
  // loc(unknown)
  Fp x42(99);
  // loc(unknown)
  Fp x43(240);
  // loc(unknown)
  Fp x44(19);
  // loc(unknown)
  Fp x45(51);
  // loc(unknown)
  Fp x46(465814468);
  // loc(unknown)
  Fp x47(1996488705);
  // loc(unknown)
  Fp x48(50331648);
  // loc(unknown)
  Fp x49(248);
  // loc(unknown)
  Fp x50(127);
  // loc(unknown)
  Fp x51(48);
  // loc(unknown)
  Fp x52(64);
  // loc(unknown)
  Fp x53(1981808641);
  // loc(unknown)
  Fp x54(1006632961);
  // loc(unknown)
  Fp x55(1761607681);
  // loc(unknown)
  Fp x56(1887436801);
  // loc(unknown)
  Fp x57(96);
  // loc(unknown)
  Fp x58(32);
  // loc(unknown)
  Fp x59(1950351361);
  // loc(unknown)
  Fp x60(1997537281);
  // loc(unknown)
  Fp x61(128);
  // loc(unknown)
  Fp x62(16);
  // loc(unknown)
  Fp x63(9);
  // loc(unknown)
  Fp x64(8);
  // loc(unknown)
  Fp x65(7);
  // loc(unknown)
  Fp x66(6);
  // loc(unknown)
  Fp x67(5);
  // loc(unknown)
  Fp x68(15);
  // loc(unknown)
  Fp x69(14);
  // loc(unknown)
  Fp x70(13);
  // loc(unknown)
  Fp x71(12);
  // loc(unknown)
  Fp x72(11);
  // loc(unknown)
  Fp x73(10);
  // loc(unknown)
  Fp x74(67108864);
  // loc(unknown)
  Fp x75(1509949441);
  // loc(unknown)
  Fp x76(3);
  // loc(unknown)
  Fp x77(65536);
  // loc(unknown)
  Fp x78(4);
  // loc(unknown)
  Fp x79(16777216);
  // loc(unknown)
  Fp x80(56284855);
  // loc(unknown)
  Fp x81(56284854);
  // loc(unknown)
  Fp x82(56284853);
  // loc(unknown)
  Fp x83(56284852);
  // loc(unknown)
  Fp x84(56284851);
  // loc(unknown)
  Fp x85(56284850);
  // loc(unknown)
  Fp x86(56284849);
  // loc(unknown)
  Fp x87(56284848);
  // loc(unknown)
  Fp x88(2013265919);
  // loc(unknown)
  Fp x89(2013265920);
  // loc(unknown)
  Fp x90(256);
  // loc(unknown)
  Fp x91(2005401601);
  // loc(unknown)
  Fp x92(255);
  // loc(unknown)
  Fp x93(2);
  // loc(unknown)
  Fp x94(254);
  // loc(unknown)
  Fp x95(0);
  // loc(unknown)
  Fp x96(1);
  // loc("Top/Code/OneHot/hot[1](Reg)"("./zirgen/components/mux.h":49:25))
  auto x97 = arg0[2 * steps + ((cycle - 0) & mask)];
  assert(x97 != Fp::invalid());
  if (x97 != 0) {
    // loc("Top/Code/Mux/1(SetupInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x98 = arg0[9 * steps + ((cycle - 0) & mask)];
    assert(x98 != Fp::invalid());
    // loc("Top/Code/OneHot/hot[1](Reg)"("zirgen/circuit/rv32im/v1/edsl/top.cpp":17:75))
    auto x99 = arg0[2 * steps + ((cycle - 1) & mask)];
    assert(x99 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":17:17)
    auto x100 = x96 - x99;
    if (x100 != 0) {
      // loc("zirgen/components/bytes.cpp":21:3)
      {
        auto& reg = arg2[3 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":22:3)
      {
        auto& reg = arg2[4 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
    }
    // loc("zirgen/components/bytes.cpp":117:17)
    auto x101 = x96 - x100;
    if (x101 != 0) {
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x102 = arg2[44 * steps + ((cycle - 1) & mask)];
      assert(x102 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x103 = arg2[43 * steps + ((cycle - 1) & mask)];
      assert(x103 != Fp::invalid());
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x104 = x102 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x105 = (x104 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x106 = x96 - x105;
        if (x106 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[3 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x103);
            reg = x103;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x107 = x102 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[4 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x107);
            reg = x107;
          }
        }
        if (x105 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x108 = x103 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[3 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x108);
            reg = x108;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[4 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x109 = arg2[3 * steps + ((cycle - 0) & mask)];
      assert(x109 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x110 = arg2[4 * steps + ((cycle - 0) & mask)];
      assert(x110 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x111 = x109 - x103;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x112 = x110 - x102;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x113 = x111 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x114 = x111 * x113;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x114 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x115 = x112 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x116 = x111 * x115;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x116 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x117 = x112 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x118 = x113 * x117;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x118 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x119 = arg2[4 * steps + ((cycle - 0) & mask)];
    assert(x119 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x120 = arg2[3 * steps + ((cycle - 0) & mask)];
    assert(x120 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x121 = x119 - x94;
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x122 = (x121 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":35:16)
      auto x123 = x96 - x122;
      if (x123 != 0) {
        // loc("zirgen/components/bytes.cpp":36:7)
        {
          auto& reg = arg2[5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x120);
          reg = x120;
        }
        // loc("zirgen/components/bytes.cpp":37:16)
        auto x124 = x119 + x93;
        // loc("zirgen/components/bytes.cpp":37:7)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x124);
          reg = x124;
        }
      }
      if (x122 != 0) {
        // loc("zirgen/components/bytes.cpp":40:17)
        auto x125 = x120 + x96;
        // loc("zirgen/components/bytes.cpp":40:7)
        {
          auto& reg = arg2[5 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x125);
          reg = x125;
        }
        // loc("zirgen/components/bytes.cpp":41:7)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x126 = arg2[5 * steps + ((cycle - 0) & mask)];
    assert(x126 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x127 = arg2[6 * steps + ((cycle - 0) & mask)];
    assert(x127 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":44:18)
    auto x128 = x126 - x120;
    // loc("zirgen/components/bytes.cpp":45:17)
    auto x129 = x127 - x119;
    // loc("zirgen/components/bytes.cpp":48:19)
    auto x130 = x128 - x96;
    // loc("zirgen/components/bytes.cpp":48:7)
    auto x131 = x128 * x130;
    // loc("zirgen/components/bytes.cpp":48:7)
    assert(x131 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
    // loc("zirgen/components/bytes.cpp":51:19)
    auto x132 = x129 + x94;
    // loc("zirgen/components/bytes.cpp":51:7)
    auto x133 = x128 * x132;
    // loc("zirgen/components/bytes.cpp":51:7)
    assert(x133 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
    // loc("zirgen/components/bytes.cpp":54:25)
    auto x134 = x129 - x93;
    // loc("zirgen/components/bytes.cpp":54:7)
    auto x135 = x130 * x134;
    // loc("zirgen/components/bytes.cpp":54:7)
    assert(x135 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
    {
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x136 = x127 - x94;
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x137 = (x136 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":35:16)
      auto x138 = x96 - x137;
      if (x138 != 0) {
        // loc("zirgen/components/bytes.cpp":36:7)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x126);
          reg = x126;
        }
        // loc("zirgen/components/bytes.cpp":37:16)
        auto x139 = x127 + x93;
        // loc("zirgen/components/bytes.cpp":37:7)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x139);
          reg = x139;
        }
      }
      if (x137 != 0) {
        // loc("zirgen/components/bytes.cpp":40:17)
        auto x140 = x126 + x96;
        // loc("zirgen/components/bytes.cpp":40:7)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x140);
          reg = x140;
        }
        // loc("zirgen/components/bytes.cpp":41:7)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x141 = arg2[7 * steps + ((cycle - 0) & mask)];
    assert(x141 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x142 = arg2[8 * steps + ((cycle - 0) & mask)];
    assert(x142 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":44:18)
    auto x143 = x141 - x126;
    // loc("zirgen/components/bytes.cpp":45:17)
    auto x144 = x142 - x127;
    // loc("zirgen/components/bytes.cpp":48:19)
    auto x145 = x143 - x96;
    // loc("zirgen/components/bytes.cpp":48:7)
    auto x146 = x143 * x145;
    // loc("zirgen/components/bytes.cpp":48:7)
    assert(x146 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
    // loc("zirgen/components/bytes.cpp":51:19)
    auto x147 = x144 + x94;
    // loc("zirgen/components/bytes.cpp":51:7)
    auto x148 = x143 * x147;
    // loc("zirgen/components/bytes.cpp":51:7)
    assert(x148 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
    // loc("zirgen/components/bytes.cpp":54:25)
    auto x149 = x144 - x93;
    // loc("zirgen/components/bytes.cpp":54:7)
    auto x150 = x145 * x149;
    // loc("zirgen/components/bytes.cpp":54:7)
    assert(x150 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
    {
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x151 = x142 - x94;
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x152 = (x151 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":35:16)
      auto x153 = x96 - x152;
      if (x153 != 0) {
        // loc("zirgen/components/bytes.cpp":36:7)
        {
          auto& reg = arg2[9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x141);
          reg = x141;
        }
        // loc("zirgen/components/bytes.cpp":37:16)
        auto x154 = x142 + x93;
        // loc("zirgen/components/bytes.cpp":37:7)
        {
          auto& reg = arg2[10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x154);
          reg = x154;
        }
      }
      if (x152 != 0) {
        // loc("zirgen/components/bytes.cpp":40:17)
        auto x155 = x141 + x96;
        // loc("zirgen/components/bytes.cpp":40:7)
        {
          auto& reg = arg2[9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x155);
          reg = x155;
        }
        // loc("zirgen/components/bytes.cpp":41:7)
        {
          auto& reg = arg2[10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x156 = arg2[10 * steps + ((cycle - 0) & mask)];
    assert(x156 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x157 = arg2[9 * steps + ((cycle - 0) & mask)];
    assert(x157 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":45:17)
    auto x158 = x156 - x142;
    // loc("zirgen/components/bytes.cpp":44:18)
    auto x159 = x157 - x141;
    // loc("zirgen/components/bytes.cpp":48:19)
    auto x160 = x159 - x96;
    // loc("zirgen/components/bytes.cpp":48:7)
    auto x161 = x159 * x160;
    // loc("zirgen/components/bytes.cpp":48:7)
    assert(x161 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
    // loc("zirgen/components/bytes.cpp":51:19)
    auto x162 = x158 + x94;
    // loc("zirgen/components/bytes.cpp":51:7)
    auto x163 = x159 * x162;
    // loc("zirgen/components/bytes.cpp":51:7)
    assert(x163 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
    // loc("zirgen/components/bytes.cpp":54:25)
    auto x164 = x158 - x93;
    // loc("zirgen/components/bytes.cpp":54:7)
    auto x165 = x160 * x164;
    // loc("zirgen/components/bytes.cpp":54:7)
    assert(x165 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
    {
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x166 = x156 - x94;
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x167 = (x166 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":35:16)
      auto x168 = x96 - x167;
      if (x168 != 0) {
        // loc("zirgen/components/bytes.cpp":36:7)
        {
          auto& reg = arg2[11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x157);
          reg = x157;
        }
        // loc("zirgen/components/bytes.cpp":37:16)
        auto x169 = x156 + x93;
        // loc("zirgen/components/bytes.cpp":37:7)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x169);
          reg = x169;
        }
      }
      if (x167 != 0) {
        // loc("zirgen/components/bytes.cpp":40:17)
        auto x170 = x157 + x96;
        // loc("zirgen/components/bytes.cpp":40:7)
        {
          auto& reg = arg2[11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x170);
          reg = x170;
        }
        // loc("zirgen/components/bytes.cpp":41:7)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x171 = arg2[11 * steps + ((cycle - 0) & mask)];
    assert(x171 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x172 = arg2[12 * steps + ((cycle - 0) & mask)];
    assert(x172 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":44:18)
    auto x173 = x171 - x157;
    // loc("zirgen/components/bytes.cpp":45:17)
    auto x174 = x172 - x156;
    // loc("zirgen/components/bytes.cpp":48:19)
    auto x175 = x173 - x96;
    // loc("zirgen/components/bytes.cpp":48:7)
    auto x176 = x173 * x175;
    // loc("zirgen/components/bytes.cpp":48:7)
    assert(x176 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
    // loc("zirgen/components/bytes.cpp":51:19)
    auto x177 = x174 + x94;
    // loc("zirgen/components/bytes.cpp":51:7)
    auto x178 = x173 * x177;
    // loc("zirgen/components/bytes.cpp":51:7)
    assert(x178 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
    // loc("zirgen/components/bytes.cpp":54:25)
    auto x179 = x174 - x93;
    // loc("zirgen/components/bytes.cpp":54:7)
    auto x180 = x175 * x179;
    // loc("zirgen/components/bytes.cpp":54:7)
    assert(x180 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
    {
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x181 = x172 - x94;
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x182 = (x181 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":35:16)
      auto x183 = x96 - x182;
      if (x183 != 0) {
        // loc("zirgen/components/bytes.cpp":36:7)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x171);
          reg = x171;
        }
        // loc("zirgen/components/bytes.cpp":37:16)
        auto x184 = x172 + x93;
        // loc("zirgen/components/bytes.cpp":37:7)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x184);
          reg = x184;
        }
      }
      if (x182 != 0) {
        // loc("zirgen/components/bytes.cpp":40:17)
        auto x185 = x171 + x96;
        // loc("zirgen/components/bytes.cpp":40:7)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x185);
          reg = x185;
        }
        // loc("zirgen/components/bytes.cpp":41:7)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x186 = arg2[13 * steps + ((cycle - 0) & mask)];
    assert(x186 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x187 = arg2[14 * steps + ((cycle - 0) & mask)];
    assert(x187 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":44:18)
    auto x188 = x186 - x171;
    // loc("zirgen/components/bytes.cpp":45:17)
    auto x189 = x187 - x172;
    // loc("zirgen/components/bytes.cpp":48:19)
    auto x190 = x188 - x96;
    // loc("zirgen/components/bytes.cpp":48:7)
    auto x191 = x188 * x190;
    // loc("zirgen/components/bytes.cpp":48:7)
    assert(x191 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
    // loc("zirgen/components/bytes.cpp":51:19)
    auto x192 = x189 + x94;
    // loc("zirgen/components/bytes.cpp":51:7)
    auto x193 = x188 * x192;
    // loc("zirgen/components/bytes.cpp":51:7)
    assert(x193 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
    // loc("zirgen/components/bytes.cpp":54:25)
    auto x194 = x189 - x93;
    // loc("zirgen/components/bytes.cpp":54:7)
    auto x195 = x190 * x194;
    // loc("zirgen/components/bytes.cpp":54:7)
    assert(x195 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
    {
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x196 = x187 - x94;
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x197 = (x196 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":35:16)
      auto x198 = x96 - x197;
      if (x198 != 0) {
        // loc("zirgen/components/bytes.cpp":36:7)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x186);
          reg = x186;
        }
        // loc("zirgen/components/bytes.cpp":37:16)
        auto x199 = x187 + x93;
        // loc("zirgen/components/bytes.cpp":37:7)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x199);
          reg = x199;
        }
      }
      if (x197 != 0) {
        // loc("zirgen/components/bytes.cpp":40:17)
        auto x200 = x186 + x96;
        // loc("zirgen/components/bytes.cpp":40:7)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x200);
          reg = x200;
        }
        // loc("zirgen/components/bytes.cpp":41:7)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x201 = arg2[15 * steps + ((cycle - 0) & mask)];
    assert(x201 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x202 = arg2[16 * steps + ((cycle - 0) & mask)];
    assert(x202 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":44:18)
    auto x203 = x201 - x186;
    // loc("zirgen/components/bytes.cpp":45:17)
    auto x204 = x202 - x187;
    // loc("zirgen/components/bytes.cpp":48:19)
    auto x205 = x203 - x96;
    // loc("zirgen/components/bytes.cpp":48:7)
    auto x206 = x203 * x205;
    // loc("zirgen/components/bytes.cpp":48:7)
    assert(x206 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
    // loc("zirgen/components/bytes.cpp":51:19)
    auto x207 = x204 + x94;
    // loc("zirgen/components/bytes.cpp":51:7)
    auto x208 = x203 * x207;
    // loc("zirgen/components/bytes.cpp":51:7)
    assert(x208 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
    // loc("zirgen/components/bytes.cpp":54:25)
    auto x209 = x204 - x93;
    // loc("zirgen/components/bytes.cpp":54:7)
    auto x210 = x205 * x209;
    // loc("zirgen/components/bytes.cpp":54:7)
    assert(x210 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
    {
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x211 = x202 - x94;
      // loc("zirgen/components/bytes.cpp":34:20)
      auto x212 = (x211 == 0) ? Fp(1) : Fp(0);
      // loc("zirgen/components/bytes.cpp":35:16)
      auto x213 = x96 - x212;
      if (x213 != 0) {
        // loc("zirgen/components/bytes.cpp":36:7)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x201);
          reg = x201;
        }
        // loc("zirgen/components/bytes.cpp":37:16)
        auto x214 = x202 + x93;
        // loc("zirgen/components/bytes.cpp":37:7)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x214);
          reg = x214;
        }
      }
      if (x212 != 0) {
        // loc("zirgen/components/bytes.cpp":40:17)
        auto x215 = x201 + x96;
        // loc("zirgen/components/bytes.cpp":40:7)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x215);
          reg = x215;
        }
        // loc("zirgen/components/bytes.cpp":41:7)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x216 = arg2[17 * steps + ((cycle - 0) & mask)];
    assert(x216 != Fp::invalid());
    // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x217 = arg2[18 * steps + ((cycle - 0) & mask)];
    assert(x217 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":44:18)
    auto x218 = x216 - x201;
    // loc("zirgen/components/bytes.cpp":45:17)
    auto x219 = x217 - x202;
    // loc("zirgen/components/bytes.cpp":48:19)
    auto x220 = x218 - x96;
    // loc("zirgen/components/bytes.cpp":48:7)
    auto x221 = x218 * x220;
    // loc("zirgen/components/bytes.cpp":48:7)
    assert(x221 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
    // loc("zirgen/components/bytes.cpp":51:19)
    auto x222 = x219 + x94;
    // loc("zirgen/components/bytes.cpp":51:7)
    auto x223 = x218 * x222;
    // loc("zirgen/components/bytes.cpp":51:7)
    assert(x223 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
    // loc("zirgen/components/bytes.cpp":54:25)
    auto x224 = x219 - x93;
    // loc("zirgen/components/bytes.cpp":54:7)
    auto x225 = x220 * x224;
    // loc("zirgen/components/bytes.cpp":54:7)
    assert(x225 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
    if (x98 != 0) {
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[37 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[38 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[39 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[40 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[41 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[42 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":126:7)
      {
        auto& reg = arg2[43 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/bytes.cpp":127:7)
      {
        auto& reg = arg2[44 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
    }
    // loc("zirgen/components/bytes.cpp":130:16)
    auto x226 = x96 - x98;
    if (x226 != 0) {
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x227 = x217 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x228 = (x227 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x229 = x96 - x228;
        if (x229 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x216);
            reg = x216;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x230 = x217 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[20 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x230);
            reg = x230;
          }
        }
        if (x228 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x231 = x216 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x231);
            reg = x231;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[20 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x232 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x232 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x233 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x233 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x234 = x232 - x216;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x235 = x233 - x217;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x236 = x234 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x237 = x234 * x236;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x237 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x238 = x235 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x239 = x234 * x238;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x239 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x240 = x235 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x241 = x236 * x240;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x241 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x242 = x233 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x243 = (x242 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x244 = x96 - x243;
        if (x244 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x232);
            reg = x232;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x245 = x233 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x245);
            reg = x245;
          }
        }
        if (x243 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x246 = x232 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x246);
            reg = x246;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x247 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x247 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x248 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x248 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x249 = x247 - x232;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x250 = x248 - x233;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x251 = x249 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x252 = x249 * x251;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x252 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x253 = x250 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x254 = x249 * x253;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x254 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x255 = x250 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x256 = x251 * x255;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x256 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x257 = x248 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x258 = (x257 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x259 = x96 - x258;
        if (x259 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x247);
            reg = x247;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x260 = x248 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x260);
            reg = x260;
          }
        }
        if (x258 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x261 = x247 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x261);
            reg = x261;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x262 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x262 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x263 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x263 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x264 = x262 - x247;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x265 = x263 - x248;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x266 = x264 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x267 = x264 * x266;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x267 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x268 = x265 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x269 = x264 * x268;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x269 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x270 = x265 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x271 = x266 * x270;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x271 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x272 = x263 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x273 = (x272 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x274 = x96 - x273;
        if (x274 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x262);
            reg = x262;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x275 = x263 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x275);
            reg = x275;
          }
        }
        if (x273 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x276 = x262 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x276);
            reg = x276;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x277 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x277 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x278 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x278 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x279 = x277 - x262;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x280 = x278 - x263;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x281 = x279 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x282 = x279 * x281;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x282 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x283 = x280 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x284 = x279 * x283;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x284 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x285 = x280 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x286 = x281 * x285;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x286 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x287 = x278 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x288 = (x287 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x289 = x96 - x288;
        if (x289 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x277);
            reg = x277;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x290 = x278 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x290);
            reg = x290;
          }
        }
        if (x288 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x291 = x277 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x291);
            reg = x291;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x292 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x292 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x293 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x293 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x294 = x292 - x277;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x295 = x293 - x278;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x296 = x294 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x297 = x294 * x296;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x297 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x298 = x295 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x299 = x294 * x298;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x299 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x300 = x295 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x301 = x296 * x300;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x301 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x302 = x293 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x303 = (x302 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x304 = x96 - x303;
        if (x304 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x292);
            reg = x292;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x305 = x293 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x305);
            reg = x305;
          }
        }
        if (x303 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x306 = x292 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x306);
            reg = x306;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x307 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x307 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x308 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x308 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x309 = x307 - x292;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x310 = x308 - x293;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x311 = x309 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x312 = x309 * x311;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x312 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x313 = x310 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x314 = x309 * x313;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x314 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x315 = x310 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x316 = x311 * x315;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x316 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x317 = x308 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x318 = (x317 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x319 = x96 - x318;
        if (x319 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x307);
            reg = x307;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x320 = x308 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x320);
            reg = x320;
          }
        }
        if (x318 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x321 = x307 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x321);
            reg = x321;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x322 = arg2[31 * steps + ((cycle - 0) & mask)];
      assert(x322 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x323 = arg2[32 * steps + ((cycle - 0) & mask)];
      assert(x323 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x324 = x322 - x307;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x325 = x323 - x308;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x326 = x324 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x327 = x324 * x326;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x327 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x328 = x325 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x329 = x324 * x328;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x329 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x330 = x325 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x331 = x326 * x330;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x331 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x332 = x323 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x333 = (x332 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x334 = x96 - x333;
        if (x334 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x322);
            reg = x322;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x335 = x323 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x335);
            reg = x335;
          }
        }
        if (x333 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x336 = x322 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x336);
            reg = x336;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x337 = arg2[33 * steps + ((cycle - 0) & mask)];
      assert(x337 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x338 = arg2[34 * steps + ((cycle - 0) & mask)];
      assert(x338 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x339 = x337 - x322;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x340 = x338 - x323;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x341 = x339 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x342 = x339 * x341;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x342 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x343 = x340 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x344 = x339 * x343;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x344 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x345 = x340 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x346 = x341 * x345;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x346 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x347 = x338 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x348 = (x347 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x349 = x96 - x348;
        if (x349 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x337);
            reg = x337;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x350 = x338 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x350);
            reg = x350;
          }
        }
        if (x348 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x351 = x337 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x351);
            reg = x351;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x352 = arg2[35 * steps + ((cycle - 0) & mask)];
      assert(x352 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x353 = arg2[36 * steps + ((cycle - 0) & mask)];
      assert(x353 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x354 = x352 - x337;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x355 = x353 - x338;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x356 = x354 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x357 = x354 * x356;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x357 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x358 = x355 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x359 = x354 * x358;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x359 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x360 = x355 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x361 = x356 * x360;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x361 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x362 = x353 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x363 = (x362 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x364 = x96 - x363;
        if (x364 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[37 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x352);
            reg = x352;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x365 = x353 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[38 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x365);
            reg = x365;
          }
        }
        if (x363 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x366 = x352 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[37 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x366);
            reg = x366;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[38 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x367 = arg2[37 * steps + ((cycle - 0) & mask)];
      assert(x367 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x368 = arg2[38 * steps + ((cycle - 0) & mask)];
      assert(x368 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x369 = x367 - x352;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x370 = x368 - x353;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x371 = x369 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x372 = x369 * x371;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x372 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x373 = x370 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x374 = x369 * x373;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x374 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x375 = x370 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x376 = x371 * x375;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x376 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x377 = x368 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x378 = (x377 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x379 = x96 - x378;
        if (x379 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[39 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x367);
            reg = x367;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x380 = x368 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[40 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x380);
            reg = x380;
          }
        }
        if (x378 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x381 = x367 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[39 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x381);
            reg = x381;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[40 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x382 = arg2[39 * steps + ((cycle - 0) & mask)];
      assert(x382 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x383 = arg2[40 * steps + ((cycle - 0) & mask)];
      assert(x383 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x384 = x382 - x367;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x385 = x383 - x368;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x386 = x384 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x387 = x384 * x386;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x387 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x388 = x385 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x389 = x384 * x388;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x389 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x390 = x385 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x391 = x386 * x390;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x391 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x392 = x383 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x393 = (x392 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x394 = x96 - x393;
        if (x394 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[41 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x382);
            reg = x382;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x395 = x383 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[42 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x395);
            reg = x395;
          }
        }
        if (x393 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x396 = x382 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[41 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x396);
            reg = x396;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[42 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x397 = arg2[41 * steps + ((cycle - 0) & mask)];
      assert(x397 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x398 = arg2[42 * steps + ((cycle - 0) & mask)];
      assert(x398 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x399 = x397 - x382;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x400 = x398 - x383;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x401 = x399 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x402 = x399 * x401;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x402 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x403 = x400 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x404 = x399 * x403;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x404 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x405 = x400 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x406 = x401 * x405;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x406 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
      {
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x407 = x398 - x94;
        // loc("zirgen/components/bytes.cpp":34:20)
        auto x408 = (x407 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/components/bytes.cpp":35:16)
        auto x409 = x96 - x408;
        if (x409 != 0) {
          // loc("zirgen/components/bytes.cpp":36:7)
          {
            auto& reg = arg2[43 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x397);
            reg = x397;
          }
          // loc("zirgen/components/bytes.cpp":37:16)
          auto x410 = x398 + x93;
          // loc("zirgen/components/bytes.cpp":37:7)
          {
            auto& reg = arg2[44 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x410);
            reg = x410;
          }
        }
        if (x408 != 0) {
          // loc("zirgen/components/bytes.cpp":40:17)
          auto x411 = x397 + x96;
          // loc("zirgen/components/bytes.cpp":40:7)
          {
            auto& reg = arg2[43 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x411);
            reg = x411;
          }
          // loc("zirgen/components/bytes.cpp":41:7)
          {
            auto& reg = arg2[44 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x412 = arg2[43 * steps + ((cycle - 0) & mask)];
      assert(x412 != Fp::invalid());
      // loc("Top/mux(Mux)/bytes_setup(BytesSetupStep)/BytesSetup/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x413 = arg2[44 * steps + ((cycle - 0) & mask)];
      assert(x413 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":44:18)
      auto x414 = x412 - x397;
      // loc("zirgen/components/bytes.cpp":45:17)
      auto x415 = x413 - x398;
      // loc("zirgen/components/bytes.cpp":48:19)
      auto x416 = x414 - x96;
      // loc("zirgen/components/bytes.cpp":48:7)
      auto x417 = x414 * x416;
      // loc("zirgen/components/bytes.cpp":48:7)
      assert(x417 == 0 && "eqz failed at: zirgen/components/bytes.cpp:48");
      // loc("zirgen/components/bytes.cpp":51:19)
      auto x418 = x415 + x94;
      // loc("zirgen/components/bytes.cpp":51:7)
      auto x419 = x414 * x418;
      // loc("zirgen/components/bytes.cpp":51:7)
      assert(x419 == 0 && "eqz failed at: zirgen/components/bytes.cpp:51");
      // loc("zirgen/components/bytes.cpp":54:25)
      auto x420 = x415 - x93;
      // loc("zirgen/components/bytes.cpp":54:7)
      auto x421 = x416 * x420;
      // loc("zirgen/components/bytes.cpp":54:7)
      assert(x421 == 0 && "eqz failed at: zirgen/components/bytes.cpp:54");
    }
  }
  // loc("Top/Code/OneHot/hot[3](Reg)"("./zirgen/components/mux.h":49:25))
  auto x422 = arg0[4 * steps + ((cycle - 0) & mask)];
  assert(x422 != Fp::invalid());
  if (x422 != 0) {
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x423 = arg0[10 * steps + ((cycle - 0) & mask)];
    assert(x423 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":96:21)
      auto x424 = Fp(x423.asUInt32() & x92.asUInt32());
      // loc("zirgen/components/bytes.cpp":96:12)
      {
        auto& reg = arg2[15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x424);
        reg = x424;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
    auto x425 = arg2[15 * steps + ((cycle - 0) & mask)];
    assert(x425 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":97:11)
    auto x426 = x423 - x425;
    // loc("zirgen/components/bytes.cpp":97:10)
    auto x427 = x426 * x91;
    // loc("zirgen/components/bytes.cpp":101:3)
    {
      auto& reg = arg2[16 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x427);
      reg = x427;
    }
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x428 = arg0[11 * steps + ((cycle - 0) & mask)];
    assert(x428 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":96:21)
      auto x429 = Fp(x428.asUInt32() & x92.asUInt32());
      // loc("zirgen/components/bytes.cpp":96:12)
      {
        auto& reg = arg2[17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x429);
        reg = x429;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
    auto x430 = arg2[17 * steps + ((cycle - 0) & mask)];
    assert(x430 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":97:11)
    auto x431 = x428 - x430;
    // loc("zirgen/components/bytes.cpp":97:10)
    auto x432 = x431 * x91;
    // loc("zirgen/components/bytes.cpp":101:3)
    {
      auto& reg = arg2[18 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x432);
      reg = x432;
    }
    // loc("Top/Code/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x433 = arg0[0 * steps + ((cycle - 0) & mask)];
    assert(x433 != Fp::invalid());
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
    auto x434 = arg0[9 * steps + ((cycle - 0) & mask)];
    assert(x434 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x435 = arg2[16 * steps + ((cycle - 0) & mask)];
    assert(x435 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x436 = arg2[18 * steps + ((cycle - 0) & mask)];
    assert(x436 != Fp::invalid());
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[117 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x425);
      reg = x425;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[118 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x435);
      reg = x435;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[119 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x430);
      reg = x430;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[120 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x436);
      reg = x436;
    }
    {
      extern_args[0] = x434;
      extern_args[1] = x425;
      extern_args[2] = x435;
      extern_args[3] = x430;
      extern_args[4] = x436;
      extern_args[5] = x95;
      extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x437 = arg2[117 * steps + ((cycle - 0) & mask)];
    assert(x437 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x438 = arg2[118 * steps + ((cycle - 0) & mask)];
    assert(x438 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x439 = arg2[119 * steps + ((cycle - 0) & mask)];
    assert(x439 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x440 = arg2[120 * steps + ((cycle - 0) & mask)];
    assert(x440 != Fp::invalid());
    // loc("zirgen/components/ram.cpp":168:3)
    {
      auto& reg = arg2[114 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x434);
      reg = x434;
    }
    // loc("zirgen/components/ram.cpp":169:3)
    {
      auto& reg = arg2[115 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x433);
      reg = x433;
    }
    // loc("zirgen/components/ram.cpp":170:3)
    {
      auto& reg = arg2[116 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x95);
      reg = x95;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[117 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x437);
      reg = x437;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[118 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x438);
      reg = x438;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[119 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x439);
      reg = x439;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[120 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x440);
      reg = x440;
    }
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x441 = arg0[12 * steps + ((cycle - 0) & mask)];
    assert(x441 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":96:21)
      auto x442 = Fp(x441.asUInt32() & x92.asUInt32());
      // loc("zirgen/components/bytes.cpp":96:12)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x442);
        reg = x442;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
    auto x443 = arg2[19 * steps + ((cycle - 0) & mask)];
    assert(x443 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":97:11)
    auto x444 = x441 - x443;
    // loc("zirgen/components/bytes.cpp":97:10)
    auto x445 = x444 * x91;
    // loc("zirgen/components/bytes.cpp":101:3)
    {
      auto& reg = arg2[20 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x445);
      reg = x445;
    }
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x446 = arg0[13 * steps + ((cycle - 0) & mask)];
    assert(x446 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":96:21)
      auto x447 = Fp(x446.asUInt32() & x92.asUInt32());
      // loc("zirgen/components/bytes.cpp":96:12)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x447);
        reg = x447;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
    auto x448 = arg2[21 * steps + ((cycle - 0) & mask)];
    assert(x448 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":97:11)
    auto x449 = x446 - x448;
    // loc("zirgen/components/bytes.cpp":97:10)
    auto x450 = x449 * x91;
    // loc("zirgen/components/bytes.cpp":101:3)
    {
      auto& reg = arg2[22 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x450);
      reg = x450;
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x451 = arg2[20 * steps + ((cycle - 0) & mask)];
    assert(x451 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x452 = arg2[22 * steps + ((cycle - 0) & mask)];
    assert(x452 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":45:44)
    auto x453 = x434 + x96;
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[124 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x443);
      reg = x443;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[125 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x451);
      reg = x451;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[126 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x448);
      reg = x448;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[127 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x452);
      reg = x452;
    }
    {
      extern_args[0] = x453;
      extern_args[1] = x443;
      extern_args[2] = x451;
      extern_args[3] = x448;
      extern_args[4] = x452;
      extern_args[5] = x95;
      extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x454 = arg2[124 * steps + ((cycle - 0) & mask)];
    assert(x454 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x455 = arg2[125 * steps + ((cycle - 0) & mask)];
    assert(x455 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x456 = arg2[126 * steps + ((cycle - 0) & mask)];
    assert(x456 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x457 = arg2[127 * steps + ((cycle - 0) & mask)];
    assert(x457 != Fp::invalid());
    // loc("zirgen/components/ram.cpp":168:3)
    {
      auto& reg = arg2[121 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x453);
      reg = x453;
    }
    // loc("zirgen/components/ram.cpp":169:3)
    {
      auto& reg = arg2[122 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x433);
      reg = x433;
    }
    // loc("zirgen/components/ram.cpp":170:3)
    {
      auto& reg = arg2[123 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x95);
      reg = x95;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[124 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x454);
      reg = x454;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[125 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x455);
      reg = x455;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[126 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x456);
      reg = x456;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[127 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x457);
      reg = x457;
    }
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x458 = arg0[14 * steps + ((cycle - 0) & mask)];
    assert(x458 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":96:21)
      auto x459 = Fp(x458.asUInt32() & x92.asUInt32());
      // loc("zirgen/components/bytes.cpp":96:12)
      {
        auto& reg = arg2[23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x459);
        reg = x459;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
    auto x460 = arg2[23 * steps + ((cycle - 0) & mask)];
    assert(x460 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":97:11)
    auto x461 = x458 - x460;
    // loc("zirgen/components/bytes.cpp":97:10)
    auto x462 = x461 * x91;
    // loc("zirgen/components/bytes.cpp":101:3)
    {
      auto& reg = arg2[24 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x462);
      reg = x462;
    }
    // loc("Top/Code/Mux/3(RamLoadInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x463 = arg0[15 * steps + ((cycle - 0) & mask)];
    assert(x463 != Fp::invalid());
    {
      // loc("zirgen/components/bytes.cpp":96:21)
      auto x464 = Fp(x463.asUInt32() & x92.asUInt32());
      // loc("zirgen/components/bytes.cpp":96:12)
      {
        auto& reg = arg2[25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x464);
        reg = x464;
      }
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
    auto x465 = arg2[25 * steps + ((cycle - 0) & mask)];
    assert(x465 != Fp::invalid());
    // loc("zirgen/components/bytes.cpp":97:11)
    auto x466 = x463 - x465;
    // loc("zirgen/components/bytes.cpp":97:10)
    auto x467 = x466 * x91;
    // loc("zirgen/components/bytes.cpp":101:3)
    {
      auto& reg = arg2[26 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x467);
      reg = x467;
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x468 = arg2[24 * steps + ((cycle - 0) & mask)];
    assert(x468 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x469 = arg2[26 * steps + ((cycle - 0) & mask)];
    assert(x469 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":45:44)
    auto x470 = x434 + x93;
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[131 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x460);
      reg = x460;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[132 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x468);
      reg = x468;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[133 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x465);
      reg = x465;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[134 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x469);
      reg = x469;
    }
    {
      extern_args[0] = x470;
      extern_args[1] = x460;
      extern_args[2] = x468;
      extern_args[3] = x465;
      extern_args[4] = x469;
      extern_args[5] = x95;
      extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
    }
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x471 = arg2[131 * steps + ((cycle - 0) & mask)];
    assert(x471 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x472 = arg2[132 * steps + ((cycle - 0) & mask)];
    assert(x472 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x473 = arg2[133 * steps + ((cycle - 0) & mask)];
    assert(x473 != Fp::invalid());
    // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x474 = arg2[134 * steps + ((cycle - 0) & mask)];
    assert(x474 != Fp::invalid());
    // loc("zirgen/components/ram.cpp":168:3)
    {
      auto& reg = arg2[128 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x470);
      reg = x470;
    }
    // loc("zirgen/components/ram.cpp":169:3)
    {
      auto& reg = arg2[129 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x433);
      reg = x433;
    }
    // loc("zirgen/components/ram.cpp":170:3)
    {
      auto& reg = arg2[130 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x95);
      reg = x95;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[131 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x471);
      reg = x471;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[132 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x472);
      reg = x472;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[133 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x473);
      reg = x473;
    }
    // loc("zirgen/components/u32.cpp":34:5)
    {
      auto& reg = arg2[134 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x474);
      reg = x474;
    }
  }
  // loc("Top/Code/OneHot/hot[4](Reg)"("./zirgen/components/mux.h":49:25))
  auto x475 = arg0[5 * steps + ((cycle - 0) & mask)];
  assert(x475 != Fp::invalid());
  if (x475 != 0) {
    // loc("Top/Code/Mux/4(ResetInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x476 = arg0[10 * steps + ((cycle - 0) & mask)];
    assert(x476 != Fp::invalid());
    // loc("Top/Code/Mux/4(ResetInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x477 = arg0[11 * steps + ((cycle - 0) & mask)];
    assert(x477 != Fp::invalid());
    // loc("Top/Code/Mux/4(ResetInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x478 = arg0[12 * steps + ((cycle - 0) & mask)];
    assert(x478 != Fp::invalid());
    // loc("Top/Code/Mux/4(ResetInfo)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x479 = arg0[9 * steps + ((cycle - 0) & mask)];
    assert(x479 != Fp::invalid());
    // loc("Top/Code/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x480 = arg0[0 * steps + ((cycle - 0) & mask)];
    assert(x480 != Fp::invalid());
    if (x476 != 0) {
      {
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x481 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x481 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x482 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x482 != Fp::invalid());
      // loc("./zirgen/components/onehot.h":46:19)
      auto x483 = x482 * x93;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x484 = x481 + x483;
      // loc("./zirgen/components/onehot.h":40:8)
      assert(x484 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":54:5)
      {
        auto& reg = arg2[175 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      if (x479 != 0) {
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[0](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x485 = arg1[36];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[0](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x486 = arg1[37];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[0](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x487 = arg1[38];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[0](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x488 = arg1[39];
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x485);
          reg = x485;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x486);
          reg = x486;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x487);
          reg = x487;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x488);
          reg = x488;
        }
        {
          extern_args[0] = x87;
          extern_args[1] = x485;
          extern_args[2] = x486;
          extern_args[3] = x487;
          extern_args[4] = x488;
          extern_args[5] = x95;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x489 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x489 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x490 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x490 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x491 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x491 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x492 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x492 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x87);
          reg = x87;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x489);
          reg = x489;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x490);
          reg = x490;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x491);
          reg = x491;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x492);
          reg = x492;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[1](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x493 = arg1[40];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[1](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x494 = arg1[41];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[1](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x495 = arg1[42];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[1](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x496 = arg1[43];
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x493);
          reg = x493;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x494);
          reg = x494;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x495);
          reg = x495;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x496);
          reg = x496;
        }
        {
          extern_args[0] = x86;
          extern_args[1] = x493;
          extern_args[2] = x494;
          extern_args[3] = x495;
          extern_args[4] = x496;
          extern_args[5] = x95;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x497 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x497 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x498 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x498 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x499 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x499 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x500 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x500 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x86);
          reg = x86;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x497);
          reg = x497;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x498);
          reg = x498;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x499);
          reg = x499;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x500);
          reg = x500;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[2](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x501 = arg1[44];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[2](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x502 = arg1[45];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[2](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x503 = arg1[46];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[2](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x504 = arg1[47];
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x501);
          reg = x501;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x502);
          reg = x502;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x503);
          reg = x503;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x504);
          reg = x504;
        }
        {
          extern_args[0] = x85;
          extern_args[1] = x501;
          extern_args[2] = x502;
          extern_args[3] = x503;
          extern_args[4] = x504;
          extern_args[5] = x95;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x505 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x505 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x506 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x506 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x507 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x507 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x508 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x508 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x85);
          reg = x85;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x505);
          reg = x505;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x506);
          reg = x506;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x507);
          reg = x507;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x508);
          reg = x508;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[3](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x509 = arg1[48];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[3](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x510 = arg1[49];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[3](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x511 = arg1[50];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[3](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x512 = arg1[51];
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x509);
          reg = x509;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x510);
          reg = x510;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x511);
          reg = x511;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x512);
          reg = x512;
        }
        {
          extern_args[0] = x84;
          extern_args[1] = x509;
          extern_args[2] = x510;
          extern_args[3] = x511;
          extern_args[4] = x512;
          extern_args[5] = x95;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x513 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x513 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x514 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x514 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x515 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x515 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x516 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x516 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x84);
          reg = x84;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x513);
          reg = x513;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x514);
          reg = x514;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x515);
          reg = x515;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x516);
          reg = x516;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":62:17)
      auto x517 = x96 - x479;
      if (x517 != 0) {
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[4](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x518 = arg1[52];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[4](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x519 = arg1[53];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[4](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x520 = arg1[54];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[4](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x521 = arg1[55];
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x518);
          reg = x518;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x519);
          reg = x519;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x520);
          reg = x520;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x521);
          reg = x521;
        }
        {
          extern_args[0] = x83;
          extern_args[1] = x518;
          extern_args[2] = x519;
          extern_args[3] = x520;
          extern_args[4] = x521;
          extern_args[5] = x95;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x522 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x522 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x523 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x523 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x524 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x524 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x525 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x525 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x83);
          reg = x83;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x522);
          reg = x522;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x523);
          reg = x523;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x524);
          reg = x524;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x525);
          reg = x525;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[5](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x526 = arg1[56];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[5](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x527 = arg1[57];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[5](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x528 = arg1[58];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[5](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x529 = arg1[59];
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x526);
          reg = x526;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x527);
          reg = x527;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x528);
          reg = x528;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x529);
          reg = x529;
        }
        {
          extern_args[0] = x82;
          extern_args[1] = x526;
          extern_args[2] = x527;
          extern_args[3] = x528;
          extern_args[4] = x529;
          extern_args[5] = x95;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x530 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x530 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x531 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x531 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x532 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x532 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x533 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x533 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x82);
          reg = x82;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x530);
          reg = x530;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x531);
          reg = x531;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x532);
          reg = x532;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x533);
          reg = x533;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[6](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x534 = arg1[60];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[6](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x535 = arg1[61];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[6](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x536 = arg1[62];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[6](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x537 = arg1[63];
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x534);
          reg = x534;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x535);
          reg = x535;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x536);
          reg = x536;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x537);
          reg = x537;
        }
        {
          extern_args[0] = x81;
          extern_args[1] = x534;
          extern_args[2] = x535;
          extern_args[3] = x536;
          extern_args[4] = x537;
          extern_args[5] = x95;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x538 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x538 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x539 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x539 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x540 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x540 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x541 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x541 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x81);
          reg = x81;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x538);
          reg = x538;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x539);
          reg = x539;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x540);
          reg = x540;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x541);
          reg = x541;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[7](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x542 = arg1[64];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[7](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x543 = arg1[65];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[7](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x544 = arg1[66];
        // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/image_id(GlobalDigest)/word[7](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x545 = arg1[67];
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x542);
          reg = x542;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x543);
          reg = x543;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x544);
          reg = x544;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x545);
          reg = x545;
        }
        {
          extern_args[0] = x80;
          extern_args[1] = x542;
          extern_args[2] = x543;
          extern_args[3] = x544;
          extern_args[4] = x545;
          extern_args[5] = x95;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x546 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x546 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x547 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x547 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x548 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x548 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x549 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x549 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x80);
          reg = x80;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x546);
          reg = x546;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x547);
          reg = x547;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x548);
          reg = x548;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x549);
          reg = x549;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/pc(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x550 = arg1[32];
      // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/pc(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x551 = arg1[33];
      // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/pc(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x552 = arg1[34];
      // loc("Top/mux(Mux)/reset(ResetStep)/Global/pre(SystemState)/pc(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x553 = arg1[35];
      // loc("./zirgen/components/u32.h":25:12)
      auto x554 = x551 * x90;
      // loc("./zirgen/components/u32.h":26:12)
      auto x555 = x552 * x77;
      // loc("./zirgen/components/u32.h":27:12)
      auto x556 = x553 * x79;
      // loc("./zirgen/components/u32.h":24:12)
      auto x557 = x550 + x554;
      // loc("./zirgen/components/u32.h":24:12)
      auto x558 = x557 + x555;
      // loc("./zirgen/components/u32.h":24:12)
      auto x559 = x558 + x556;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x560 = x559 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x561 = Fp(x560.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x561);
          reg = x561;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x562 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x562 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x563 = x560 - x562;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x564 = x563 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x565 = Fp(x564.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x565);
          reg = x565;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x566 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x566 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x567 = x564 - x566;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x568 = x567 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x569 = Fp(x568.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x569);
          reg = x569;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x570 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x570 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x571 = x568 - x570;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x572 = x571 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x573 = Fp(x572.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x573);
          reg = x573;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x574 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x574 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x575 = x572 - x574;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x576 = x575 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x576);
        reg = x576;
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x577 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x577 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x578 = x96 - x577;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x579 = x577 * x578;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x579);
        reg = x579;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x580 = x93 - x577;
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x581 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x581 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x582 = x581 * x580;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x582 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
    }
    if (x477 != 0) {
      {
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x583 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x583 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x584 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x584 != Fp::invalid());
      // loc("./zirgen/components/onehot.h":46:19)
      auto x585 = x584 * x93;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x586 = x583 + x585;
      // loc("./zirgen/components/onehot.h":40:8)
      assert(x586 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x587 = arg2[6 * steps + ((cycle - 1) & mask)];
      assert(x587 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x588 = arg2[7 * steps + ((cycle - 1) & mask)];
      assert(x588 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x589 = arg2[70 * steps + ((cycle - 1) & mask)];
      assert(x589 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x590 = arg2[71 * steps + ((cycle - 1) & mask)];
      assert(x590 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x591 = arg2[8 * steps + ((cycle - 1) & mask)];
      assert(x591 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":28:10)
      auto x592 = x588 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":30:10)
      auto x593 = x589 * x79;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":31:10)
      auto x594 = x590 * x74;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":29:10)
      auto x595 = x591 * x77;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
      auto x596 = x587 + x592;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
      auto x597 = x596 + x595;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
      auto x598 = x597 + x593;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
      auto x599 = x598 + x594;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
      auto x600 = x599 - x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x601 = x600 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x602 = Fp(x601.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x602);
          reg = x602;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x603 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x603 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x604 = x601 - x603;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x605 = x604 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x606 = Fp(x605.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x606);
          reg = x606;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x607 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x607 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x608 = x605 - x607;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x609 = x608 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x610 = Fp(x609.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x610);
          reg = x610;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x611 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x611 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x612 = x609 - x611;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x613 = x612 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x614 = Fp(x613.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x614);
          reg = x614;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x615 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x615 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x616 = x613 - x615;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x617 = x616 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x617);
        reg = x617;
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x618 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x618 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x619 = x96 - x618;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x620 = x618 * x619;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x620);
        reg = x620;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x621 = x93 - x618;
      // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x622 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x622 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x623 = x622 * x621;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x623 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      if (x479 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x624 = arg2[101 * steps + ((cycle - 1) & mask)];
        assert(x624 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x625 = arg2[102 * steps + ((cycle - 1) & mask)];
        assert(x625 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x626 = arg2[103 * steps + ((cycle - 1) & mask)];
        assert(x626 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x627 = arg2[104 * steps + ((cycle - 1) & mask)];
        assert(x627 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x628 = arg2[105 * steps + ((cycle - 1) & mask)];
        assert(x628 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x629 = arg2[106 * steps + ((cycle - 1) & mask)];
        assert(x629 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x630 = arg2[107 * steps + ((cycle - 1) & mask)];
        assert(x630 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[8](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x631 = arg2[108 * steps + ((cycle - 1) & mask)];
        assert(x631 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[9](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x632 = arg2[109 * steps + ((cycle - 1) & mask)];
        assert(x632 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[10](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x633 = arg2[110 * steps + ((cycle - 1) & mask)];
        assert(x633 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[11](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x634 = arg2[111 * steps + ((cycle - 1) & mask)];
        assert(x634 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[12](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x635 = arg2[112 * steps + ((cycle - 1) & mask)];
        assert(x635 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[13](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x636 = arg2[113 * steps + ((cycle - 1) & mask)];
        assert(x636 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[14](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x637 = arg2[114 * steps + ((cycle - 1) & mask)];
        assert(x637 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[15](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x638 = arg2[115 * steps + ((cycle - 1) & mask)];
        assert(x638 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x639 = x625 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x640 = x626 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x641 = x627 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x642 = x628 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x643 = x629 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x644 = x630 * x65;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x645 = x631 * x64;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x646 = x632 * x63;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x647 = x633 * x73;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x648 = x634 * x72;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x649 = x635 * x71;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x650 = x636 * x70;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x651 = x637 * x69;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x652 = x638 * x68;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x653 = x624 + x639;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x654 = x653 + x640;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x655 = x654 + x641;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x656 = x655 + x642;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x657 = x656 + x643;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x658 = x657 + x644;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x659 = x658 + x645;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x660 = x659 + x646;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x661 = x660 + x647;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x662 = x661 + x648;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x663 = x662 + x649;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x664 = x663 + x650;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x665 = x664 + x651;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x666 = x665 + x652;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":77:42)
        auto x667 = x666 - x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":77:42)
        assert(x667 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:77");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/15(HaltCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":79:61))
        auto x668 = arg2[116 * steps + ((cycle - 1) & mask)];
        assert(x668 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":79:7)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x668);
          reg = x668;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/15(HaltCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":81:53))
        auto x669 = arg2[118 * steps + ((cycle - 1) & mask)];
        assert(x669 != Fp::invalid());
        {
          extern_args[0] = x669;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x670 = extern_outs[0];
          auto x671 = extern_outs[1];
          auto x672 = extern_outs[2];
          auto x673 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x670);
            reg = x670;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x671);
            reg = x671;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x672);
            reg = x672;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x673);
            reg = x673;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x674 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x674 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x675 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x675 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x676 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x676 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x677 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x677 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x669);
          reg = x669;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x674);
          reg = x674;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x675);
          reg = x675;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x676);
          reg = x676;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x677);
          reg = x677;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[106] = x674;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[107] = x675;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[108] = x676;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[109] = x677;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":84:55)
        auto x678 = x669 + x96;
        {
          extern_args[0] = x678;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x679 = extern_outs[0];
          auto x680 = extern_outs[1];
          auto x681 = extern_outs[2];
          auto x682 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x679);
            reg = x679;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x680);
            reg = x680;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x681);
            reg = x681;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x682);
            reg = x682;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x683 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x683 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x684 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x684 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x685 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x685 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x686 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x686 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x678);
          reg = x678;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x683);
          reg = x683;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x684);
          reg = x684;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x685);
          reg = x685;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x686);
          reg = x686;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[110] = x683;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[111] = x684;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[112] = x685;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[113] = x686;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":84:55)
        auto x687 = x669 + x93;
        {
          extern_args[0] = x687;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x688 = extern_outs[0];
          auto x689 = extern_outs[1];
          auto x690 = extern_outs[2];
          auto x691 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x688);
            reg = x688;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x689);
            reg = x689;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x690);
            reg = x690;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x691);
            reg = x691;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x692 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x692 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x693 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x693 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x694 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x694 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x695 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x695 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x687);
          reg = x687;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x692);
          reg = x692;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x693);
          reg = x693;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x694);
          reg = x694;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x695);
          reg = x695;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[114] = x692;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[115] = x693;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[116] = x694;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[117] = x695;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":84:55)
        auto x696 = x669 + x76;
        {
          extern_args[0] = x696;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x697 = extern_outs[0];
          auto x698 = extern_outs[1];
          auto x699 = extern_outs[2];
          auto x700 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x697);
            reg = x697;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x698);
            reg = x698;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x699);
            reg = x699;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x700);
            reg = x700;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x701 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x701 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x702 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x702 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x703 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x703 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x704 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x704 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x696);
          reg = x696;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x701);
          reg = x701;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x702);
          reg = x702;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x703);
          reg = x703;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x704);
          reg = x704;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[118] = x701;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[119] = x702;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[120] = x703;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[121] = x704;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":88:17)
      auto x705 = x96 - x479;
      if (x705 != 0) {
        // loc("Top/mux(Mux)/reset(ResetStep)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":91:50))
        auto x706 = arg2[175 * steps + ((cycle - 1) & mask)];
        assert(x706 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/15(HaltCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":90:53))
        auto x707 = arg2[118 * steps + ((cycle - 2) & mask)];
        assert(x707 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":91:7)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x706);
          reg = x706;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":95:45)
        auto x708 = x707 + x78;
        {
          extern_args[0] = x708;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x709 = extern_outs[0];
          auto x710 = extern_outs[1];
          auto x711 = extern_outs[2];
          auto x712 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x709);
            reg = x709;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x710);
            reg = x710;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x711);
            reg = x711;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x712);
            reg = x712;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x713 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x713 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x714 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x714 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x715 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x715 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x716 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x716 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x708);
          reg = x708;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x713);
          reg = x713;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x714);
          reg = x714;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x715);
          reg = x715;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x716);
          reg = x716;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[122] = x713;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[123] = x714;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[124] = x715;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[125] = x716;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":95:45)
        auto x717 = x708 + x96;
        {
          extern_args[0] = x717;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x718 = extern_outs[0];
          auto x719 = extern_outs[1];
          auto x720 = extern_outs[2];
          auto x721 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x718);
            reg = x718;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x719);
            reg = x719;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x720);
            reg = x720;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x721);
            reg = x721;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x722 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x722 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x723 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x723 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x724 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x724 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x725 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x725 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x717);
          reg = x717;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x722);
          reg = x722;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x723);
          reg = x723;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x724);
          reg = x724;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x725);
          reg = x725;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[126] = x722;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[127] = x723;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[128] = x724;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[129] = x725;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":95:45)
        auto x726 = x708 + x93;
        {
          extern_args[0] = x726;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x727 = extern_outs[0];
          auto x728 = extern_outs[1];
          auto x729 = extern_outs[2];
          auto x730 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x727);
            reg = x727;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x728);
            reg = x728;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x729);
            reg = x729;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x730);
            reg = x730;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x731 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x731 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x732 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x732 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x733 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x733 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x734 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x734 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x726);
          reg = x726;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x731);
          reg = x731;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x732);
          reg = x732;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x733);
          reg = x733;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x734);
          reg = x734;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[130] = x731;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[131] = x732;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[132] = x733;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[133] = x734;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":95:45)
        auto x735 = x708 + x76;
        {
          extern_args[0] = x735;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x736 = extern_outs[0];
          auto x737 = extern_outs[1];
          auto x738 = extern_outs[2];
          auto x739 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x736);
            reg = x736;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x737);
            reg = x737;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x738);
            reg = x738;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x739);
            reg = x739;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x740 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x740 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x741 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x741 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x742 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x742 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x743 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x743 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x735);
          reg = x735;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x740);
          reg = x740;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x741);
          reg = x741;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x742);
          reg = x742;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x743);
          reg = x743;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[134] = x740;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[135] = x741;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[136] = x742;
        // loc("zirgen/components/u32.cpp":34:5)
        arg1[137] = x743;
      }
    }
    if (x478 != 0) {
      // loc("Top/mux(Mux)/reset(ResetStep)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":101:48))
      auto x744 = arg2[175 * steps + ((cycle - 1) & mask)];
      assert(x744 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":101:5)
      {
        auto& reg = arg2[175 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x744);
        reg = x744;
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":102:19))
      auto x745 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x745 != Fp::invalid());
      {
        // loc("./zirgen/components/onehot.h":37:26)
        auto x746 = (x745 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x746);
          reg = x746;
        }
        // loc("./zirgen/components/onehot.h":37:26)
        auto x747 = x745 - x96;
        // loc("./zirgen/components/onehot.h":37:26)
        auto x748 = (x747 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x748);
          reg = x748;
        }
        // loc("./zirgen/components/onehot.h":37:26)
        auto x749 = x745 - x93;
        // loc("./zirgen/components/onehot.h":37:26)
        auto x750 = (x749 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x750);
          reg = x750;
        }
      }
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x751 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x751 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x752 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x752 != Fp::invalid());
      // loc("./zirgen/components/onehot.h":46:19)
      auto x753 = x752 * x93;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x754 = x751 + x753;
      // loc("./zirgen/components/onehot.h":40:8)
      auto x755 = x754 - x745;
      // loc("./zirgen/components/onehot.h":40:8)
      assert(x755 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      // loc("Top/mux(Mux)/reset(ResetStep)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":105:31))
      auto x756 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x756 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":105:27)
      auto x757 = x96 - x756;
      if (x479 != 0) {
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x758 = arg2[6 * steps + ((cycle - 1) & mask)];
        assert(x758 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x759 = arg2[7 * steps + ((cycle - 1) & mask)];
        assert(x759 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x760 = arg2[70 * steps + ((cycle - 1) & mask)];
        assert(x760 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x761 = arg2[71 * steps + ((cycle - 1) & mask)];
        assert(x761 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x762 = arg2[8 * steps + ((cycle - 1) & mask)];
        assert(x762 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":28:10)
        auto x763 = x759 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":30:10)
        auto x764 = x760 * x79;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":31:10)
        auto x765 = x761 * x74;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":29:10)
        auto x766 = x762 * x77;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
        auto x767 = x758 + x763;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
        auto x768 = x767 + x766;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
        auto x769 = x768 + x764;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
        auto x770 = x769 + x765;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
        auto x771 = x770 - x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x772 = Fp(x771.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x772);
            reg = x772;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x773 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x773 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x774 = x771 - x773;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x775 = x774 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x776 = Fp(x775.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x776);
            reg = x776;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x777 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x777 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x778 = x775 - x777;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x779 = x778 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x780 = Fp(x779.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x780);
            reg = x780;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x781 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x781 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x782 = x779 - x781;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x783 = x782 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x784 = Fp(x783.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x784);
            reg = x784;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x785 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x785 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x786 = x783 - x785;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x787 = x786 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x787);
          reg = x787;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x788 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x788 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x789 = x96 - x788;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x790 = x788 * x789;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x790);
          reg = x790;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x791 = x93 - x788;
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x792 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x792 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x793 = x792 * x791;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x793 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        {
          extern_args[0] = x87;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x794 = extern_outs[0];
          auto x795 = extern_outs[1];
          auto x796 = extern_outs[2];
          auto x797 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x794);
            reg = x794;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x795);
            reg = x795;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x796);
            reg = x796;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x797);
            reg = x797;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x798 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x798 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x799 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x799 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x800 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x800 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x801 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x801 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x87);
          reg = x87;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x798);
          reg = x798;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x799);
          reg = x799;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x800);
          reg = x800;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x801);
          reg = x801;
        }
        // loc("zirgen/components/u32.cpp":40:19)
        auto x802 = x798 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[72] = x802;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x803 = x799 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[73] = x803;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x804 = x800 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[74] = x804;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x805 = x801 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[75] = x805;
        {
          extern_args[0] = x86;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x806 = extern_outs[0];
          auto x807 = extern_outs[1];
          auto x808 = extern_outs[2];
          auto x809 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x806);
            reg = x806;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x807);
            reg = x807;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x808);
            reg = x808;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x809);
            reg = x809;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x810 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x810 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x811 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x811 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x812 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x812 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x813 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x813 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x86);
          reg = x86;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x810);
          reg = x810;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x811);
          reg = x811;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x812);
          reg = x812;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x813);
          reg = x813;
        }
        // loc("zirgen/components/u32.cpp":40:19)
        auto x814 = x810 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[76] = x814;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x815 = x811 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[77] = x815;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x816 = x812 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[78] = x816;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x817 = x813 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[79] = x817;
        {
          extern_args[0] = x85;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x818 = extern_outs[0];
          auto x819 = extern_outs[1];
          auto x820 = extern_outs[2];
          auto x821 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x818);
            reg = x818;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x819);
            reg = x819;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x820);
            reg = x820;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x821);
            reg = x821;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x822 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x822 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x823 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x823 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x824 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x824 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x825 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x825 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x85);
          reg = x85;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x822);
          reg = x822;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x823);
          reg = x823;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x824);
          reg = x824;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x825);
          reg = x825;
        }
        // loc("zirgen/components/u32.cpp":40:19)
        auto x826 = x822 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[80] = x826;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x827 = x823 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[81] = x827;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x828 = x824 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[82] = x828;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x829 = x825 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[83] = x829;
        {
          extern_args[0] = x84;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x830 = extern_outs[0];
          auto x831 = extern_outs[1];
          auto x832 = extern_outs[2];
          auto x833 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x830);
            reg = x830;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x831);
            reg = x831;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x832);
            reg = x832;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x833);
            reg = x833;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x834 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x834 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x835 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x835 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x836 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x836 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x837 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x837 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x84);
          reg = x84;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x834);
          reg = x834;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x835);
          reg = x835;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x836);
          reg = x836;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x837);
          reg = x837;
        }
        // loc("zirgen/components/u32.cpp":40:19)
        auto x838 = x834 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[84] = x838;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x839 = x835 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[85] = x839;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x840 = x836 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[86] = x840;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x841 = x837 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[87] = x841;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x842 = x773 * x757;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":35:52)
        auto x843 = x788 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":35:41)
        auto x844 = x785 + x843;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[68] = x842;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x845 = x777 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[69] = x845;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x846 = x781 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[70] = x846;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x847 = x844 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[71] = x847;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":117:17)
      auto x848 = x96 - x479;
      if (x848 != 0) {
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x849 = arg2[6 * steps + ((cycle - 1) & mask)];
        assert(x849 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x850 = arg2[7 * steps + ((cycle - 1) & mask)];
        assert(x850 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x851 = arg2[70 * steps + ((cycle - 1) & mask)];
        assert(x851 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x852 = arg2[71 * steps + ((cycle - 1) & mask)];
        assert(x852 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x853 = arg2[8 * steps + ((cycle - 1) & mask)];
        assert(x853 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":28:10)
        auto x854 = x850 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":30:10)
        auto x855 = x851 * x79;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":31:10)
        auto x856 = x852 * x74;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":29:10)
        auto x857 = x853 * x77;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
        auto x858 = x849 + x854;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
        auto x859 = x858 + x857;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
        auto x860 = x859 + x855;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
        auto x861 = x860 + x856;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
        auto x862 = x861 - x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x863 = x862 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x864 = Fp(x863.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x864);
            reg = x864;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x865 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x865 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x866 = x863 - x865;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x867 = x866 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x868 = Fp(x867.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x868);
            reg = x868;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x869 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x869 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x870 = x867 - x869;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x871 = x870 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x872 = Fp(x871.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x872);
            reg = x872;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x873 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x873 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x874 = x871 - x873;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x875 = x874 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x876 = Fp(x875.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x876);
            reg = x876;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x877 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x877 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x878 = x875 - x877;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x879 = x878 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x879);
          reg = x879;
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x880 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x880 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x881 = x96 - x880;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x882 = x880 * x881;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x882);
          reg = x882;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x883 = x93 - x880;
        // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x884 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x884 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x885 = x884 * x883;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x885 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        {
          extern_args[0] = x83;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x886 = extern_outs[0];
          auto x887 = extern_outs[1];
          auto x888 = extern_outs[2];
          auto x889 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x886);
            reg = x886;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x887);
            reg = x887;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x888);
            reg = x888;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x889);
            reg = x889;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x890 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x890 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x891 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x891 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x892 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x892 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x893 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x893 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x83);
          reg = x83;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x890);
          reg = x890;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x891);
          reg = x891;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x892);
          reg = x892;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x893);
          reg = x893;
        }
        // loc("zirgen/components/u32.cpp":40:19)
        auto x894 = x890 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[88] = x894;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x895 = x891 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[89] = x895;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x896 = x892 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[90] = x896;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x897 = x893 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[91] = x897;
        {
          extern_args[0] = x82;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x898 = extern_outs[0];
          auto x899 = extern_outs[1];
          auto x900 = extern_outs[2];
          auto x901 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x898);
            reg = x898;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x899);
            reg = x899;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x900);
            reg = x900;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x901);
            reg = x901;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x902 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x902 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x903 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x903 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x904 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x904 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x905 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x905 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x82);
          reg = x82;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x902);
          reg = x902;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x903);
          reg = x903;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x904);
          reg = x904;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x905);
          reg = x905;
        }
        // loc("zirgen/components/u32.cpp":40:19)
        auto x906 = x902 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[92] = x906;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x907 = x903 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[93] = x907;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x908 = x904 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[94] = x908;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x909 = x905 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[95] = x909;
        {
          extern_args[0] = x81;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x910 = extern_outs[0];
          auto x911 = extern_outs[1];
          auto x912 = extern_outs[2];
          auto x913 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x910);
            reg = x910;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x911);
            reg = x911;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x912);
            reg = x912;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x913);
            reg = x913;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x914 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x914 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x915 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x915 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x916 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x916 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x917 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x917 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x81);
          reg = x81;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x914);
          reg = x914;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x915);
          reg = x915;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x916);
          reg = x916;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x917);
          reg = x917;
        }
        // loc("zirgen/components/u32.cpp":40:19)
        auto x918 = x914 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[96] = x918;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x919 = x915 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[97] = x919;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x920 = x916 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[98] = x920;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x921 = x917 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[99] = x921;
        {
          extern_args[0] = x80;
          extern_args[1] = x95;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x922 = extern_outs[0];
          auto x923 = extern_outs[1];
          auto x924 = extern_outs[2];
          auto x925 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x922);
            reg = x922;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x923);
            reg = x923;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x924);
            reg = x924;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x925);
            reg = x925;
          }
        }
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x926 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x926 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x927 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x927 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x928 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x928 != Fp::invalid());
        // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x929 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x929 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x80);
          reg = x80;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x480);
          reg = x480;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x926);
          reg = x926;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x927);
          reg = x927;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x928);
          reg = x928;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x929);
          reg = x929;
        }
        // loc("zirgen/components/u32.cpp":40:19)
        auto x930 = x926 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[100] = x930;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x931 = x927 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[101] = x931;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x932 = x928 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[102] = x932;
        // loc("zirgen/components/u32.cpp":40:19)
        auto x933 = x929 * x757;
        // loc("zirgen/components/u32.cpp":40:5)
        arg1[103] = x933;
      }
    }
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":127:3)
    {
      auto& reg = arg2[99 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x62);
      reg = x62;
    }
    // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x934 = arg2[6 * steps + ((cycle - 0) & mask)];
    assert(x934 != Fp::invalid());
    // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x935 = arg2[7 * steps + ((cycle - 0) & mask)];
    assert(x935 != Fp::invalid());
    // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x936 = arg2[70 * steps + ((cycle - 0) & mask)];
    assert(x936 != Fp::invalid());
    // loc("Top/mux(Mux)/reset(ResetStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x937 = arg2[71 * steps + ((cycle - 0) & mask)];
    assert(x937 != Fp::invalid());
    // loc("Top/mux(Mux)/reset(ResetStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x938 = arg2[8 * steps + ((cycle - 0) & mask)];
    assert(x938 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":28:10)
    auto x939 = x935 * x90;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":30:10)
    auto x940 = x936 * x79;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":31:10)
    auto x941 = x937 * x74;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":29:10)
    auto x942 = x938 * x77;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
    auto x943 = x934 + x939;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
    auto x944 = x943 + x942;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
    auto x945 = x944 + x940;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
    auto x946 = x945 + x941;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
    auto x947 = x946 - x78;
    extern_args[0] = x480;
    extern_args[1] = x947;
    extern_log(ctx, cycle, "%u: Reset: PC = %10x", extern_args, extern_outs);
  }
  // loc("Top/Code/OneHot/hot[5](Reg)"("./zirgen/components/mux.h":49:25))
  auto x948 = arg0[6 * steps + ((cycle - 0) & mask)];
  assert(x948 != Fp::invalid());
  if (x948 != 0) {
    // loc("Top/Code/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x949 = arg0[0 * steps + ((cycle - 0) & mask)];
    assert(x949 != Fp::invalid());
    // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x950 = arg2[6 * steps + ((cycle - 1) & mask)];
    assert(x950 != Fp::invalid());
    // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x951 = arg2[7 * steps + ((cycle - 1) & mask)];
    assert(x951 != Fp::invalid());
    // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x952 = arg2[70 * steps + ((cycle - 1) & mask)];
    assert(x952 != Fp::invalid());
    // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
    auto x953 = arg2[71 * steps + ((cycle - 1) & mask)];
    assert(x953 != Fp::invalid());
    // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
    auto x954 = arg2[8 * steps + ((cycle - 1) & mask)];
    assert(x954 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":28:10)
    auto x955 = x951 * x90;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":30:10)
    auto x956 = x952 * x79;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":31:10)
    auto x957 = x953 * x74;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":29:10)
    auto x958 = x954 * x77;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
    auto x959 = x950 + x955;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
    auto x960 = x959 + x958;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
    auto x961 = x960 + x956;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
    auto x962 = x961 + x957;
    // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":27:10)
    auto x963 = x962 - x78;
    {
      // loc("Top/mux(Mux)/body(BodyStep)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":191:45))
      auto x964 = arg2[99 * steps + ((cycle - 1) & mask)];
      assert(x964 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":192:24)
      auto x965 = x964 - x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":192:24)
      auto x966 = (x965 == 0) ? Fp(1) : Fp(0);
      if (x966 != 0) {
        extern_args[0] = x949;
        extern_args[1] = x963;
        extern_log(ctx, cycle, "%u: BODY pc: %10x", extern_args, extern_outs);
        extern_args[0] = x963;
        extern_trace(ctx, cycle, "", extern_args, extern_outs);
        extern_args[0] = x949;
        extern_args[1] = x963;
        extern_getMajor(ctx, cycle, "", extern_args, extern_outs);
        auto x967 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x968 = (x967 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[100 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x968);
            reg = x968;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x969 = x967 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x970 = (x969 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[101 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x970);
            reg = x970;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x971 = x967 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x972 = (x971 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[102 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x972);
            reg = x972;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x973 = x967 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x974 = (x973 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[103 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x974);
            reg = x974;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x975 = x967 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x976 = (x975 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[104 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x976);
            reg = x976;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x977 = x967 - x67;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x978 = (x977 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[105 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x978);
            reg = x978;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x979 = x967 - x66;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x980 = (x979 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[106 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x980);
            reg = x980;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x981 = x967 - x65;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x982 = (x981 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[107 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x982);
            reg = x982;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x983 = x967 - x64;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x984 = (x983 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[108 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x984);
            reg = x984;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x985 = x967 - x63;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x986 = (x985 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[109 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x986);
            reg = x986;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x987 = x967 - x73;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x988 = (x987 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[110 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x988);
            reg = x988;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x989 = x967 - x72;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x990 = (x989 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[111 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x990);
            reg = x990;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x991 = x967 - x71;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x992 = (x991 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[112 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x992);
            reg = x992;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x993 = x967 - x70;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x994 = (x993 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[113 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x994);
            reg = x994;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x995 = x967 - x69;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x996 = (x995 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[114 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x996);
            reg = x996;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x997 = x967 - x68;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x998 = (x997 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[115 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x998);
            reg = x998;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x999 = arg2[101 * steps + ((cycle - 0) & mask)];
        assert(x999 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1000 = arg2[102 * steps + ((cycle - 0) & mask)];
        assert(x1000 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1001 = arg2[103 * steps + ((cycle - 0) & mask)];
        assert(x1001 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1002 = arg2[104 * steps + ((cycle - 0) & mask)];
        assert(x1002 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1003 = arg2[105 * steps + ((cycle - 0) & mask)];
        assert(x1003 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1004 = arg2[106 * steps + ((cycle - 0) & mask)];
        assert(x1004 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1005 = arg2[107 * steps + ((cycle - 0) & mask)];
        assert(x1005 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[8](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1006 = arg2[108 * steps + ((cycle - 0) & mask)];
        assert(x1006 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[9](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1007 = arg2[109 * steps + ((cycle - 0) & mask)];
        assert(x1007 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[10](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1008 = arg2[110 * steps + ((cycle - 0) & mask)];
        assert(x1008 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[11](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1009 = arg2[111 * steps + ((cycle - 0) & mask)];
        assert(x1009 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[12](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1010 = arg2[112 * steps + ((cycle - 0) & mask)];
        assert(x1010 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[13](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1011 = arg2[113 * steps + ((cycle - 0) & mask)];
        assert(x1011 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[14](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1012 = arg2[114 * steps + ((cycle - 0) & mask)];
        assert(x1012 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[15](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1013 = arg2[115 * steps + ((cycle - 0) & mask)];
        assert(x1013 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1014 = x1000 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1015 = x1001 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1016 = x1002 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1017 = x1003 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1018 = x1004 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1019 = x1005 * x65;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1020 = x1006 * x64;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1021 = x1007 * x63;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1022 = x1008 * x73;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1023 = x1009 * x72;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1024 = x1010 * x71;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1025 = x1011 * x70;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1026 = x1012 * x69;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1027 = x1013 * x68;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1028 = x999 + x1014;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1029 = x1028 + x1015;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1030 = x1029 + x1016;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1031 = x1030 + x1017;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1032 = x1031 + x1018;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1033 = x1032 + x1019;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1034 = x1033 + x1020;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1035 = x1034 + x1021;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1036 = x1035 + x1022;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1037 = x1036 + x1023;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1038 = x1037 + x1024;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1039 = x1038 + x1025;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1040 = x1039 + x1026;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1041 = x1040 + x1027;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x1042 = x1041 - x967;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x1042 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":199:20)
      auto x1043 = x96 - x966;
      if (x1043 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":200:47)
        auto x1044 = x964 - x68;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":200:47)
        auto x1045 = (x1044 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":200:47)
        auto x1046 = x96 - x1045;
        if (x1046 != 0) {
          extern_args[0] = x949;
          extern_args[1] = x963;
          extern_args[2] = x964;
          extern_log(ctx, cycle, "%u: BODY pc: %10x, major = %u", extern_args, extern_outs);
        }
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1047 = (x964 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[100 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1047);
            reg = x1047;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1048 = x964 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1049 = (x1048 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[101 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1049);
            reg = x1049;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1050 = x964 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1051 = (x1050 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[102 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1051);
            reg = x1051;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1052 = x964 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1053 = (x1052 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[103 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1053);
            reg = x1053;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1054 = x964 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1055 = (x1054 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[104 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1055);
            reg = x1055;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1056 = x964 - x67;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1057 = (x1056 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[105 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1057);
            reg = x1057;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1058 = x964 - x66;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1059 = (x1058 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[106 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1059);
            reg = x1059;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1060 = x964 - x65;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1061 = (x1060 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[107 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1061);
            reg = x1061;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1062 = x964 - x64;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1063 = (x1062 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[108 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1063);
            reg = x1063;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1064 = x964 - x63;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1065 = (x1064 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[109 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1065);
            reg = x1065;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1066 = x964 - x73;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1067 = (x1066 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[110 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1067);
            reg = x1067;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1068 = x964 - x72;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1069 = (x1068 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[111 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1069);
            reg = x1069;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1070 = x964 - x71;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1071 = (x1070 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[112 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1071);
            reg = x1071;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1072 = x964 - x70;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1073 = (x1072 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[113 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1073);
            reg = x1073;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1074 = x964 - x69;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1075 = (x1074 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[114 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1075);
            reg = x1075;
          }
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[115 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1045);
            reg = x1045;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1076 = arg2[101 * steps + ((cycle - 0) & mask)];
        assert(x1076 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1077 = arg2[102 * steps + ((cycle - 0) & mask)];
        assert(x1077 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1078 = arg2[103 * steps + ((cycle - 0) & mask)];
        assert(x1078 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1079 = arg2[104 * steps + ((cycle - 0) & mask)];
        assert(x1079 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1080 = arg2[105 * steps + ((cycle - 0) & mask)];
        assert(x1080 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1081 = arg2[106 * steps + ((cycle - 0) & mask)];
        assert(x1081 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1082 = arg2[107 * steps + ((cycle - 0) & mask)];
        assert(x1082 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[8](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1083 = arg2[108 * steps + ((cycle - 0) & mask)];
        assert(x1083 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[9](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1084 = arg2[109 * steps + ((cycle - 0) & mask)];
        assert(x1084 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[10](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1085 = arg2[110 * steps + ((cycle - 0) & mask)];
        assert(x1085 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[11](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1086 = arg2[111 * steps + ((cycle - 0) & mask)];
        assert(x1086 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[12](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1087 = arg2[112 * steps + ((cycle - 0) & mask)];
        assert(x1087 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[13](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1088 = arg2[113 * steps + ((cycle - 0) & mask)];
        assert(x1088 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[14](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1089 = arg2[114 * steps + ((cycle - 0) & mask)];
        assert(x1089 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[15](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1090 = arg2[115 * steps + ((cycle - 0) & mask)];
        assert(x1090 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1091 = x1077 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1092 = x1078 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1093 = x1079 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1094 = x1080 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1095 = x1081 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1096 = x1082 * x65;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1097 = x1083 * x64;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1098 = x1084 * x63;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1099 = x1085 * x73;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1100 = x1086 * x72;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1101 = x1087 * x71;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1102 = x1088 * x70;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1103 = x1089 * x69;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1104 = x1090 * x68;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1105 = x1076 + x1091;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1106 = x1105 + x1092;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1107 = x1106 + x1093;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1108 = x1107 + x1094;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1109 = x1108 + x1095;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1110 = x1109 + x1096;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1111 = x1110 + x1097;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1112 = x1111 + x1098;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1113 = x1112 + x1099;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1114 = x1113 + x1100;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1115 = x1114 + x1101;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1116 = x1115 + x1102;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1117 = x1116 + x1103;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1118 = x1117 + x1104;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x1119 = x1118 - x964;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x1119 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[0](Reg)"("./zirgen/components/mux.h":49:25))
    auto x1120 = arg2[100 * steps + ((cycle - 0) & mask)];
    assert(x1120 != Fp::invalid());
    if (x1120 != 0) {
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":112:41)
      auto x1121 = x963 * x75;
      {
        extern_args[0] = x1121;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x1122 = extern_outs[0];
        auto x1123 = extern_outs[1];
        auto x1124 = extern_outs[2];
        auto x1125 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1122);
          reg = x1122;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1123);
          reg = x1123;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1124);
          reg = x1124;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1125);
          reg = x1125;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1126 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x1126 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1127 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x1127 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1128 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x1128 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1129 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x1129 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[116 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1121);
        reg = x1121;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[117 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1126);
        reg = x1126;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1127);
        reg = x1127;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1128);
        reg = x1128;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1129);
        reg = x1129;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:16)
        auto x1130 = Fp(x1129.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:15)
        auto x1131 = x1130 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1131);
          reg = x1131;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:17)
        auto x1132 = Fp(x1129.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:16)
        auto x1133 = x1132 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1133);
          reg = x1133;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:16)
        auto x1134 = Fp(x1129.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:15)
        auto x1135 = x1134 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1135);
          reg = x1135;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:16)
        auto x1136 = Fp(x1129.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:15)
        auto x1137 = x1136 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1137);
          reg = x1137;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:17)
        auto x1138 = Fp(x1129.asUInt32() & x66.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:16)
        auto x1139 = x1138 * x54;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1139);
          reg = x1139;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":16:17)
        auto x1140 = Fp(x1129.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1140);
          reg = x1140;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:17)
        auto x1141 = Fp(x1128.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:16)
        auto x1142 = x1141 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1142);
          reg = x1142;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:18)
        auto x1143 = Fp(x1128.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:17)
        auto x1144 = x1143 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1144);
          reg = x1144;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:17)
        auto x1145 = Fp(x1128.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:16)
        auto x1146 = x1145 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1146);
          reg = x1146;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:18)
        auto x1147 = Fp(x1128.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:17)
        auto x1148 = x1147 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1148);
          reg = x1148;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:18)
        auto x1149 = Fp(x1128.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1149);
          reg = x1149;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x1150 = Fp(x1127.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x1151 = x1150 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1151);
          reg = x1151;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:19)
        auto x1152 = Fp(x1127.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:18)
        auto x1153 = x1152 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1153);
          reg = x1153;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:20)
        auto x1154 = Fp(x1127.asUInt32() & x51.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:19)
        auto x1155 = x1154 * x56;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1155);
          reg = x1155;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x1156 = Fp(x1127.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x1157 = x1156 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1157);
          reg = x1157;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x1158 = Fp(x1127.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1158);
          reg = x1158;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x1159 = Fp(x1126.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:15)
        auto x1160 = x1159 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1160);
          reg = x1160;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x1161 = Fp(x1126.asUInt32() & x50.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:5)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1161);
          reg = x1161;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1162 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x1162 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1163 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x1163 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1164 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x1164 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1165 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x1165 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1166 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x1166 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1167 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x1167 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x1168 = x1164 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x1169 = x1165 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:39)
      auto x1170 = x1162 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:25)
      auto x1171 = x1163 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x1172 = x1169 + x1171;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x1173 = x1172 + x1170;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x1174 = x1173 + x1167;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x1175 = x1168 + x1174;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x1176 = x1175 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x1177 = x1176 + x1166;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      auto x1178 = x1129 - x1177;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      assert(x1178 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:30");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1179 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x1179 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1180 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x1180 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1181 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x1181 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1182 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x1182 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1183 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x1183 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x1184 = x1179 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:37)
      auto x1185 = x1180 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:69)
      auto x1186 = x1181 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x1187 = x1184 + x1185;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x1188 = x1187 + x1182;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x1189 = x1188 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x1190 = x1189 + x1186;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x1191 = x1190 + x1183;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      auto x1192 = x1128 - x1191;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      assert(x1192 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:31");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1193 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x1193 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1194 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x1194 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1195 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x1195 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1196 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x1196 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1197 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x1197 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x1198 = x1193 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x1199 = x1194 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:53)
      auto x1200 = x1195 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x1201 = x1199 + x1196;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:36)
      auto x1202 = x1201 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x1203 = x1198 + x1202;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x1204 = x1203 + x1200;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x1205 = x1204 + x1197;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      auto x1206 = x1127 - x1205;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      assert(x1206 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:32");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1207 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x1207 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x1208 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x1208 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x1209 = x1207 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x1210 = x1209 + x1208;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      auto x1211 = x1126 - x1210;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      assert(x1211 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:33");
      {
        extern_args[0] = x1126;
        extern_args[1] = x1127;
        extern_args[2] = x1128;
        extern_args[3] = x1129;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x1212 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1213 = (x1212 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[181 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1213);
            reg = x1213;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1214 = x1212 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1215 = (x1214 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[182 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1215);
            reg = x1215;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1216 = x1212 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1217 = (x1216 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1217);
            reg = x1217;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1218 = x1212 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1219 = (x1218 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1219);
            reg = x1219;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1220 = x1212 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1221 = (x1220 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1221);
            reg = x1221;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1222 = x1212 - x67;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1223 = (x1222 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1223);
            reg = x1223;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1224 = x1212 - x66;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1225 = (x1224 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1225);
            reg = x1225;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1226 = x1212 - x65;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1227 = (x1226 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1227);
            reg = x1227;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1228 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x1228 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1229 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x1229 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1230 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x1230 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1231 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x1231 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1232 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x1232 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1233 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x1233 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1234 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x1234 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1235 = x1229 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1236 = x1230 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1237 = x1231 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1238 = x1232 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1239 = x1233 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1240 = x1234 * x65;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1241 = x1228 + x1235;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1242 = x1241 + x1236;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1243 = x1242 + x1237;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1244 = x1243 + x1238;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1245 = x1244 + x1239;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1246 = x1245 + x1240;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x1247 = x1246 - x1212;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x1247 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":38:68))
        auto x1248 = arg2[181 * steps + ((cycle - 0) & mask)];
        assert(x1248 != Fp::invalid());
        if (x1248 != 0) {
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":23:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":24:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":25:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":39:68))
        auto x1249 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x1249 != Fp::invalid());
        if (x1249 != 0) {
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":40:69))
        auto x1250 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x1250 != Fp::invalid());
        if (x1250 != 0) {
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":43:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":44:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":45:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x88);
            reg = x88;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":41:69))
        auto x1251 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x1251 != Fp::invalid());
        if (x1251 != 0) {
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":42:69))
        auto x1252 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x1252 != Fp::invalid());
        if (x1252 != 0) {
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":43:68))
        auto x1253 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x1253 != Fp::invalid());
        if (x1253 != 0) {
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":44:68))
        auto x1254 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x1254 != Fp::invalid());
        if (x1254 != 0) {
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":45:68))
        auto x1255 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x1255 != Fp::invalid());
        if (x1255 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1256 = x1162 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1257 = x1164 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1258 = x1166 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x1259 = x1164 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x1260 = x1167 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x1261 = x1165 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1262 = x1256 + x1260;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1263 = x1257 + x1261;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1264 = x1263 + x1163;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1265 = x1258 + x1188;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1266 = x1262 + x1265;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1266);
            reg = x1266;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1264);
            reg = x1264;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1259);
            reg = x1259;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1259);
            reg = x1259;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":23:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":24:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":25:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x1267 = x1181 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:26)
      auto x1268 = x1183 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x1269 = x1267 + x1268;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x1270 = x1269 + x1193;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":134:39)
      auto x1271 = x1270 + x48;
      {
        extern_args[0] = x1271;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x1272 = extern_outs[0];
        auto x1273 = extern_outs[1];
        auto x1274 = extern_outs[2];
        auto x1275 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1272);
          reg = x1272;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1273);
          reg = x1273;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1274);
          reg = x1274;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1275);
          reg = x1275;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1276 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x1276 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1277 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x1277 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1278 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x1278 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1279 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x1279 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1271);
        reg = x1271;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1276);
        reg = x1276;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1277);
        reg = x1277;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1278);
        reg = x1278;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1279);
        reg = x1279;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x1280 = x1166 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x1281 = x1280 + x1188;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":135:39)
      auto x1282 = x1281 + x48;
      {
        extern_args[0] = x1282;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x1283 = extern_outs[0];
        auto x1284 = extern_outs[1];
        auto x1285 = extern_outs[2];
        auto x1286 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1283);
          reg = x1283;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1284);
          reg = x1284;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1285);
          reg = x1285;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1286);
          reg = x1286;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1287 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x1287 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1288 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x1288 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1289 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x1289 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1290 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x1290 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1282);
        reg = x1282;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1287);
        reg = x1287;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1288);
        reg = x1288;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1289);
        reg = x1289;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1290);
        reg = x1290;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1291 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x1291 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1292 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x1292 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1293 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x1293 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1294 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x1294 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1295 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x1295 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1296 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x1296 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1297 = x1295 * x951;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1298 = x1295 * x954;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1299 = x1296 * x1291;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1300 = x1296 * x1292;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1301 = x1296 * x1293;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1302 = x1296 * x1294;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":35:52)
      auto x1303 = x953 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":139:17)
      auto x1304 = x96 - x1295;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":141:17)
      auto x1305 = x96 - x1296;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x1306 = x950 - x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":35:41)
      auto x1307 = x952 + x1303;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1308 = x1304 * x1276;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1309 = x1304 * x1277;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1310 = x1304 * x1278;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1311 = x1304 * x1279;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1312 = x1305 * x1287;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1313 = x1305 * x1288;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1314 = x1305 * x1289;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1315 = x1305 * x1290;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1316 = x1295 * x1307;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1317 = x1295 * x1306;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1318 = x1308 + x1317;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1319 = x1309 + x1297;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1320 = x1310 + x1298;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1321 = x1311 + x1316;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1322 = x1312 + x1299;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1323 = x1313 + x1300;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1324 = x1314 + x1301;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1325 = x1315 + x1302;
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x1326 = Fp(x1321.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x1327 = x1326 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1327);
          reg = x1327;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x1328 = Fp(x1321.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x1329 = x1328 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1329);
          reg = x1329;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x1330 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x1330 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1331 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x1331 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x1332 = x1331 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x1333 = x1330 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x1334 = x1332 + x1333;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x1335 = x1321 - x1334;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x1335 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x1336 = Fp(x1325.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x1337 = x1336 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1337);
          reg = x1337;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x1338 = Fp(x1325.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x1339 = x1338 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1339);
          reg = x1339;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x1340 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x1340 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1341 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x1341 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x1342 = x1341 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x1343 = x1340 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x1344 = x1342 + x1343;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x1345 = x1325 - x1344;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x1345 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[201 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1322);
        reg = x1322;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[202 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1323);
        reg = x1323;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[203 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1324);
        reg = x1324;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[204 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1325);
        reg = x1325;
      }
      {
        // loc("zirgen/components/u32.cpp":119:20)
        auto x1346 = Fp(x1318.asUInt32() & x1322.asUInt32());
        // loc("zirgen/components/u32.cpp":119:20)
        auto x1347 = Fp(x1319.asUInt32() & x1323.asUInt32());
        // loc("zirgen/components/u32.cpp":119:20)
        auto x1348 = Fp(x1320.asUInt32() & x1324.asUInt32());
        // loc("zirgen/components/u32.cpp":119:20)
        auto x1349 = Fp(x1321.asUInt32() & x1325.asUInt32());
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[205 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1346);
          reg = x1346;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[206 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1347);
          reg = x1347;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1348);
          reg = x1348;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1349);
          reg = x1349;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1350 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x1350 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1351 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x1351 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1352 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x1352 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1353 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x1353 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1354 = arg2[206 * steps + ((cycle - 0) & mask)];
      assert(x1354 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1355 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x1355 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1356 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x1356 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1357 = x1350 * x1318;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1358 = x1350 * x1319;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1359 = x1350 * x1320;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1360 = x1350 * x1321;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1361 = x1351 * x1322;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1362 = x1351 * x1323;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1363 = x1351 * x1324;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1364 = x1351 * x1325;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1365 = x1352 * x1353;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1366 = x1352 * x1354;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1367 = x1352 * x1355;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1368 = x1352 * x1356;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1369 = x1357 + x90;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1370 = x1358 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1371 = x1359 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1372 = x1360 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1373 = x1369 + x1361;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1374 = x1370 + x1362;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1375 = x1371 + x1363;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1376 = x1372 + x1364;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1377 = x1375 + x1367;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1378 = x1373 + x1365;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1379 = x1374 + x1366;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x1380 = x1376 + x1368;
      // loc("zirgen/components/u32.cpp":152:29)
      auto x1381 = x1379 * x90;
      // loc("zirgen/components/u32.cpp":152:15)
      auto x1382 = x1378 + x1381;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x1383 = Fp(x1382.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1383);
          reg = x1383;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x1384 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x1384 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x1385 = x1382 - x1384;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x1386 = x1385 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x1387 = Fp(x1386.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1387);
          reg = x1387;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x1388 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x1388 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x1389 = x1386 - x1388;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x1390 = x1389 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1390);
        reg = x1390;
      }
      // loc("zirgen/components/u32.cpp":154:41)
      auto x1391 = x1380 * x90;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1392 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x1392 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":154:16)
      auto x1393 = x1392 + x1377;
      // loc("zirgen/components/u32.cpp":154:16)
      auto x1394 = x1393 + x1391;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x1395 = Fp(x1394.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1395);
          reg = x1395;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x1396 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x1396 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x1397 = x1394 - x1396;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x1398 = x1397 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x1399 = Fp(x1398.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1399);
          reg = x1399;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x1400 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x1400 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x1401 = x1398 - x1400;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x1402 = x1401 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1402);
        reg = x1402;
      }
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x1403 = Fp(x1400.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x1404 = x1403 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1404);
          reg = x1404;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x1405 = Fp(x1400.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x1406 = x1405 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1406);
          reg = x1406;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1407 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x1407 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x1408 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x1408 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x1409 = x1407 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x1410 = x1408 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x1411 = x1409 + x1410;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x1412 = x1400 - x1411;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x1412 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:45)
      auto x1413 = x96 - x1331;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:23)
      auto x1414 = x96 - x1341;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:34)
      auto x1415 = x96 - x1407;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:17)
      auto x1416 = x1331 * x1414;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:17)
      auto x1417 = x1416 * x1415;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:44)
      auto x1418 = x1413 * x1341;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:44)
      auto x1419 = x1418 * x1407;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:17)
      auto x1420 = x1417 + x1419;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:3)
      {
        auto& reg = arg2[210 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1420);
        reg = x1420;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x1421 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x1421 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:27)
      auto x1422 = x1421 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:27)
      auto x1423 = x1422 * x1407;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:11)
      auto x1424 = x1421 + x1407;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:11)
      auto x1425 = x1424 - x1423;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:3)
      {
        auto& reg = arg2[211 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1425);
        reg = x1425;
      }
      // loc("zirgen/components/u32.cpp":143:26)
      auto x1426 = x1388 * x90;
      // loc("zirgen/components/u32.cpp":143:12)
      auto x1427 = x1384 + x1426;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x1428 = (x1427 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[212 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1428);
          reg = x1428;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x1429 = inv(x1427);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[213 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1429);
          reg = x1429;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1430 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x1430 != Fp::invalid());
      if (x1430 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x1427 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x1431 = x96 - x1430;
      if (x1431 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1432 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x1432 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x1433 = x1427 * x1432;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x1434 = x1433 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x1434 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/components/u32.cpp":144:27)
      auto x1435 = x1400 * x90;
      // loc("zirgen/components/u32.cpp":144:13)
      auto x1436 = x1396 + x1435;
      // loc("zirgen/components/u32.cpp":144:47)
      auto x1437 = x1431 * x77;
      // loc("zirgen/components/u32.cpp":144:13)
      auto x1438 = x1436 + x1437;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x1439 = (x1438 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[214 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1439);
          reg = x1439;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x1440 = inv(x1438);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1440);
          reg = x1440;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1441 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x1441 != Fp::invalid());
      if (x1441 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x1438 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x1442 = x96 - x1441;
      if (x1442 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1443 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x1443 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x1444 = x1438 * x1443;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x1445 = x1444 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x1445 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1446 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x1446 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1447 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x1447 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":97:10)
      auto x1448 = x96 - x1446;
      extern_args[0] = x1291;
      extern_args[1] = x1292;
      extern_args[2] = x1293;
      extern_args[3] = x1294;
      extern_args[4] = x1270;
      extern_args[5] = x1276;
      extern_args[6] = x1277;
      extern_args[7] = x1278;
      extern_args[8] = x1279;
      extern_args[9] = x1281;
      extern_args[10] = x1287;
      extern_args[11] = x1288;
      extern_args[12] = x1289;
      extern_args[13] = x1290;
      extern_args[14] = x1318;
      extern_args[15] = x1319;
      extern_args[16] = x1320;
      extern_args[17] = x1321;
      extern_args[18] = x1322;
      extern_args[19] = x1323;
      extern_args[20] = x1324;
      extern_args[21] = x1325;
      extern_args[22] = x1384;
      extern_args[23] = x1388;
      extern_args[24] = x1396;
      extern_args[25] = x1400;
      extern_args[26] = x1441;
      extern_args[27] = x1447;
      extern_args[28] = x1448;
      extern_log(ctx, cycle, "  imm=%w, rs1=x%u -> %w, rs2=x%u -> %w, inA = %w, inB = %w, ALU output = %w, EQ:%u, LT:%u, LTU:%u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x1449 = x1195 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:25)
      auto x1450 = x1197 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x1451 = x1449 + x1450;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x1452 = x1451 + x1207;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x1453 = (x1452 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1453);
          reg = x1453;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x1454 = inv(x1452);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1454);
          reg = x1454;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1455 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x1455 != Fp::invalid());
      if (x1455 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x1452 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x1456 = x96 - x1455;
      if (x1456 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1457 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x1457 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x1458 = x1452 * x1457;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x1459 = x1458 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x1459 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":161:13)
      auto x1460 = x963 + x78;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":38:68))
      auto x1461 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x1461 != Fp::invalid());
      if (x1461 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":38:68)
        auto x1462 = x1208 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":38:68)
        assert(x1462 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:38");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":38:68)
        assert(x1201 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:38");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":38:68)
        assert(x1175 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:38");
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":23:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":24:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":25:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x1463 = x1460 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1464 = Fp(x1463.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1464);
            reg = x1464;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1465 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1465 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1466 = x1463 - x1465;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1467 = x1466 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1468 = Fp(x1467.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1468);
            reg = x1468;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1469 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1469 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1470 = x1467 - x1469;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1471 = x1470 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1472 = Fp(x1471.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1472);
            reg = x1472;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1473 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1473 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1474 = x1471 - x1473;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1475 = x1474 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x1476 = Fp(x1475.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1476);
            reg = x1476;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1477 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1477 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x1478 = x1475 - x1477;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x1479 = x1478 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1479);
          reg = x1479;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1480 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1480 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x1481 = x96 - x1480;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x1482 = x1480 * x1481;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1482);
          reg = x1482;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x1483 = x93 - x1480;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1484 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1484 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x1485 = x1484 * x1483;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x1485 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1486 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x1486 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":38:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1486);
          reg = x1486;
        }
        if (x1456 != 0) {
          extern_args[0] = x1452;
          extern_args[1] = x1384;
          extern_args[2] = x1388;
          extern_args[3] = x1396;
          extern_args[4] = x1400;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":38:68)
          auto x1487 = x1452 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1384);
            reg = x1384;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1388);
            reg = x1388;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1396);
            reg = x1396;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1400);
            reg = x1400;
          }
          {
            extern_args[0] = x1487;
            extern_args[1] = x1384;
            extern_args[2] = x1388;
            extern_args[3] = x1396;
            extern_args[4] = x1400;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1488 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x1488 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1489 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x1489 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1490 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1490 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1491 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1491 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1487);
            reg = x1487;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1488);
            reg = x1488;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1489);
            reg = x1489;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1490);
            reg = x1490;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1491);
            reg = x1491;
          }
        }
        if (x1455 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":39:68))
      auto x1492 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x1492 != Fp::invalid());
      if (x1492 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":39:68)
        auto x1493 = x1208 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":39:68)
        assert(x1493 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:39");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":39:68)
        assert(x1201 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:39");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":39:68)
        auto x1494 = x1175 - x58;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":39:68)
        assert(x1494 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:39");
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x1495 = x1460 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1496 = Fp(x1495.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1496);
            reg = x1496;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1497 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1497 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1498 = x1495 - x1497;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1499 = x1498 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1500 = Fp(x1499.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1500);
            reg = x1500;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1501 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1501 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1502 = x1499 - x1501;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1503 = x1502 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1504 = Fp(x1503.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1504);
            reg = x1504;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1505 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1505 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1506 = x1503 - x1505;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1507 = x1506 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x1508 = Fp(x1507.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1508);
            reg = x1508;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1509 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1509 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x1510 = x1507 - x1509;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x1511 = x1510 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1511);
          reg = x1511;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1512 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1512 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x1513 = x96 - x1512;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x1514 = x1512 * x1513;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1514);
          reg = x1514;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x1515 = x93 - x1512;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1516 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1516 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x1517 = x1516 * x1515;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x1517 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1518 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x1518 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":39:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1518);
          reg = x1518;
        }
        if (x1456 != 0) {
          extern_args[0] = x1452;
          extern_args[1] = x1384;
          extern_args[2] = x1388;
          extern_args[3] = x1396;
          extern_args[4] = x1400;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":39:68)
          auto x1519 = x1452 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1384);
            reg = x1384;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1388);
            reg = x1388;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1396);
            reg = x1396;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1400);
            reg = x1400;
          }
          {
            extern_args[0] = x1519;
            extern_args[1] = x1384;
            extern_args[2] = x1388;
            extern_args[3] = x1396;
            extern_args[4] = x1400;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1520 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x1520 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1521 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x1521 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1522 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1522 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1523 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1523 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1519);
            reg = x1519;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1520);
            reg = x1520;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1521);
            reg = x1521;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1522);
            reg = x1522;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1523);
            reg = x1523;
          }
        }
        if (x1455 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":40:69))
      auto x1524 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x1524 != Fp::invalid());
      if (x1524 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":40:69)
        auto x1525 = x1208 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":40:69)
        assert(x1525 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:40");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":40:69)
        auto x1526 = x1201 - x78;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":40:69)
        assert(x1526 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:40");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":40:69)
        assert(x1175 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:40");
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":43:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":44:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":45:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x88);
          reg = x88;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x1527 = x1460 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1528 = Fp(x1527.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1528);
            reg = x1528;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1529 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1529 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1530 = x1527 - x1529;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1531 = x1530 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1532 = Fp(x1531.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1532);
            reg = x1532;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1533 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1533 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1534 = x1531 - x1533;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1535 = x1534 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1536 = Fp(x1535.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1536);
            reg = x1536;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1537 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1537 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1538 = x1535 - x1537;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1539 = x1538 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x1540 = Fp(x1539.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1540);
            reg = x1540;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1541 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1541 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x1542 = x1539 - x1541;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x1543 = x1542 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1543);
          reg = x1543;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1544 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1544 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x1545 = x96 - x1544;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x1546 = x1544 * x1545;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1546);
          reg = x1546;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x1547 = x93 - x1544;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1548 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1548 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x1549 = x1548 * x1547;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x1549 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1550 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x1550 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":40:69)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1550);
          reg = x1550;
        }
        if (x1456 != 0) {
          extern_args[0] = x1452;
          extern_args[1] = x1384;
          extern_args[2] = x1388;
          extern_args[3] = x1396;
          extern_args[4] = x1400;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":40:69)
          auto x1551 = x1452 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1384);
            reg = x1384;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1388);
            reg = x1388;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1396);
            reg = x1396;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1400);
            reg = x1400;
          }
          {
            extern_args[0] = x1551;
            extern_args[1] = x1384;
            extern_args[2] = x1388;
            extern_args[3] = x1396;
            extern_args[4] = x1400;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1552 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x1552 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1553 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x1553 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1554 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1554 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1555 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1555 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1551);
            reg = x1551;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1552);
            reg = x1552;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1553);
            reg = x1553;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1554);
            reg = x1554;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1555);
            reg = x1555;
          }
        }
        if (x1455 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":41:69))
      auto x1556 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x1556 != Fp::invalid());
      if (x1556 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":41:69)
        auto x1557 = x1208 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":41:69)
        assert(x1557 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:41");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":41:69)
        auto x1558 = x1201 - x66;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":41:69)
        assert(x1558 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:41");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":41:69)
        assert(x1175 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:41");
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x1559 = x1460 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1560 = Fp(x1559.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1560);
            reg = x1560;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1561 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1561 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1562 = x1559 - x1561;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1563 = x1562 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1564 = Fp(x1563.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1564);
            reg = x1564;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1565 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1565 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1566 = x1563 - x1565;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1567 = x1566 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1568 = Fp(x1567.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1568);
            reg = x1568;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1569 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1569 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1570 = x1567 - x1569;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1571 = x1570 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x1572 = Fp(x1571.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1572);
            reg = x1572;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1573 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1573 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x1574 = x1571 - x1573;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x1575 = x1574 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1575);
          reg = x1575;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1576 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1576 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x1577 = x96 - x1576;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x1578 = x1576 * x1577;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1578);
          reg = x1578;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x1579 = x93 - x1576;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1580 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1580 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x1581 = x1580 * x1579;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x1581 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1582 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x1582 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":41:69)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1582);
          reg = x1582;
        }
        if (x1456 != 0) {
          extern_args[0] = x1452;
          extern_args[1] = x1384;
          extern_args[2] = x1388;
          extern_args[3] = x1396;
          extern_args[4] = x1400;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":41:69)
          auto x1583 = x1452 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1384);
            reg = x1384;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1388);
            reg = x1388;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1396);
            reg = x1396;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1400);
            reg = x1400;
          }
          {
            extern_args[0] = x1583;
            extern_args[1] = x1384;
            extern_args[2] = x1388;
            extern_args[3] = x1396;
            extern_args[4] = x1400;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1584 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x1584 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1585 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x1585 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1586 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1586 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1587 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1587 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1583);
            reg = x1583;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1584);
            reg = x1584;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1585);
            reg = x1585;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1586);
            reg = x1586;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1587);
            reg = x1587;
          }
        }
        if (x1455 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":42:69))
      auto x1588 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x1588 != Fp::invalid());
      if (x1588 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":42:69)
        auto x1589 = x1208 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":42:69)
        assert(x1589 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:42");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":42:69)
        auto x1590 = x1201 - x65;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":42:69)
        assert(x1590 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:42");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":42:69)
        assert(x1175 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:42");
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x1591 = x1460 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1592 = Fp(x1591.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1592);
            reg = x1592;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1593 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1593 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1594 = x1591 - x1593;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1595 = x1594 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1596 = Fp(x1595.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1596);
            reg = x1596;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1597 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1597 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1598 = x1595 - x1597;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1599 = x1598 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1600 = Fp(x1599.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1600);
            reg = x1600;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1601 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1601 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1602 = x1599 - x1601;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1603 = x1602 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x1604 = Fp(x1603.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1604);
            reg = x1604;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1605 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1605 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x1606 = x1603 - x1605;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x1607 = x1606 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1607);
          reg = x1607;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1608 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1608 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x1609 = x96 - x1608;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x1610 = x1608 * x1609;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1610);
          reg = x1610;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x1611 = x93 - x1608;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1612 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1612 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x1613 = x1612 * x1611;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x1613 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1614 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x1614 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":42:69)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1614);
          reg = x1614;
        }
        if (x1456 != 0) {
          extern_args[0] = x1452;
          extern_args[1] = x1384;
          extern_args[2] = x1388;
          extern_args[3] = x1396;
          extern_args[4] = x1400;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":42:69)
          auto x1615 = x1452 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1384);
            reg = x1384;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1388);
            reg = x1388;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1396);
            reg = x1396;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1400);
            reg = x1400;
          }
          {
            extern_args[0] = x1615;
            extern_args[1] = x1384;
            extern_args[2] = x1388;
            extern_args[3] = x1396;
            extern_args[4] = x1400;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1616 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x1616 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1617 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x1617 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1618 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1618 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1619 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1619 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1615);
            reg = x1615;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1616);
            reg = x1616;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1617);
            reg = x1617;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1618);
            reg = x1618;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1619);
            reg = x1619;
          }
        }
        if (x1455 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":43:68))
      auto x1620 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x1620 != Fp::invalid());
      if (x1620 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":43:68)
        auto x1621 = x1208 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":43:68)
        assert(x1621 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:43");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":43:68)
        auto x1622 = x1201 - x93;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":43:68)
        assert(x1622 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:43");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":43:68)
        assert(x1175 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:43");
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x1623 = x1460 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1624 = Fp(x1623.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1624);
            reg = x1624;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1625 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1625 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1626 = x1623 - x1625;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1627 = x1626 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1628 = Fp(x1627.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1628);
            reg = x1628;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1629 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1629 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1630 = x1627 - x1629;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1631 = x1630 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1632 = Fp(x1631.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1632);
            reg = x1632;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1633 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1633 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1634 = x1631 - x1633;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1635 = x1634 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x1636 = Fp(x1635.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1636);
            reg = x1636;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1637 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1637 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x1638 = x1635 - x1637;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x1639 = x1638 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1639);
          reg = x1639;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1640 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1640 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x1641 = x96 - x1640;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x1642 = x1640 * x1641;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1642);
          reg = x1642;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x1643 = x93 - x1640;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1644 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1644 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x1645 = x1644 * x1643;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x1645 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1646 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x1646 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":43:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1646);
          reg = x1646;
        }
        if (x1456 != 0) {
          extern_args[0] = x1452;
          extern_args[1] = x1447;
          extern_args[2] = x95;
          extern_args[3] = x95;
          extern_args[4] = x95;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":43:68)
          auto x1647 = x1452 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1447);
            reg = x1447;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          {
            extern_args[0] = x1647;
            extern_args[1] = x1447;
            extern_args[2] = x95;
            extern_args[3] = x95;
            extern_args[4] = x95;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1648 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x1648 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1649 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x1649 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1650 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1650 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1651 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1651 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1647);
            reg = x1647;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1648);
            reg = x1648;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1649);
            reg = x1649;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1650);
            reg = x1650;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1651);
            reg = x1651;
          }
        }
        if (x1455 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":44:68))
      auto x1652 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x1652 != Fp::invalid());
      if (x1652 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":44:68)
        auto x1653 = x1208 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":44:68)
        assert(x1653 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:44");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":44:68)
        auto x1654 = x1201 - x76;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":44:68)
        assert(x1654 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:44");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":44:68)
        assert(x1175 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:44");
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x1655 = x1460 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1656 = Fp(x1655.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1656);
            reg = x1656;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1657 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1657 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1658 = x1655 - x1657;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1659 = x1658 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1660 = Fp(x1659.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1660);
            reg = x1660;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1661 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1661 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1662 = x1659 - x1661;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1663 = x1662 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1664 = Fp(x1663.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1664);
            reg = x1664;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1665 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1665 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1666 = x1663 - x1665;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1667 = x1666 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x1668 = Fp(x1667.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1668);
            reg = x1668;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1669 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1669 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x1670 = x1667 - x1669;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x1671 = x1670 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1671);
          reg = x1671;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1672 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1672 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x1673 = x96 - x1672;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x1674 = x1672 * x1673;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1674);
          reg = x1674;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x1675 = x93 - x1672;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1676 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1676 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x1677 = x1676 * x1675;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x1677 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1678 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x1678 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":44:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1678);
          reg = x1678;
        }
        if (x1456 != 0) {
          extern_args[0] = x1452;
          extern_args[1] = x1448;
          extern_args[2] = x95;
          extern_args[3] = x95;
          extern_args[4] = x95;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":44:68)
          auto x1679 = x1452 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1448);
            reg = x1448;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          {
            extern_args[0] = x1679;
            extern_args[1] = x1448;
            extern_args[2] = x95;
            extern_args[3] = x95;
            extern_args[4] = x95;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1680 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x1680 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1681 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x1681 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1682 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1682 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1683 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1683 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1679);
            reg = x1679;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1680);
            reg = x1680;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1681);
            reg = x1681;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1682);
            reg = x1682;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1683);
            reg = x1683;
          }
        }
        if (x1455 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":45:68))
      auto x1684 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x1684 != Fp::invalid());
      if (x1684 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":45:68)
        auto x1685 = x1208 - x44;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":45:68)
        assert(x1685 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:45");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":45:68)
        assert(x1201 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:45");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x1686 = x1162 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x1687 = x1164 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x1688 = x1164 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x1689 = x1167 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x1690 = x1165 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x1691 = x1686 + x1689;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x1692 = x1687 + x1690;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x1693 = x1692 + x1163;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x1694 = x1691 + x1281;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1694);
          reg = x1694;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1693);
          reg = x1693;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1688);
          reg = x1688;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1688);
          reg = x1688;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":23:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":24:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":25:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x1695 = x1460 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1696 = Fp(x1695.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1696);
            reg = x1696;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1697 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x1697 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1698 = x1695 - x1697;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1699 = x1698 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1700 = Fp(x1699.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1700);
            reg = x1700;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1701 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x1701 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1702 = x1699 - x1701;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1703 = x1702 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x1704 = Fp(x1703.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1704);
            reg = x1704;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x1705 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x1705 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x1706 = x1703 - x1705;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x1707 = x1706 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x1708 = Fp(x1707.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1708);
            reg = x1708;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1709 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x1709 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x1710 = x1707 - x1709;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x1711 = x1710 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1711);
          reg = x1711;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1712 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x1712 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x1713 = x96 - x1712;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x1714 = x1712 * x1713;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1714);
          reg = x1714;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x1715 = x93 - x1712;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1716 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x1716 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x1717 = x1716 * x1715;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x1717 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x1718 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x1718 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":45:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1718);
          reg = x1718;
        }
        if (x1456 != 0) {
          extern_args[0] = x1452;
          extern_args[1] = x1384;
          extern_args[2] = x1388;
          extern_args[3] = x1396;
          extern_args[4] = x1400;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":45:68)
          auto x1719 = x1452 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1384);
            reg = x1384;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1388);
            reg = x1388;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1396);
            reg = x1396;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1400);
            reg = x1400;
          }
          {
            extern_args[0] = x1719;
            extern_args[1] = x1384;
            extern_args[2] = x1388;
            extern_args[3] = x1396;
            extern_args[4] = x1400;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1720 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x1720 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1721 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x1721 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1722 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x1722 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x1723 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x1723 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1719);
            reg = x1719;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1720);
            reg = x1720;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1721);
            reg = x1721;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1722);
            reg = x1722;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1723);
            reg = x1723;
          }
        }
        if (x1455 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[1](Reg)"("./zirgen/components/mux.h":49:25))
    auto x1724 = arg2[101 * steps + ((cycle - 0) & mask)];
    assert(x1724 != Fp::invalid());
    if (x1724 != 0) {
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":112:41)
      auto x1725 = x963 * x75;
      {
        extern_args[0] = x1725;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x1726 = extern_outs[0];
        auto x1727 = extern_outs[1];
        auto x1728 = extern_outs[2];
        auto x1729 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1726);
          reg = x1726;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1727);
          reg = x1727;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1728);
          reg = x1728;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1729);
          reg = x1729;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1730 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x1730 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1731 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x1731 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1732 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x1732 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1733 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x1733 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[116 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1725);
        reg = x1725;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[117 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1730);
        reg = x1730;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1731);
        reg = x1731;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1732);
        reg = x1732;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1733);
        reg = x1733;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:16)
        auto x1734 = Fp(x1733.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:15)
        auto x1735 = x1734 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1735);
          reg = x1735;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:17)
        auto x1736 = Fp(x1733.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:16)
        auto x1737 = x1736 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1737);
          reg = x1737;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:16)
        auto x1738 = Fp(x1733.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:15)
        auto x1739 = x1738 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1739);
          reg = x1739;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:16)
        auto x1740 = Fp(x1733.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:15)
        auto x1741 = x1740 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1741);
          reg = x1741;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:17)
        auto x1742 = Fp(x1733.asUInt32() & x66.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:16)
        auto x1743 = x1742 * x54;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1743);
          reg = x1743;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":16:17)
        auto x1744 = Fp(x1733.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1744);
          reg = x1744;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:17)
        auto x1745 = Fp(x1732.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:16)
        auto x1746 = x1745 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1746);
          reg = x1746;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:18)
        auto x1747 = Fp(x1732.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:17)
        auto x1748 = x1747 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1748);
          reg = x1748;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:17)
        auto x1749 = Fp(x1732.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:16)
        auto x1750 = x1749 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1750);
          reg = x1750;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:18)
        auto x1751 = Fp(x1732.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:17)
        auto x1752 = x1751 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1752);
          reg = x1752;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:18)
        auto x1753 = Fp(x1732.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1753);
          reg = x1753;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x1754 = Fp(x1731.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x1755 = x1754 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1755);
          reg = x1755;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:19)
        auto x1756 = Fp(x1731.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:18)
        auto x1757 = x1756 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1757);
          reg = x1757;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:20)
        auto x1758 = Fp(x1731.asUInt32() & x51.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:19)
        auto x1759 = x1758 * x56;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1759);
          reg = x1759;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x1760 = Fp(x1731.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x1761 = x1760 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1761);
          reg = x1761;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x1762 = Fp(x1731.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1762);
          reg = x1762;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x1763 = Fp(x1730.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:15)
        auto x1764 = x1763 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1764);
          reg = x1764;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x1765 = Fp(x1730.asUInt32() & x50.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:5)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1765);
          reg = x1765;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1766 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x1766 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1767 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x1767 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1768 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x1768 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1769 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x1769 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1770 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x1770 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1771 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x1771 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x1772 = x1768 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x1773 = x1769 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:39)
      auto x1774 = x1766 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:25)
      auto x1775 = x1767 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x1776 = x1773 + x1775;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x1777 = x1776 + x1774;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x1778 = x1777 + x1771;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x1779 = x1772 + x1778;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x1780 = x1779 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x1781 = x1780 + x1770;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      auto x1782 = x1733 - x1781;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      assert(x1782 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:30");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1783 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x1783 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1784 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x1784 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1785 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x1785 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1786 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x1786 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1787 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x1787 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x1788 = x1783 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:37)
      auto x1789 = x1784 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:69)
      auto x1790 = x1785 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x1791 = x1788 + x1789;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x1792 = x1791 + x1786;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x1793 = x1792 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x1794 = x1793 + x1790;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x1795 = x1794 + x1787;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      auto x1796 = x1732 - x1795;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      assert(x1796 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:31");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1797 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x1797 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1798 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x1798 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1799 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x1799 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1800 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x1800 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1801 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x1801 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x1802 = x1797 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x1803 = x1798 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:53)
      auto x1804 = x1799 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x1805 = x1803 + x1800;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:36)
      auto x1806 = x1805 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x1807 = x1802 + x1806;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x1808 = x1807 + x1804;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x1809 = x1808 + x1801;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      auto x1810 = x1731 - x1809;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      assert(x1810 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:32");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1811 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x1811 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x1812 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x1812 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x1813 = x1811 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x1814 = x1813 + x1812;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      auto x1815 = x1730 - x1814;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      assert(x1815 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:33");
      {
        extern_args[0] = x1730;
        extern_args[1] = x1731;
        extern_args[2] = x1732;
        extern_args[3] = x1733;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x1816 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1817 = (x1816 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[181 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1817);
            reg = x1817;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1818 = x1816 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1819 = (x1818 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[182 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1819);
            reg = x1819;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1820 = x1816 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1821 = (x1820 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1821);
            reg = x1821;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1822 = x1816 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1823 = (x1822 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1823);
            reg = x1823;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1824 = x1816 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1825 = (x1824 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1825);
            reg = x1825;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1826 = x1816 - x67;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1827 = (x1826 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1827);
            reg = x1827;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1828 = x1816 - x66;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1829 = (x1828 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1829);
            reg = x1829;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1830 = x1816 - x65;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x1831 = (x1830 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1831);
            reg = x1831;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1832 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x1832 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1833 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x1833 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1834 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x1834 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1835 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x1835 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1836 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x1836 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1837 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x1837 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x1838 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x1838 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1839 = x1833 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1840 = x1834 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1841 = x1835 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1842 = x1836 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1843 = x1837 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x1844 = x1838 * x65;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1845 = x1832 + x1839;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1846 = x1845 + x1840;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1847 = x1846 + x1841;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1848 = x1847 + x1842;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1849 = x1848 + x1843;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x1850 = x1849 + x1844;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x1851 = x1850 - x1816;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x1851 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":46:69))
        auto x1852 = arg2[181 * steps + ((cycle - 0) & mask)];
        assert(x1852 != Fp::invalid());
        if (x1852 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1853 = x1766 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1854 = x1768 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1855 = x1770 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x1856 = x1768 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x1857 = x1771 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x1858 = x1769 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1859 = x1853 + x1857;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1860 = x1854 + x1858;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1861 = x1860 + x1767;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1862 = x1855 + x1792;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1863 = x1859 + x1862;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1863);
            reg = x1863;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1861);
            reg = x1861;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1856);
            reg = x1856;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1856);
            reg = x1856;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":43:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":44:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":45:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x88);
            reg = x88;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":47:69))
        auto x1864 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x1864 != Fp::invalid());
        if (x1864 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1865 = x1766 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1866 = x1768 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1867 = x1770 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x1868 = x1768 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x1869 = x1771 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x1870 = x1769 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1871 = x1865 + x1869;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1872 = x1866 + x1870;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1873 = x1872 + x1767;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1874 = x1867 + x1792;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1875 = x1871 + x1874;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1875);
            reg = x1875;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1873);
            reg = x1873;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1868);
            reg = x1868;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1868);
            reg = x1868;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":48:69))
        auto x1876 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x1876 != Fp::invalid());
        if (x1876 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1877 = x1766 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1878 = x1768 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1879 = x1770 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x1880 = x1768 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x1881 = x1771 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x1882 = x1769 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1883 = x1877 + x1881;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1884 = x1878 + x1882;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1885 = x1884 + x1767;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1886 = x1879 + x1792;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1887 = x1883 + x1886;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1887);
            reg = x1887;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1885);
            reg = x1885;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1880);
            reg = x1880;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1880);
            reg = x1880;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x66);
            reg = x66;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68))
        auto x1888 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x1888 != Fp::invalid());
        if (x1888 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1889 = x1766 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1890 = x1768 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1891 = x1770 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x1892 = x1768 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x1893 = x1771 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x1894 = x1769 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1895 = x1889 + x1893;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1896 = x1890 + x1894;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1897 = x1896 + x1767;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1898 = x1891 + x1792;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1899 = x1895 + x1898;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1899);
            reg = x1899;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1897);
            reg = x1897;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1892);
            reg = x1892;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1892);
            reg = x1892;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68))
        auto x1900 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x1900 != Fp::invalid());
        if (x1900 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1901 = x1766 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1902 = x1768 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1903 = x1770 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x1904 = x1768 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x1905 = x1771 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x1906 = x1769 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1907 = x1901 + x1905;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1908 = x1902 + x1906;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x1909 = x1908 + x1767;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x1910 = x1903 + x1792;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x1911 = x1907 + x1910;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1911);
            reg = x1911;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1909);
            reg = x1909;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1904);
            reg = x1904;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1904);
            reg = x1904;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:68))
        auto x1912 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x1912 != Fp::invalid());
        if (x1912 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1913 = x1766 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1914 = x1768 * x43;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x1915 = x1768 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
          auto x1916 = x1811 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
          auto x1917 = x1771 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
          auto x1918 = x1769 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:51)
          auto x1919 = x1801 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:36)
          auto x1920 = x1799 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1921 = x1913 + x1917;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1922 = x1914 + x1916;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1923 = x1921 + x1920;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1924 = x1922 + x1918;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1925 = x1923 + x1919;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1926 = x1924 + x1767;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1925);
            reg = x1925;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1926);
            reg = x1926;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1915);
            reg = x1915;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1915);
            reg = x1915;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:68))
        auto x1927 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x1927 != Fp::invalid());
        if (x1927 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1928 = x1766 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1929 = x1768 * x43;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x1930 = x1768 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
          auto x1931 = x1811 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
          auto x1932 = x1771 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
          auto x1933 = x1769 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:51)
          auto x1934 = x1801 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:36)
          auto x1935 = x1799 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1936 = x1928 + x1932;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1937 = x1929 + x1931;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1938 = x1936 + x1935;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1939 = x1937 + x1933;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1940 = x1938 + x1934;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1941 = x1939 + x1767;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1940);
            reg = x1940;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1941);
            reg = x1941;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1930);
            reg = x1930;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1930);
            reg = x1930;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:68))
        auto x1942 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x1942 != Fp::invalid());
        if (x1942 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1943 = x1766 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1944 = x1768 * x43;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x1945 = x1768 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
          auto x1946 = x1811 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
          auto x1947 = x1771 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
          auto x1948 = x1769 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:51)
          auto x1949 = x1801 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:36)
          auto x1950 = x1799 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1951 = x1943 + x1947;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1952 = x1944 + x1946;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1953 = x1951 + x1950;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1954 = x1952 + x1948;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x1955 = x1953 + x1949;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x1956 = x1954 + x1767;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1955);
            reg = x1955;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1956);
            reg = x1956;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1945);
            reg = x1945;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x1945);
            reg = x1945;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x1957 = x1785 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:26)
      auto x1958 = x1787 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x1959 = x1957 + x1958;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x1960 = x1959 + x1797;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":134:39)
      auto x1961 = x1960 + x48;
      {
        extern_args[0] = x1961;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x1962 = extern_outs[0];
        auto x1963 = extern_outs[1];
        auto x1964 = extern_outs[2];
        auto x1965 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1962);
          reg = x1962;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1963);
          reg = x1963;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1964);
          reg = x1964;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1965);
          reg = x1965;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1966 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x1966 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1967 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x1967 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1968 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x1968 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1969 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x1969 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1961);
        reg = x1961;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1966);
        reg = x1966;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1967);
        reg = x1967;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1968);
        reg = x1968;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1969);
        reg = x1969;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x1970 = x1770 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x1971 = x1970 + x1792;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":135:39)
      auto x1972 = x1971 + x48;
      {
        extern_args[0] = x1972;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x1973 = extern_outs[0];
        auto x1974 = extern_outs[1];
        auto x1975 = extern_outs[2];
        auto x1976 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1973);
          reg = x1973;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1974);
          reg = x1974;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1975);
          reg = x1975;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x1976);
          reg = x1976;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1977 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x1977 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1978 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x1978 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1979 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x1979 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1980 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x1980 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1972);
        reg = x1972;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1977);
        reg = x1977;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1978);
        reg = x1978;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1979);
        reg = x1979;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x1980);
        reg = x1980;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1981 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x1981 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1982 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x1982 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1983 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x1983 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1984 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x1984 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1985 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x1985 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x1986 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x1986 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1987 = x1985 * x951;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1988 = x1985 * x954;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1989 = x1986 * x1981;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1990 = x1986 * x1982;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1991 = x1986 * x1983;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1992 = x1986 * x1984;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":35:52)
      auto x1993 = x953 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":139:17)
      auto x1994 = x96 - x1985;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":141:17)
      auto x1995 = x96 - x1986;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x1996 = x950 - x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":35:41)
      auto x1997 = x952 + x1993;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1998 = x1994 * x1966;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x1999 = x1994 * x1967;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2000 = x1994 * x1968;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2001 = x1994 * x1969;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2002 = x1995 * x1977;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2003 = x1995 * x1978;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2004 = x1995 * x1979;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2005 = x1995 * x1980;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2006 = x1985 * x1997;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2007 = x1985 * x1996;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2008 = x1998 + x2007;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2009 = x1999 + x1987;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2010 = x2000 + x1988;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2011 = x2001 + x2006;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2012 = x2002 + x1989;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2013 = x2003 + x1990;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2014 = x2004 + x1991;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2015 = x2005 + x1992;
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x2016 = Fp(x2011.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x2017 = x2016 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2017);
          reg = x2017;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x2018 = Fp(x2011.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x2019 = x2018 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2019);
          reg = x2019;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x2020 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x2020 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2021 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x2021 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2022 = x2021 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x2023 = x2020 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2024 = x2022 + x2023;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x2025 = x2011 - x2024;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x2025 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x2026 = Fp(x2015.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x2027 = x2026 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2027);
          reg = x2027;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x2028 = Fp(x2015.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x2029 = x2028 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2029);
          reg = x2029;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x2030 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x2030 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2031 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x2031 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2032 = x2031 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x2033 = x2030 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2034 = x2032 + x2033;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x2035 = x2015 - x2034;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x2035 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[201 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2012);
        reg = x2012;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[202 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2013);
        reg = x2013;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[203 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2014);
        reg = x2014;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[204 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2015);
        reg = x2015;
      }
      {
        // loc("zirgen/components/u32.cpp":119:20)
        auto x2036 = Fp(x2008.asUInt32() & x2012.asUInt32());
        // loc("zirgen/components/u32.cpp":119:20)
        auto x2037 = Fp(x2009.asUInt32() & x2013.asUInt32());
        // loc("zirgen/components/u32.cpp":119:20)
        auto x2038 = Fp(x2010.asUInt32() & x2014.asUInt32());
        // loc("zirgen/components/u32.cpp":119:20)
        auto x2039 = Fp(x2011.asUInt32() & x2015.asUInt32());
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[205 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2036);
          reg = x2036;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[206 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2037);
          reg = x2037;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2038);
          reg = x2038;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2039);
          reg = x2039;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2040 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x2040 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2041 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x2041 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2042 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x2042 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2043 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x2043 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2044 = arg2[206 * steps + ((cycle - 0) & mask)];
      assert(x2044 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2045 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x2045 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2046 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x2046 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2047 = x2040 * x2008;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2048 = x2040 * x2009;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2049 = x2040 * x2010;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2050 = x2040 * x2011;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2051 = x2041 * x2012;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2052 = x2041 * x2013;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2053 = x2041 * x2014;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2054 = x2041 * x2015;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2055 = x2042 * x2043;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2056 = x2042 * x2044;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2057 = x2042 * x2045;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2058 = x2042 * x2046;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2059 = x2047 + x90;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2060 = x2048 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2061 = x2049 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2062 = x2050 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2063 = x2059 + x2051;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2064 = x2060 + x2052;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2065 = x2061 + x2053;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2066 = x2062 + x2054;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2067 = x2065 + x2057;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2068 = x2063 + x2055;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2069 = x2064 + x2056;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2070 = x2066 + x2058;
      // loc("zirgen/components/u32.cpp":152:29)
      auto x2071 = x2069 * x90;
      // loc("zirgen/components/u32.cpp":152:15)
      auto x2072 = x2068 + x2071;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x2073 = Fp(x2072.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2073);
          reg = x2073;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x2074 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x2074 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x2075 = x2072 - x2074;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x2076 = x2075 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x2077 = Fp(x2076.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2077);
          reg = x2077;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x2078 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x2078 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x2079 = x2076 - x2078;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x2080 = x2079 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2080);
        reg = x2080;
      }
      // loc("zirgen/components/u32.cpp":154:41)
      auto x2081 = x2070 * x90;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2082 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x2082 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":154:16)
      auto x2083 = x2082 + x2067;
      // loc("zirgen/components/u32.cpp":154:16)
      auto x2084 = x2083 + x2081;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x2085 = Fp(x2084.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2085);
          reg = x2085;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x2086 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x2086 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x2087 = x2084 - x2086;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x2088 = x2087 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x2089 = Fp(x2088.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2089);
          reg = x2089;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x2090 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x2090 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x2091 = x2088 - x2090;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x2092 = x2091 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2092);
        reg = x2092;
      }
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x2093 = Fp(x2090.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x2094 = x2093 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2094);
          reg = x2094;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x2095 = Fp(x2090.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x2096 = x2095 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2096);
          reg = x2096;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2097 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x2097 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x2098 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x2098 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2099 = x2097 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x2100 = x2098 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2101 = x2099 + x2100;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x2102 = x2090 - x2101;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x2102 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:45)
      auto x2103 = x96 - x2021;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:23)
      auto x2104 = x96 - x2031;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:34)
      auto x2105 = x96 - x2097;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:17)
      auto x2106 = x2021 * x2104;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:17)
      auto x2107 = x2106 * x2105;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:44)
      auto x2108 = x2103 * x2031;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:44)
      auto x2109 = x2108 * x2097;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:17)
      auto x2110 = x2107 + x2109;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:3)
      {
        auto& reg = arg2[210 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2110);
        reg = x2110;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x2111 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x2111 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:27)
      auto x2112 = x2111 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:27)
      auto x2113 = x2112 * x2097;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:11)
      auto x2114 = x2111 + x2097;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:11)
      auto x2115 = x2114 - x2113;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:3)
      {
        auto& reg = arg2[211 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2115);
        reg = x2115;
      }
      // loc("zirgen/components/u32.cpp":143:26)
      auto x2116 = x2078 * x90;
      // loc("zirgen/components/u32.cpp":143:12)
      auto x2117 = x2074 + x2116;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x2118 = (x2117 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[212 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2118);
          reg = x2118;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x2119 = inv(x2117);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[213 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2119);
          reg = x2119;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2120 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x2120 != Fp::invalid());
      if (x2120 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x2117 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x2121 = x96 - x2120;
      if (x2121 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2122 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x2122 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2123 = x2117 * x2122;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2124 = x2123 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x2124 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/components/u32.cpp":144:27)
      auto x2125 = x2090 * x90;
      // loc("zirgen/components/u32.cpp":144:13)
      auto x2126 = x2086 + x2125;
      // loc("zirgen/components/u32.cpp":144:47)
      auto x2127 = x2121 * x77;
      // loc("zirgen/components/u32.cpp":144:13)
      auto x2128 = x2126 + x2127;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x2129 = (x2128 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[214 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2129);
          reg = x2129;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x2130 = inv(x2128);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2130);
          reg = x2130;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2131 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x2131 != Fp::invalid());
      if (x2131 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x2128 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x2132 = x96 - x2131;
      if (x2132 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2133 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x2133 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2134 = x2128 * x2133;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2135 = x2134 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x2135 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2136 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x2136 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2137 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x2137 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":97:10)
      auto x2138 = x96 - x2136;
      extern_args[0] = x1981;
      extern_args[1] = x1982;
      extern_args[2] = x1983;
      extern_args[3] = x1984;
      extern_args[4] = x1960;
      extern_args[5] = x1966;
      extern_args[6] = x1967;
      extern_args[7] = x1968;
      extern_args[8] = x1969;
      extern_args[9] = x1971;
      extern_args[10] = x1977;
      extern_args[11] = x1978;
      extern_args[12] = x1979;
      extern_args[13] = x1980;
      extern_args[14] = x2008;
      extern_args[15] = x2009;
      extern_args[16] = x2010;
      extern_args[17] = x2011;
      extern_args[18] = x2012;
      extern_args[19] = x2013;
      extern_args[20] = x2014;
      extern_args[21] = x2015;
      extern_args[22] = x2074;
      extern_args[23] = x2078;
      extern_args[24] = x2086;
      extern_args[25] = x2090;
      extern_args[26] = x2131;
      extern_args[27] = x2137;
      extern_args[28] = x2138;
      extern_log(ctx, cycle, "  imm=%w, rs1=x%u -> %w, rs2=x%u -> %w, inA = %w, inB = %w, ALU output = %w, EQ:%u, LT:%u, LTU:%u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x2139 = x1799 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:25)
      auto x2140 = x1801 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x2141 = x2139 + x2140;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x2142 = x2141 + x1811;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x2143 = (x2142 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2143);
          reg = x2143;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x2144 = inv(x2142);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2144);
          reg = x2144;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2145 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x2145 != Fp::invalid());
      if (x2145 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x2142 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x2146 = x96 - x2145;
      if (x2146 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2147 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x2147 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2148 = x2142 * x2147;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2149 = x2148 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x2149 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":161:13)
      auto x2150 = x963 + x78;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":46:69))
      auto x2151 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x2151 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":71:17)
      auto x2152 = x1984 * x46;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":170:13)
      auto x2153 = x2131 * x2150;
      // loc("zirgen/components/u32.cpp":68:25)
      auto x2154 = x1982 * x90;
      // loc("zirgen/components/u32.cpp":68:49)
      auto x2155 = x1983 * x77;
      // loc("zirgen/components/u32.cpp":71:16)
      auto x2156 = x2152 * x47;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":171:36)
      auto x2157 = x96 - x2137;
      // loc("zirgen/components/u32.cpp":68:13)
      auto x2158 = x1981 + x2154;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":171:35)
      auto x2159 = x2157 * x2150;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":169:35)
      auto x2160 = x2132 * x2150;
      // loc("zirgen/components/u32.cpp":68:13)
      auto x2161 = x2158 + x2155;
      // loc("zirgen/components/u32.cpp":71:10)
      auto x2162 = x2161 + x2156;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":162:14)
      auto x2163 = x963 + x2162;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":171:13)
      auto x2164 = x2137 * x2163;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":169:13)
      auto x2165 = x2131 * x2163;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":170:34)
      auto x2166 = x2132 * x2163;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":171:13)
      auto x2167 = x2164 + x2159;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":169:13)
      auto x2168 = x2165 + x2160;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":170:13)
      auto x2169 = x2153 + x2166;
      if (x2151 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":46:69)
        auto x2170 = x1812 - x44;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":46:69)
        assert(x2170 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:46");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":46:69)
        auto x2171 = x1805 - x78;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":46:69)
        assert(x2171 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:46");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2172 = x1766 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2173 = x1768 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x2174 = x1768 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x2175 = x1771 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x2176 = x1769 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2177 = x2172 + x2175;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2178 = x2173 + x2176;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2179 = x2178 + x1767;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2180 = x2177 + x1971;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2180);
          reg = x2180;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2179);
          reg = x2179;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2174);
          reg = x2174;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2174);
          reg = x2174;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":43:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":44:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":45:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x88);
          reg = x88;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x2181 = x2150 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2182 = Fp(x2181.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2182);
            reg = x2182;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2183 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2183 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2184 = x2181 - x2183;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2185 = x2184 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2186 = Fp(x2185.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2186);
            reg = x2186;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2187 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2187 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2188 = x2185 - x2187;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2189 = x2188 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2190 = Fp(x2189.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2190);
            reg = x2190;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2191 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2191 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2192 = x2189 - x2191;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2193 = x2192 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x2194 = Fp(x2193.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2194);
            reg = x2194;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2195 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2195 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x2196 = x2193 - x2195;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x2197 = x2196 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2197);
          reg = x2197;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2198 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2198 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x2199 = x96 - x2198;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x2200 = x2198 * x2199;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2200);
          reg = x2200;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x2201 = x93 - x2198;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2202 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2202 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x2203 = x2202 * x2201;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x2203 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2204 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x2204 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":46:69)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2204);
          reg = x2204;
        }
        if (x2146 != 0) {
          extern_args[0] = x2142;
          extern_args[1] = x2074;
          extern_args[2] = x2078;
          extern_args[3] = x2086;
          extern_args[4] = x2090;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":46:69)
          auto x2205 = x2142 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2074);
            reg = x2074;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2078);
            reg = x2078;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2086);
            reg = x2086;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2090);
            reg = x2090;
          }
          {
            extern_args[0] = x2205;
            extern_args[1] = x2074;
            extern_args[2] = x2078;
            extern_args[3] = x2086;
            extern_args[4] = x2090;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2206 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x2206 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2207 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x2207 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2208 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2208 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2209 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2209 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2205);
            reg = x2205;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2206);
            reg = x2206;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2207);
            reg = x2207;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2208);
            reg = x2208;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2209);
            reg = x2209;
          }
        }
        if (x2145 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":47:69))
      auto x2210 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x2210 != Fp::invalid());
      if (x2210 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":47:69)
        auto x2211 = x1812 - x44;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":47:69)
        assert(x2211 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:47");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":47:69)
        auto x2212 = x1805 - x66;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":47:69)
        assert(x2212 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:47");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2213 = x1766 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2214 = x1768 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x2215 = x1768 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x2216 = x1771 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x2217 = x1769 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2218 = x2213 + x2216;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2219 = x2214 + x2217;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2220 = x2219 + x1767;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2221 = x2218 + x1971;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2221);
          reg = x2221;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2220);
          reg = x2220;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2215);
          reg = x2215;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2215);
          reg = x2215;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":38:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":39:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":40:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x2222 = x2150 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2223 = Fp(x2222.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2223);
            reg = x2223;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2224 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2224 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2225 = x2222 - x2224;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2226 = x2225 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2227 = Fp(x2226.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2227);
            reg = x2227;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2228 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2228 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2229 = x2226 - x2228;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2230 = x2229 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2231 = Fp(x2230.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2231);
            reg = x2231;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2232 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2232 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2233 = x2230 - x2232;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2234 = x2233 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x2235 = Fp(x2234.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2235);
            reg = x2235;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2236 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2236 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x2237 = x2234 - x2236;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x2238 = x2237 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2238);
          reg = x2238;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2239 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2239 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x2240 = x96 - x2239;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x2241 = x2239 * x2240;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2241);
          reg = x2241;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x2242 = x93 - x2239;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2243 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2243 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x2244 = x2243 * x2242;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x2244 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2245 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x2245 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":47:69)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2245);
          reg = x2245;
        }
        if (x2146 != 0) {
          extern_args[0] = x2142;
          extern_args[1] = x2074;
          extern_args[2] = x2078;
          extern_args[3] = x2086;
          extern_args[4] = x2090;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":47:69)
          auto x2246 = x2142 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2074);
            reg = x2074;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2078);
            reg = x2078;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2086);
            reg = x2086;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2090);
            reg = x2090;
          }
          {
            extern_args[0] = x2246;
            extern_args[1] = x2074;
            extern_args[2] = x2078;
            extern_args[3] = x2086;
            extern_args[4] = x2090;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2247 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x2247 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2248 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x2248 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2249 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2249 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2250 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2250 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2246);
            reg = x2246;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2247);
            reg = x2247;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2248);
            reg = x2248;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2249);
            reg = x2249;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2250);
            reg = x2250;
          }
        }
        if (x2145 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":48:69))
      auto x2251 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x2251 != Fp::invalid());
      if (x2251 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":48:69)
        auto x2252 = x1812 - x44;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":48:69)
        assert(x2252 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:48");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":48:69)
        auto x2253 = x1805 - x65;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":48:69)
        assert(x2253 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:48");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2254 = x1766 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2255 = x1768 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x2256 = x1768 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x2257 = x1771 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x2258 = x1769 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2259 = x2254 + x2257;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2260 = x2255 + x2258;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2261 = x2260 + x1767;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2262 = x2259 + x1971;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2262);
          reg = x2262;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2261);
          reg = x2261;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2256);
          reg = x2256;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2256);
          reg = x2256;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":33:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":34:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":35:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x66);
          reg = x66;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x2263 = x2150 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2264 = Fp(x2263.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2264);
            reg = x2264;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2265 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2265 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2266 = x2263 - x2265;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2267 = x2266 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2268 = Fp(x2267.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2268);
            reg = x2268;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2269 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2269 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2270 = x2267 - x2269;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2271 = x2270 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2272 = Fp(x2271.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2272);
            reg = x2272;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2273 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2273 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2274 = x2271 - x2273;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2275 = x2274 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x2276 = Fp(x2275.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2276);
            reg = x2276;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2277 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2277 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x2278 = x2275 - x2277;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x2279 = x2278 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2279);
          reg = x2279;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2280 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2280 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x2281 = x96 - x2280;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x2282 = x2280 * x2281;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2282);
          reg = x2282;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x2283 = x93 - x2280;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2284 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2284 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x2285 = x2284 * x2283;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x2285 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2286 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x2286 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":48:69)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2286);
          reg = x2286;
        }
        if (x2146 != 0) {
          extern_args[0] = x2142;
          extern_args[1] = x2074;
          extern_args[2] = x2078;
          extern_args[3] = x2086;
          extern_args[4] = x2090;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":48:69)
          auto x2287 = x2142 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2074);
            reg = x2074;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2078);
            reg = x2078;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2086);
            reg = x2086;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2090);
            reg = x2090;
          }
          {
            extern_args[0] = x2287;
            extern_args[1] = x2074;
            extern_args[2] = x2078;
            extern_args[3] = x2086;
            extern_args[4] = x2090;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2288 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x2288 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2289 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x2289 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2290 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2290 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2291 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2291 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2287);
            reg = x2287;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2288);
            reg = x2288;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2289);
            reg = x2289;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2290);
            reg = x2290;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2291);
            reg = x2291;
          }
        }
        if (x2145 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68))
      auto x2292 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x2292 != Fp::invalid());
      if (x2292 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
        auto x2293 = x1812 - x44;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
        assert(x2293 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:49");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
        auto x2294 = x1805 - x93;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
        assert(x2294 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:49");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2295 = x1766 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2296 = x1768 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x2297 = x1768 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x2298 = x1771 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x2299 = x1769 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2300 = x2295 + x2298;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2301 = x2296 + x2299;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2302 = x2301 + x1767;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2303 = x2300 + x1971;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2303);
          reg = x2303;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2302);
          reg = x2302;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2297);
          reg = x2297;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2297);
          reg = x2297;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x2304 = x2150 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2305 = Fp(x2304.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2305);
            reg = x2305;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2306 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2306 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2307 = x2304 - x2306;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2308 = x2307 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2309 = Fp(x2308.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2309);
            reg = x2309;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2310 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2310 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2311 = x2308 - x2310;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2312 = x2311 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2313 = Fp(x2312.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2313);
            reg = x2313;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2314 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2314 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2315 = x2312 - x2314;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2316 = x2315 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x2317 = Fp(x2316.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2317);
            reg = x2317;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2318 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2318 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x2319 = x2316 - x2318;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x2320 = x2319 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2320);
          reg = x2320;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2321 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2321 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x2322 = x96 - x2321;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x2323 = x2321 * x2322;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2323);
          reg = x2323;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x2324 = x93 - x2321;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2325 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2325 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x2326 = x2325 * x2324;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x2326 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2327 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x2327 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2327);
          reg = x2327;
        }
        if (x2146 != 0) {
          extern_args[0] = x2142;
          extern_args[1] = x2137;
          extern_args[2] = x95;
          extern_args[3] = x95;
          extern_args[4] = x95;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":49:68)
          auto x2328 = x2142 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2137);
            reg = x2137;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          {
            extern_args[0] = x2328;
            extern_args[1] = x2137;
            extern_args[2] = x95;
            extern_args[3] = x95;
            extern_args[4] = x95;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2329 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x2329 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2330 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x2330 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2331 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2331 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2332 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2332 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2328);
            reg = x2328;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2329);
            reg = x2329;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2330);
            reg = x2330;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2331);
            reg = x2331;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2332);
            reg = x2332;
          }
        }
        if (x2145 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68))
      auto x2333 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x2333 != Fp::invalid());
      if (x2333 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        auto x2334 = x1812 - x44;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        assert(x2334 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:50");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        auto x2335 = x1805 - x76;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        assert(x2335 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:50");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2336 = x1766 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2337 = x1768 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x2338 = x1768 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x2339 = x1771 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x2340 = x1769 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2341 = x2336 + x2339;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2342 = x2337 + x2340;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x2343 = x2342 + x1767;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x2344 = x2341 + x1971;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2344);
          reg = x2344;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2343);
          reg = x2343;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2338);
          reg = x2338;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2338);
          reg = x2338;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x2345 = x2150 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2346 = Fp(x2345.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2346);
            reg = x2346;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2347 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2347 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2348 = x2345 - x2347;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2349 = x2348 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2350 = Fp(x2349.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2350);
            reg = x2350;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2351 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2351 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2352 = x2349 - x2351;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2353 = x2352 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2354 = Fp(x2353.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2354);
            reg = x2354;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2355 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2355 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2356 = x2353 - x2355;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2357 = x2356 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x2358 = Fp(x2357.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2358);
            reg = x2358;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2359 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2359 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x2360 = x2357 - x2359;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x2361 = x2360 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2361);
          reg = x2361;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2362 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2362 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x2363 = x96 - x2362;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x2364 = x2362 * x2363;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2364);
          reg = x2364;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x2365 = x93 - x2362;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2366 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2366 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x2367 = x2366 * x2365;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x2367 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2368 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x2368 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2368);
          reg = x2368;
        }
        if (x2146 != 0) {
          extern_args[0] = x2142;
          extern_args[1] = x2138;
          extern_args[2] = x95;
          extern_args[3] = x95;
          extern_args[4] = x95;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":50:68)
          auto x2369 = x2142 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2138);
            reg = x2138;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          {
            extern_args[0] = x2369;
            extern_args[1] = x2138;
            extern_args[2] = x95;
            extern_args[3] = x95;
            extern_args[4] = x95;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2370 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x2370 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2371 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x2371 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2372 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2372 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2373 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2373 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2369);
            reg = x2369;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2370);
            reg = x2370;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2371);
            reg = x2371;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2372);
            reg = x2372;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2373);
            reg = x2373;
          }
        }
        if (x2145 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:68))
      auto x2374 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x2374 != Fp::invalid());
      if (x2374 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:68)
        auto x2375 = x1812 - x42;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:68)
        assert(x2375 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:51");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:68)
        assert(x1805 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:51");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2376 = x1766 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2377 = x1768 * x43;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x2378 = x1768 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
        auto x2379 = x1811 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
        auto x2380 = x1771 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
        auto x2381 = x1769 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2382 = x2376 + x2380;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2383 = x2377 + x2379;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2384 = x2382 + x2139;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2385 = x2383 + x2381;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2386 = x2384 + x2140;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2387 = x2385 + x1767;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2386);
          reg = x2386;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2387);
          reg = x2387;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2378);
          reg = x2378;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2378);
          reg = x2378;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x2388 = x2168 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2389 = Fp(x2388.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2389);
            reg = x2389;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2390 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2390 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2391 = x2388 - x2390;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2392 = x2391 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2393 = Fp(x2392.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2393);
            reg = x2393;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2394 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2394 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2395 = x2392 - x2394;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2396 = x2395 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2397 = Fp(x2396.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2397);
            reg = x2397;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2398 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2398 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2399 = x2396 - x2398;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2400 = x2399 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x2401 = Fp(x2400.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2401);
            reg = x2401;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2402 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2402 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x2403 = x2400 - x2402;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x2404 = x2403 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2404);
          reg = x2404;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2405 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2405 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x2406 = x96 - x2405;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x2407 = x2405 * x2406;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2407);
          reg = x2407;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x2408 = x93 - x2405;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2409 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2409 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x2410 = x2409 * x2408;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x2410 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2411 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x2411 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2411);
          reg = x2411;
        }
        if (x95 != 0) {
          extern_args[0] = x2142;
          extern_args[1] = x2074;
          extern_args[2] = x2078;
          extern_args[3] = x2086;
          extern_args[4] = x2090;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:68)
          auto x2412 = x2142 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2074);
            reg = x2074;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2078);
            reg = x2078;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2086);
            reg = x2086;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2090);
            reg = x2090;
          }
          {
            extern_args[0] = x2412;
            extern_args[1] = x2074;
            extern_args[2] = x2078;
            extern_args[3] = x2086;
            extern_args[4] = x2090;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2413 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x2413 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2414 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x2414 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2415 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2415 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2416 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2416 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2412);
            reg = x2412;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2413);
            reg = x2413;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2414);
            reg = x2414;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2415);
            reg = x2415;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2416);
            reg = x2416;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":51:68)
        auto x2417 = x2145 + x96;
        if (x2417 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:68))
      auto x2418 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x2418 != Fp::invalid());
      if (x2418 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:68)
        auto x2419 = x1812 - x42;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:68)
        assert(x2419 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:52");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:68)
        auto x2420 = x1805 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:68)
        assert(x2420 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:52");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2421 = x1766 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2422 = x1768 * x43;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x2423 = x1768 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
        auto x2424 = x1811 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
        auto x2425 = x1771 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
        auto x2426 = x1769 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2427 = x2421 + x2425;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2428 = x2422 + x2424;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2429 = x2427 + x2139;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2430 = x2428 + x2426;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2431 = x2429 + x2140;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2432 = x2430 + x1767;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2431);
          reg = x2431;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2432);
          reg = x2432;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2423);
          reg = x2423;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2423);
          reg = x2423;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x2433 = x2169 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2434 = Fp(x2433.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2434);
            reg = x2434;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2435 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2435 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2436 = x2433 - x2435;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2437 = x2436 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2438 = Fp(x2437.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2438);
            reg = x2438;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2439 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2439 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2440 = x2437 - x2439;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2441 = x2440 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2442 = Fp(x2441.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2442);
            reg = x2442;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2443 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2443 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2444 = x2441 - x2443;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2445 = x2444 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x2446 = Fp(x2445.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2446);
            reg = x2446;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2447 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2447 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x2448 = x2445 - x2447;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x2449 = x2448 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2449);
          reg = x2449;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2450 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2450 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x2451 = x96 - x2450;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x2452 = x2450 * x2451;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2452);
          reg = x2452;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x2453 = x93 - x2450;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2454 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2454 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x2455 = x2454 * x2453;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x2455 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2456 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x2456 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2456);
          reg = x2456;
        }
        if (x95 != 0) {
          extern_args[0] = x2142;
          extern_args[1] = x2074;
          extern_args[2] = x2078;
          extern_args[3] = x2086;
          extern_args[4] = x2090;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:68)
          auto x2457 = x2142 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2074);
            reg = x2074;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2078);
            reg = x2078;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2086);
            reg = x2086;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2090);
            reg = x2090;
          }
          {
            extern_args[0] = x2457;
            extern_args[1] = x2074;
            extern_args[2] = x2078;
            extern_args[3] = x2086;
            extern_args[4] = x2090;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2458 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x2458 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2459 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x2459 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2460 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2460 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2461 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2461 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2457);
            reg = x2457;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2458);
            reg = x2458;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2459);
            reg = x2459;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2460);
            reg = x2460;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2461);
            reg = x2461;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":52:68)
        auto x2462 = x2145 + x96;
        if (x2462 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:68))
      auto x2463 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x2463 != Fp::invalid());
      if (x2463 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:68)
        auto x2464 = x1812 - x42;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:68)
        assert(x2464 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:53");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:68)
        auto x2465 = x1805 - x78;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:68)
        assert(x2465 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:53");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2466 = x1766 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2467 = x1768 * x43;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x2468 = x1768 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
        auto x2469 = x1811 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
        auto x2470 = x1771 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
        auto x2471 = x1769 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2472 = x2466 + x2470;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2473 = x2467 + x2469;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2474 = x2472 + x2139;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2475 = x2473 + x2471;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2476 = x2474 + x2140;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2477 = x2475 + x1767;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2476);
          reg = x2476;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2477);
          reg = x2477;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2468);
          reg = x2468;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2468);
          reg = x2468;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x2478 = x2167 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2479 = Fp(x2478.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2479);
            reg = x2479;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2480 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2480 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2481 = x2478 - x2480;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2482 = x2481 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2483 = Fp(x2482.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2483);
            reg = x2483;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2484 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2484 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2485 = x2482 - x2484;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2486 = x2485 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2487 = Fp(x2486.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2487);
            reg = x2487;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2488 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2488 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2489 = x2486 - x2488;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2490 = x2489 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x2491 = Fp(x2490.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2491);
            reg = x2491;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2492 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2492 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x2493 = x2490 - x2492;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x2494 = x2493 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2494);
          reg = x2494;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2495 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2495 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x2496 = x96 - x2495;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x2497 = x2495 * x2496;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2497);
          reg = x2497;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x2498 = x93 - x2495;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2499 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2499 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x2500 = x2499 * x2498;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x2500 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2501 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x2501 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2501);
          reg = x2501;
        }
        if (x95 != 0) {
          extern_args[0] = x2142;
          extern_args[1] = x2074;
          extern_args[2] = x2078;
          extern_args[3] = x2086;
          extern_args[4] = x2090;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:68)
          auto x2502 = x2142 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2074);
            reg = x2074;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2078);
            reg = x2078;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2086);
            reg = x2086;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2090);
            reg = x2090;
          }
          {
            extern_args[0] = x2502;
            extern_args[1] = x2074;
            extern_args[2] = x2078;
            extern_args[3] = x2086;
            extern_args[4] = x2090;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2503 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x2503 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2504 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x2504 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2505 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2505 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2506 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2506 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2502);
            reg = x2502;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2503);
            reg = x2503;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2504);
            reg = x2504;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2505);
            reg = x2505;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2506);
            reg = x2506;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":53:68)
        auto x2507 = x2145 + x96;
        if (x2507 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[2](Reg)"("./zirgen/components/mux.h":49:25))
    auto x2508 = arg2[102 * steps + ((cycle - 0) & mask)];
    assert(x2508 != Fp::invalid());
    if (x2508 != 0) {
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":112:41)
      auto x2509 = x963 * x75;
      {
        extern_args[0] = x2509;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x2510 = extern_outs[0];
        auto x2511 = extern_outs[1];
        auto x2512 = extern_outs[2];
        auto x2513 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2510);
          reg = x2510;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2511);
          reg = x2511;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2512);
          reg = x2512;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2513);
          reg = x2513;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2514 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x2514 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2515 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x2515 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2516 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x2516 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2517 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x2517 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[116 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2509);
        reg = x2509;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[117 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2514);
        reg = x2514;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2515);
        reg = x2515;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2516);
        reg = x2516;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2517);
        reg = x2517;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:16)
        auto x2518 = Fp(x2517.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:15)
        auto x2519 = x2518 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2519);
          reg = x2519;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:17)
        auto x2520 = Fp(x2517.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:16)
        auto x2521 = x2520 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2521);
          reg = x2521;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:16)
        auto x2522 = Fp(x2517.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:15)
        auto x2523 = x2522 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2523);
          reg = x2523;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:16)
        auto x2524 = Fp(x2517.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:15)
        auto x2525 = x2524 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2525);
          reg = x2525;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:17)
        auto x2526 = Fp(x2517.asUInt32() & x66.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:16)
        auto x2527 = x2526 * x54;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2527);
          reg = x2527;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":16:17)
        auto x2528 = Fp(x2517.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2528);
          reg = x2528;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:17)
        auto x2529 = Fp(x2516.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:16)
        auto x2530 = x2529 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2530);
          reg = x2530;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:18)
        auto x2531 = Fp(x2516.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:17)
        auto x2532 = x2531 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2532);
          reg = x2532;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:17)
        auto x2533 = Fp(x2516.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:16)
        auto x2534 = x2533 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2534);
          reg = x2534;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:18)
        auto x2535 = Fp(x2516.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:17)
        auto x2536 = x2535 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2536);
          reg = x2536;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:18)
        auto x2537 = Fp(x2516.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2537);
          reg = x2537;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x2538 = Fp(x2515.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x2539 = x2538 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2539);
          reg = x2539;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:19)
        auto x2540 = Fp(x2515.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:18)
        auto x2541 = x2540 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2541);
          reg = x2541;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:20)
        auto x2542 = Fp(x2515.asUInt32() & x51.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:19)
        auto x2543 = x2542 * x56;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2543);
          reg = x2543;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x2544 = Fp(x2515.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x2545 = x2544 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2545);
          reg = x2545;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x2546 = Fp(x2515.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2546);
          reg = x2546;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x2547 = Fp(x2514.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:15)
        auto x2548 = x2547 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2548);
          reg = x2548;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x2549 = Fp(x2514.asUInt32() & x50.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:5)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2549);
          reg = x2549;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2550 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x2550 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2551 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x2551 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2552 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x2552 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2553 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x2553 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2554 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x2554 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2555 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x2555 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x2556 = x2552 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x2557 = x2553 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:39)
      auto x2558 = x2550 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:25)
      auto x2559 = x2551 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x2560 = x2557 + x2559;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x2561 = x2560 + x2558;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x2562 = x2561 + x2555;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x2563 = x2556 + x2562;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x2564 = x2563 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x2565 = x2564 + x2554;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      auto x2566 = x2517 - x2565;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      assert(x2566 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:30");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2567 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x2567 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2568 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x2568 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2569 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x2569 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2570 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x2570 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2571 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x2571 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x2572 = x2567 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:37)
      auto x2573 = x2568 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:69)
      auto x2574 = x2569 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x2575 = x2572 + x2573;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x2576 = x2575 + x2570;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x2577 = x2576 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x2578 = x2577 + x2574;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x2579 = x2578 + x2571;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      auto x2580 = x2516 - x2579;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      assert(x2580 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:31");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2581 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x2581 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2582 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x2582 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2583 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x2583 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2584 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x2584 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2585 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x2585 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x2586 = x2581 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x2587 = x2582 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:53)
      auto x2588 = x2583 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x2589 = x2587 + x2584;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:36)
      auto x2590 = x2589 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x2591 = x2586 + x2590;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x2592 = x2591 + x2588;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x2593 = x2592 + x2585;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      auto x2594 = x2515 - x2593;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      assert(x2594 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:32");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2595 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x2595 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x2596 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x2596 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x2597 = x2595 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x2598 = x2597 + x2596;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      auto x2599 = x2514 - x2598;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      assert(x2599 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:33");
      {
        extern_args[0] = x2514;
        extern_args[1] = x2515;
        extern_args[2] = x2516;
        extern_args[3] = x2517;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x2600 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2601 = (x2600 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[181 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2601);
            reg = x2601;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2602 = x2600 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2603 = (x2602 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[182 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2603);
            reg = x2603;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2604 = x2600 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2605 = (x2604 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2605);
            reg = x2605;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2606 = x2600 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2607 = (x2606 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2607);
            reg = x2607;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2608 = x2600 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2609 = (x2608 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2609);
            reg = x2609;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2610 = x2600 - x67;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2611 = (x2610 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2611);
            reg = x2611;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2612 = x2600 - x66;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2613 = (x2612 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2613);
            reg = x2613;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2614 = x2600 - x65;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x2615 = (x2614 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2615);
            reg = x2615;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2616 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x2616 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2617 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x2617 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2618 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x2618 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2619 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x2619 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2620 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x2620 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2621 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x2621 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2622 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x2622 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x2623 = x2617 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x2624 = x2618 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x2625 = x2619 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x2626 = x2620 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x2627 = x2621 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x2628 = x2622 * x65;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x2629 = x2616 + x2623;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x2630 = x2629 + x2624;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x2631 = x2630 + x2625;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x2632 = x2631 + x2626;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x2633 = x2632 + x2627;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x2634 = x2633 + x2628;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x2635 = x2634 - x2600;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x2635 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68))
        auto x2636 = arg2[181 * steps + ((cycle - 0) & mask)];
        assert(x2636 != Fp::invalid());
        if (x2636 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2637 = x2550 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2638 = x2552 * x43;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x2639 = x2552 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
          auto x2640 = x2595 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
          auto x2641 = x2555 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
          auto x2642 = x2553 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:51)
          auto x2643 = x2585 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:36)
          auto x2644 = x2583 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2645 = x2637 + x2641;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2646 = x2638 + x2640;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2647 = x2645 + x2644;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2648 = x2646 + x2642;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2649 = x2647 + x2643;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2650 = x2648 + x2551;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2649);
            reg = x2649;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2650);
            reg = x2650;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2639);
            reg = x2639;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2639);
            reg = x2639;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68))
        auto x2651 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x2651 != Fp::invalid());
        if (x2651 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2652 = x2550 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2653 = x2552 * x43;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x2654 = x2552 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
          auto x2655 = x2595 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
          auto x2656 = x2555 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
          auto x2657 = x2553 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:51)
          auto x2658 = x2585 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:36)
          auto x2659 = x2583 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2660 = x2652 + x2656;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2661 = x2653 + x2655;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2662 = x2660 + x2659;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2663 = x2661 + x2657;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2664 = x2662 + x2658;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2665 = x2663 + x2551;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2664);
            reg = x2664;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2665);
            reg = x2665;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2654);
            reg = x2654;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2654);
            reg = x2654;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68))
        auto x2666 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x2666 != Fp::invalid());
        if (x2666 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2667 = x2550 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2668 = x2552 * x43;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
          auto x2669 = x2552 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
          auto x2670 = x2595 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
          auto x2671 = x2555 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
          auto x2672 = x2553 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:51)
          auto x2673 = x2585 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:36)
          auto x2674 = x2583 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2675 = x2667 + x2671;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2676 = x2668 + x2670;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2677 = x2675 + x2674;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2678 = x2676 + x2672;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
          auto x2679 = x2677 + x2673;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
          auto x2680 = x2678 + x2551;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2679);
            reg = x2679;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2680);
            reg = x2680;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2669);
            reg = x2669;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2669);
            reg = x2669;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x89);
            reg = x89;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:68))
        auto x2681 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x2681 != Fp::invalid());
        if (x2681 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":106:7)
          auto x2682 = x2550 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":108:7)
          auto x2683 = x2552 * x43;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x2684 = x2554 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":109:7)
          auto x2685 = x2552 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":107:39)
          auto x2686 = x2570 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":106:21)
          auto x2687 = x2555 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":107:54)
          auto x2688 = x2553 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":106:7)
          auto x2689 = x2682 + x2687;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":108:7)
          auto x2690 = x2683 + x2574;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":108:7)
          auto x2691 = x2690 + x2571;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x2692 = x2684 + x2576;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":106:7)
          auto x2693 = x2689 + x2692;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":106:7)
          auto x2694 = x2693 - x2570;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":107:7)
          auto x2695 = x2591 + x2686;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":107:7)
          auto x2696 = x2695 + x2688;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":107:7)
          auto x2697 = x2696 + x2551;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2694);
            reg = x2694;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2697);
            reg = x2697;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2691);
            reg = x2691;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2685);
            reg = x2685;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":23:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":24:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":25:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:68))
        auto x2698 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x2698 != Fp::invalid());
        if (x2698 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x2699 = x2550 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x2700 = x2552 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x2701 = x2554 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x2702 = x2552 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x2703 = x2555 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x2704 = x2553 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x2705 = x2699 + x2703;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x2706 = x2700 + x2704;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x2707 = x2706 + x2551;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x2708 = x2701 + x2576;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x2709 = x2705 + x2708;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2709);
            reg = x2709;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2707);
            reg = x2707;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2702);
            reg = x2702;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2702);
            reg = x2702;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":23:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":24:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":25:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:68))
        auto x2710 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x2710 != Fp::invalid());
        if (x2710 != 0) {
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2591);
            reg = x2591;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2579);
            reg = x2579;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2565);
            reg = x2565;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":48:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":49:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":50:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68))
        auto x2711 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x2711 != Fp::invalid());
        if (x2711 != 0) {
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2591);
            reg = x2591;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2579);
            reg = x2579;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2565);
            reg = x2565;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":23:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":24:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":25:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x2712 = x2569 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:26)
      auto x2713 = x2571 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x2714 = x2712 + x2713;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x2715 = x2714 + x2581;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":134:39)
      auto x2716 = x2715 + x48;
      {
        extern_args[0] = x2716;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x2717 = extern_outs[0];
        auto x2718 = extern_outs[1];
        auto x2719 = extern_outs[2];
        auto x2720 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2717);
          reg = x2717;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2718);
          reg = x2718;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2719);
          reg = x2719;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2720);
          reg = x2720;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2721 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x2721 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2722 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x2722 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2723 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x2723 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2724 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x2724 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2716);
        reg = x2716;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2721);
        reg = x2721;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2722);
        reg = x2722;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2723);
        reg = x2723;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2724);
        reg = x2724;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x2725 = x2554 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x2726 = x2725 + x2576;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":135:39)
      auto x2727 = x2726 + x48;
      {
        extern_args[0] = x2727;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x2728 = extern_outs[0];
        auto x2729 = extern_outs[1];
        auto x2730 = extern_outs[2];
        auto x2731 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2728);
          reg = x2728;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2729);
          reg = x2729;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2730);
          reg = x2730;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2731);
          reg = x2731;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2732 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x2732 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2733 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x2733 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2734 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x2734 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2735 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x2735 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2727);
        reg = x2727;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2732);
        reg = x2732;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2733);
        reg = x2733;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2734);
        reg = x2734;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2735);
        reg = x2735;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2736 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x2736 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2737 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x2737 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2738 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x2738 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2739 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x2739 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2740 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x2740 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2741 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x2741 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2742 = x2740 * x951;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2743 = x2740 * x954;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2744 = x2741 * x2736;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2745 = x2741 * x2737;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2746 = x2741 * x2738;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2747 = x2741 * x2739;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":35:52)
      auto x2748 = x953 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":139:17)
      auto x2749 = x96 - x2740;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":141:17)
      auto x2750 = x96 - x2741;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x2751 = x950 - x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":35:41)
      auto x2752 = x952 + x2748;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2753 = x2749 * x2721;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2754 = x2749 * x2722;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2755 = x2749 * x2723;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2756 = x2749 * x2724;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2757 = x2750 * x2732;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2758 = x2750 * x2733;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2759 = x2750 * x2734;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2760 = x2750 * x2735;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2761 = x2740 * x2752;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2762 = x2740 * x2751;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2763 = x2753 + x2762;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2764 = x2754 + x2742;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2765 = x2755 + x2743;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2766 = x2756 + x2761;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2767 = x2757 + x2744;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2768 = x2758 + x2745;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2769 = x2759 + x2746;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2770 = x2760 + x2747;
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x2771 = Fp(x2766.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x2772 = x2771 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2772);
          reg = x2772;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x2773 = Fp(x2766.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x2774 = x2773 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2774);
          reg = x2774;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x2775 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x2775 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2776 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x2776 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2777 = x2776 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x2778 = x2775 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2779 = x2777 + x2778;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x2780 = x2766 - x2779;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x2780 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x2781 = Fp(x2770.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x2782 = x2781 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2782);
          reg = x2782;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x2783 = Fp(x2770.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x2784 = x2783 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2784);
          reg = x2784;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x2785 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x2785 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2786 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x2786 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2787 = x2786 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x2788 = x2785 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2789 = x2787 + x2788;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x2790 = x2770 - x2789;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x2790 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[201 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2767);
        reg = x2767;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[202 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2768);
        reg = x2768;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[203 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2769);
        reg = x2769;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[204 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2770);
        reg = x2770;
      }
      {
        // loc("zirgen/components/u32.cpp":119:20)
        auto x2791 = Fp(x2763.asUInt32() & x2767.asUInt32());
        // loc("zirgen/components/u32.cpp":119:20)
        auto x2792 = Fp(x2764.asUInt32() & x2768.asUInt32());
        // loc("zirgen/components/u32.cpp":119:20)
        auto x2793 = Fp(x2765.asUInt32() & x2769.asUInt32());
        // loc("zirgen/components/u32.cpp":119:20)
        auto x2794 = Fp(x2766.asUInt32() & x2770.asUInt32());
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[205 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2791);
          reg = x2791;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[206 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2792);
          reg = x2792;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2793);
          reg = x2793;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2794);
          reg = x2794;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2795 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x2795 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2796 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x2796 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2797 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x2797 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2798 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x2798 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2799 = arg2[206 * steps + ((cycle - 0) & mask)];
      assert(x2799 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2800 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x2800 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2801 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x2801 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2802 = x2795 * x2763;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2803 = x2795 * x2764;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2804 = x2795 * x2765;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2805 = x2795 * x2766;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2806 = x2796 * x2767;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2807 = x2796 * x2768;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2808 = x2796 * x2769;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2809 = x2796 * x2770;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2810 = x2797 * x2798;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2811 = x2797 * x2799;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2812 = x2797 * x2800;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x2813 = x2797 * x2801;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2814 = x2802 + x90;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2815 = x2803 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2816 = x2804 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2817 = x2805 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2818 = x2814 + x2806;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2819 = x2815 + x2807;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2820 = x2816 + x2808;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2821 = x2817 + x2809;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2822 = x2820 + x2812;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2823 = x2818 + x2810;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2824 = x2819 + x2811;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x2825 = x2821 + x2813;
      // loc("zirgen/components/u32.cpp":152:29)
      auto x2826 = x2824 * x90;
      // loc("zirgen/components/u32.cpp":152:15)
      auto x2827 = x2823 + x2826;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x2828 = Fp(x2827.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2828);
          reg = x2828;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x2829 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x2829 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x2830 = x2827 - x2829;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x2831 = x2830 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x2832 = Fp(x2831.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2832);
          reg = x2832;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x2833 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x2833 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x2834 = x2831 - x2833;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x2835 = x2834 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2835);
        reg = x2835;
      }
      // loc("zirgen/components/u32.cpp":154:41)
      auto x2836 = x2825 * x90;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2837 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x2837 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":154:16)
      auto x2838 = x2837 + x2822;
      // loc("zirgen/components/u32.cpp":154:16)
      auto x2839 = x2838 + x2836;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x2840 = Fp(x2839.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2840);
          reg = x2840;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x2841 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x2841 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x2842 = x2839 - x2841;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x2843 = x2842 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x2844 = Fp(x2843.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2844);
          reg = x2844;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x2845 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x2845 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x2846 = x2843 - x2845;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x2847 = x2846 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2847);
        reg = x2847;
      }
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x2848 = Fp(x2845.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x2849 = x2848 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2849);
          reg = x2849;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x2850 = Fp(x2845.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x2851 = x2850 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2851);
          reg = x2851;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2852 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x2852 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x2853 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x2853 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2854 = x2852 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x2855 = x2853 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x2856 = x2854 + x2855;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x2857 = x2845 - x2856;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x2857 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:45)
      auto x2858 = x96 - x2776;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:23)
      auto x2859 = x96 - x2786;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:34)
      auto x2860 = x96 - x2852;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:17)
      auto x2861 = x2776 * x2859;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:17)
      auto x2862 = x2861 * x2860;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:44)
      auto x2863 = x2858 * x2786;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:44)
      auto x2864 = x2863 * x2852;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:17)
      auto x2865 = x2862 + x2864;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":69:3)
      {
        auto& reg = arg2[210 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2865);
        reg = x2865;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x2866 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x2866 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:27)
      auto x2867 = x2866 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:27)
      auto x2868 = x2867 * x2852;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:11)
      auto x2869 = x2866 + x2852;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:11)
      auto x2870 = x2869 - x2868;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":71:3)
      {
        auto& reg = arg2[211 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x2870);
        reg = x2870;
      }
      // loc("zirgen/components/u32.cpp":143:26)
      auto x2871 = x2833 * x90;
      // loc("zirgen/components/u32.cpp":143:12)
      auto x2872 = x2829 + x2871;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x2873 = (x2872 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[212 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2873);
          reg = x2873;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x2874 = inv(x2872);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[213 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2874);
          reg = x2874;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2875 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x2875 != Fp::invalid());
      if (x2875 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x2872 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x2876 = x96 - x2875;
      if (x2876 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2877 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x2877 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2878 = x2872 * x2877;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2879 = x2878 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x2879 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/components/u32.cpp":144:27)
      auto x2880 = x2845 * x90;
      // loc("zirgen/components/u32.cpp":144:13)
      auto x2881 = x2841 + x2880;
      // loc("zirgen/components/u32.cpp":144:47)
      auto x2882 = x2876 * x77;
      // loc("zirgen/components/u32.cpp":144:13)
      auto x2883 = x2881 + x2882;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x2884 = (x2883 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[214 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2884);
          reg = x2884;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x2885 = inv(x2883);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2885);
          reg = x2885;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2886 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x2886 != Fp::invalid());
      if (x2886 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x2883 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x2887 = x96 - x2886;
      if (x2887 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2888 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x2888 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2889 = x2883 * x2888;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2890 = x2889 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x2890 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2891 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x2891 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ALU/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2892 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x2892 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":97:10)
      auto x2893 = x96 - x2891;
      extern_args[0] = x2736;
      extern_args[1] = x2737;
      extern_args[2] = x2738;
      extern_args[3] = x2739;
      extern_args[4] = x2715;
      extern_args[5] = x2721;
      extern_args[6] = x2722;
      extern_args[7] = x2723;
      extern_args[8] = x2724;
      extern_args[9] = x2726;
      extern_args[10] = x2732;
      extern_args[11] = x2733;
      extern_args[12] = x2734;
      extern_args[13] = x2735;
      extern_args[14] = x2763;
      extern_args[15] = x2764;
      extern_args[16] = x2765;
      extern_args[17] = x2766;
      extern_args[18] = x2767;
      extern_args[19] = x2768;
      extern_args[20] = x2769;
      extern_args[21] = x2770;
      extern_args[22] = x2829;
      extern_args[23] = x2833;
      extern_args[24] = x2841;
      extern_args[25] = x2845;
      extern_args[26] = x2886;
      extern_args[27] = x2892;
      extern_args[28] = x2893;
      extern_log(ctx, cycle, "  imm=%w, rs1=x%u -> %w, rs2=x%u -> %w, inA = %w, inB = %w, ALU output = %w, EQ:%u, LT:%u, LTU:%u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x2894 = x2583 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:25)
      auto x2895 = x2585 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x2896 = x2894 + x2895;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x2897 = x2896 + x2595;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x2898 = (x2897 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2898);
          reg = x2898;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x2899 = inv(x2897);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2899);
          reg = x2899;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x2900 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x2900 != Fp::invalid());
      if (x2900 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x2897 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x2901 = x96 - x2900;
      if (x2901 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2902 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x2902 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2903 = x2897 * x2902;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x2904 = x2903 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x2904 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":161:13)
      auto x2905 = x963 + x78;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68))
      auto x2906 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x2906 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":71:17)
      auto x2907 = x2739 * x46;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":172:13)
      auto x2908 = x2892 * x2905;
      // loc("zirgen/components/u32.cpp":68:25)
      auto x2909 = x2737 * x90;
      // loc("zirgen/components/u32.cpp":68:49)
      auto x2910 = x2738 * x77;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":167:57)
      auto x2911 = x2841 * x77;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":168:14)
      auto x2912 = x2845 * x79;
      // loc("zirgen/components/u32.cpp":71:16)
      auto x2913 = x2907 * x47;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":172:35)
      auto x2914 = x96 - x2892;
      // loc("zirgen/components/u32.cpp":68:13)
      auto x2915 = x2736 + x2909;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":174:14)
      auto x2916 = x2893 * x2905;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":173:38)
      auto x2917 = x96 - x2893;
      // loc("zirgen/components/u32.cpp":68:13)
      auto x2918 = x2915 + x2910;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":167:13)
      auto x2919 = x2872 + x2911;
      // loc("zirgen/components/u32.cpp":71:10)
      auto x2920 = x2918 + x2913;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":162:14)
      auto x2921 = x963 + x2920;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":173:14)
      auto x2922 = x2893 * x2921;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":172:34)
      auto x2923 = x2914 * x2921;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":174:36)
      auto x2924 = x2917 * x2921;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":173:37)
      auto x2925 = x2917 * x2905;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":167:13)
      auto x2926 = x2919 + x2912;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":172:13)
      auto x2927 = x2908 + x2923;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":173:14)
      auto x2928 = x2922 + x2925;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":174:14)
      auto x2929 = x2916 + x2924;
      if (x2906 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        auto x2930 = x2596 - x42;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        assert(x2930 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:54");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        auto x2931 = x2589 - x67;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        assert(x2931 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:54");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2932 = x2550 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2933 = x2552 * x43;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x2934 = x2552 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
        auto x2935 = x2595 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
        auto x2936 = x2555 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
        auto x2937 = x2553 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2938 = x2932 + x2936;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2939 = x2933 + x2935;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2940 = x2938 + x2894;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2941 = x2939 + x2937;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2942 = x2940 + x2895;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2943 = x2941 + x2551;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2942);
          reg = x2942;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2943);
          reg = x2943;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2934);
          reg = x2934;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2934);
          reg = x2934;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x2944 = x2927 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2945 = Fp(x2944.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2945);
            reg = x2945;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2946 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2946 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2947 = x2944 - x2946;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2948 = x2947 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2949 = Fp(x2948.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2949);
            reg = x2949;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2950 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2950 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2951 = x2948 - x2950;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2952 = x2951 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2953 = Fp(x2952.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2953);
            reg = x2953;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2954 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2954 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2955 = x2952 - x2954;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2956 = x2955 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x2957 = Fp(x2956.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2957);
            reg = x2957;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2958 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x2958 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x2959 = x2956 - x2958;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x2960 = x2959 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2960);
          reg = x2960;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2961 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x2961 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x2962 = x96 - x2961;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x2963 = x2961 * x2962;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2963);
          reg = x2963;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x2964 = x93 - x2961;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x2965 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x2965 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x2966 = x2965 * x2964;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x2966 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x2967 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x2967 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2967);
          reg = x2967;
        }
        if (x95 != 0) {
          extern_args[0] = x2897;
          extern_args[1] = x2829;
          extern_args[2] = x2833;
          extern_args[3] = x2841;
          extern_args[4] = x2845;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
          auto x2968 = x2897 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2829);
            reg = x2829;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2833);
            reg = x2833;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2841);
            reg = x2841;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2845);
            reg = x2845;
          }
          {
            extern_args[0] = x2968;
            extern_args[1] = x2829;
            extern_args[2] = x2833;
            extern_args[3] = x2841;
            extern_args[4] = x2845;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2969 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x2969 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2970 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x2970 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2971 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x2971 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x2972 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x2972 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2968);
            reg = x2968;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2969);
            reg = x2969;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2970);
            reg = x2970;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2971);
            reg = x2971;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2972);
            reg = x2972;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":54:68)
        auto x2973 = x2900 + x96;
        if (x2973 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68))
      auto x2974 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x2974 != Fp::invalid());
      if (x2974 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        auto x2975 = x2596 - x42;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        assert(x2975 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:55");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        auto x2976 = x2589 - x66;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        assert(x2976 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:55");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2977 = x2550 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2978 = x2552 * x43;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x2979 = x2552 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
        auto x2980 = x2595 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
        auto x2981 = x2555 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
        auto x2982 = x2553 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2983 = x2977 + x2981;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2984 = x2978 + x2980;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2985 = x2983 + x2894;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2986 = x2984 + x2982;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x2987 = x2985 + x2895;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x2988 = x2986 + x2551;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2987);
          reg = x2987;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2988);
          reg = x2988;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2979);
          reg = x2979;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2979);
          reg = x2979;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x2989 = x2928 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2990 = Fp(x2989.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2990);
            reg = x2990;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2991 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x2991 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2992 = x2989 - x2991;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2993 = x2992 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2994 = Fp(x2993.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2994);
            reg = x2994;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2995 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x2995 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x2996 = x2993 - x2995;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x2997 = x2996 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x2998 = Fp(x2997.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2998);
            reg = x2998;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x2999 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x2999 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3000 = x2997 - x2999;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3001 = x3000 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x3002 = Fp(x3001.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3002);
            reg = x3002;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3003 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3003 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x3004 = x3001 - x3003;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x3005 = x3004 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3005);
          reg = x3005;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3006 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3006 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x3007 = x96 - x3006;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x3008 = x3006 * x3007;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3008);
          reg = x3008;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x3009 = x93 - x3006;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3010 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3010 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x3011 = x3010 * x3009;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x3011 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3012 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x3012 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3012);
          reg = x3012;
        }
        if (x95 != 0) {
          extern_args[0] = x2897;
          extern_args[1] = x2829;
          extern_args[2] = x2833;
          extern_args[3] = x2841;
          extern_args[4] = x2845;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
          auto x3013 = x2897 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2829);
            reg = x2829;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2833);
            reg = x2833;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2841);
            reg = x2841;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2845);
            reg = x2845;
          }
          {
            extern_args[0] = x3013;
            extern_args[1] = x2829;
            extern_args[2] = x2833;
            extern_args[3] = x2841;
            extern_args[4] = x2845;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3014 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x3014 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3015 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x3015 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3016 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3016 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3017 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3017 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3013);
            reg = x3013;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3014);
            reg = x3014;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3015);
            reg = x3015;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3016);
            reg = x3016;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3017);
            reg = x3017;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":55:68)
        auto x3018 = x2900 + x96;
        if (x3018 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68))
      auto x3019 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x3019 != Fp::invalid());
      if (x3019 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
        auto x3020 = x2596 - x42;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
        assert(x3020 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:56");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
        auto x3021 = x2589 - x65;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
        assert(x3021 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:56");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x3022 = x2550 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x3023 = x2552 * x43;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":90:7)
        auto x3024 = x2552 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:21)
        auto x3025 = x2595 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:21)
        auto x3026 = x2555 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:35)
        auto x3027 = x2553 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x3028 = x3022 + x3026;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x3029 = x3023 + x3025;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x3030 = x3028 + x2894;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x3031 = x3029 + x3027;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":88:7)
        auto x3032 = x3030 + x2895;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":89:7)
        auto x3033 = x3031 + x2551;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3032);
          reg = x3032;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3033);
          reg = x3033;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3024);
          reg = x3024;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3024);
          reg = x3024;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":28:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":29:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x89);
          reg = x89;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":30:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x3034 = x2929 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3035 = Fp(x3034.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3035);
            reg = x3035;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3036 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3036 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3037 = x3034 - x3036;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3038 = x3037 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3039 = Fp(x3038.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3039);
            reg = x3039;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3040 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3040 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3041 = x3038 - x3040;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3042 = x3041 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3043 = Fp(x3042.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3043);
            reg = x3043;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3044 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3044 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3045 = x3042 - x3044;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3046 = x3045 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x3047 = Fp(x3046.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3047);
            reg = x3047;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3048 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3048 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x3049 = x3046 - x3048;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x3050 = x3049 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3050);
          reg = x3050;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3051 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3051 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x3052 = x96 - x3051;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x3053 = x3051 * x3052;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3053);
          reg = x3053;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x3054 = x93 - x3051;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3055 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3055 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x3056 = x3055 * x3054;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x3056 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3057 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x3057 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3057);
          reg = x3057;
        }
        if (x95 != 0) {
          extern_args[0] = x2897;
          extern_args[1] = x2829;
          extern_args[2] = x2833;
          extern_args[3] = x2841;
          extern_args[4] = x2845;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
          auto x3058 = x2897 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2829);
            reg = x2829;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2833);
            reg = x2833;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2841);
            reg = x2841;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2845);
            reg = x2845;
          }
          {
            extern_args[0] = x3058;
            extern_args[1] = x2829;
            extern_args[2] = x2833;
            extern_args[3] = x2841;
            extern_args[4] = x2845;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3059 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x3059 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3060 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x3060 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3061 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3061 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3062 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3062 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3058);
            reg = x3058;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3059);
            reg = x3059;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3060);
            reg = x3060;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3061);
            reg = x3061;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3062);
            reg = x3062;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":56:68)
        auto x3063 = x2900 + x96;
        if (x3063 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:68))
      auto x3064 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x3064 != Fp::invalid());
      if (x3064 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:68)
        auto x3065 = x2596 - x41;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:68)
        assert(x3065 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:57");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":106:7)
        auto x3066 = x2550 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":108:7)
        auto x3067 = x2552 * x43;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":109:7)
        auto x3068 = x2552 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":107:39)
        auto x3069 = x2570 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":106:21)
        auto x3070 = x2555 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":107:54)
        auto x3071 = x2553 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":106:7)
        auto x3072 = x3066 + x3070;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":108:7)
        auto x3073 = x3067 + x2574;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":108:7)
        auto x3074 = x3073 + x2571;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":106:7)
        auto x3075 = x3072 + x2726;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":106:7)
        auto x3076 = x3075 - x2570;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":107:7)
        auto x3077 = x2591 + x3069;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":107:7)
        auto x3078 = x3077 + x3071;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":107:7)
        auto x3079 = x3078 + x2551;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3076);
          reg = x3076;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3079);
          reg = x3079;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3074);
          reg = x3074;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3068);
          reg = x3068;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":23:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":24:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":25:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x3080 = x2921 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3081 = Fp(x3080.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3081);
            reg = x3081;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3082 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3082 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3083 = x3080 - x3082;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3084 = x3083 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3085 = Fp(x3084.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3085);
            reg = x3085;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3086 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3086 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3087 = x3084 - x3086;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3088 = x3087 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3089 = Fp(x3088.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3089);
            reg = x3089;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3090 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3090 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3091 = x3088 - x3090;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3092 = x3091 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x3093 = Fp(x3092.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3093);
            reg = x3093;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3094 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3094 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x3095 = x3092 - x3094;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x3096 = x3095 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3096);
          reg = x3096;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3097 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3097 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x3098 = x96 - x3097;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x3099 = x3097 * x3098;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3099);
          reg = x3099;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x3100 = x93 - x3097;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3101 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3101 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x3102 = x3101 * x3100;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x3102 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3103 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x3103 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3103);
          reg = x3103;
        }
        if (x2901 != 0) {
          extern_args[0] = x2897;
          extern_args[1] = x950;
          extern_args[2] = x951;
          extern_args[3] = x954;
          extern_args[4] = x2752;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":57:68)
          auto x3104 = x2897 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x950);
            reg = x950;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x951);
            reg = x951;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x954);
            reg = x954;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2752);
            reg = x2752;
          }
          {
            extern_args[0] = x3104;
            extern_args[1] = x950;
            extern_args[2] = x951;
            extern_args[3] = x954;
            extern_args[4] = x2752;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3105 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x3105 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3106 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x3106 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3107 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3107 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3108 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3108 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3104);
            reg = x3104;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3105);
            reg = x3105;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3106);
            reg = x3106;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3107);
            reg = x3107;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3108);
            reg = x3108;
          }
        }
        if (x2900 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:68))
      auto x3109 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x3109 != Fp::invalid());
      if (x3109 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:68)
        auto x3110 = x2596 - x40;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:68)
        assert(x3110 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:58");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:68)
        assert(x2589 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:58");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3111 = x2550 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3112 = x2552 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x3113 = x2552 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x3114 = x2555 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x3115 = x2553 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3116 = x3111 + x3114;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3117 = x3112 + x3115;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3118 = x3117 + x2551;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3119 = x3116 + x2726;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3119);
          reg = x3119;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3118);
          reg = x3118;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3113);
          reg = x3113;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3113);
          reg = x3113;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":23:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":24:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":25:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x3120 = x2926 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3121 = Fp(x3120.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3121);
            reg = x3121;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3122 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3122 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3123 = x3120 - x3122;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3124 = x3123 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3125 = Fp(x3124.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3125);
            reg = x3125;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3126 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3126 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3127 = x3124 - x3126;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3128 = x3127 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3129 = Fp(x3128.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3129);
            reg = x3129;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3130 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3130 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3131 = x3128 - x3130;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3132 = x3131 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x3133 = Fp(x3132.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3133);
            reg = x3133;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3134 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3134 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x3135 = x3132 - x3134;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x3136 = x3135 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3136);
          reg = x3136;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3137 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3137 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x3138 = x96 - x3137;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x3139 = x3137 * x3138;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3139);
          reg = x3139;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x3140 = x93 - x3137;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3141 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3141 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x3142 = x3141 * x3140;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x3142 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3143 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x3143 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3143);
          reg = x3143;
        }
        if (x2901 != 0) {
          extern_args[0] = x2897;
          extern_args[1] = x950;
          extern_args[2] = x951;
          extern_args[3] = x954;
          extern_args[4] = x2752;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":58:68)
          auto x3144 = x2897 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x950);
            reg = x950;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x951);
            reg = x951;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x954);
            reg = x954;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2752);
            reg = x2752;
          }
          {
            extern_args[0] = x3144;
            extern_args[1] = x950;
            extern_args[2] = x951;
            extern_args[3] = x954;
            extern_args[4] = x2752;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3145 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x3145 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3146 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x3146 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3147 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3147 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3148 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3148 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3144);
            reg = x3144;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3145);
            reg = x3145;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3146);
            reg = x3146;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3147);
            reg = x3147;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3148);
            reg = x3148;
          }
        }
        if (x2900 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:68))
      auto x3149 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x3149 != Fp::invalid());
      if (x3149 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:68)
        auto x3150 = x2596 - x39;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:68)
        assert(x3150 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:59");
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2591);
          reg = x2591;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2579);
          reg = x2579;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2565);
          reg = x2565;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":48:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":49:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":50:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x3151 = x2905 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3152 = Fp(x3151.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3152);
            reg = x3152;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3153 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3153 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3154 = x3151 - x3153;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3155 = x3154 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3156 = Fp(x3155.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3156);
            reg = x3156;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3157 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3157 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3158 = x3155 - x3157;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3159 = x3158 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3160 = Fp(x3159.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3160);
            reg = x3160;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3161 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3161 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3162 = x3159 - x3161;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3163 = x3162 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x3164 = Fp(x3163.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3164);
            reg = x3164;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3165 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3165 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x3166 = x3163 - x3165;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x3167 = x3166 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3167);
          reg = x3167;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3168 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3168 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x3169 = x96 - x3168;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x3170 = x3168 * x3169;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3170);
          reg = x3170;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x3171 = x93 - x3168;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3172 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3172 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x3173 = x3172 * x3171;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x3173 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3174 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x3174 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3174);
          reg = x3174;
        }
        if (x2901 != 0) {
          extern_args[0] = x2897;
          extern_args[1] = x2829;
          extern_args[2] = x2833;
          extern_args[3] = x2841;
          extern_args[4] = x2845;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":59:68)
          auto x3175 = x2897 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2829);
            reg = x2829;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2833);
            reg = x2833;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2841);
            reg = x2841;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2845);
            reg = x2845;
          }
          {
            extern_args[0] = x3175;
            extern_args[1] = x2829;
            extern_args[2] = x2833;
            extern_args[3] = x2841;
            extern_args[4] = x2845;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3176 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x3176 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3177 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x3177 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3178 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3178 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3179 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3179 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3175);
            reg = x3175;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3176);
            reg = x3176;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3177);
            reg = x3177;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3178);
            reg = x3178;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3179);
            reg = x3179;
          }
        }
        if (x2900 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68))
      auto x3180 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x3180 != Fp::invalid());
      if (x3180 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68)
        auto x3181 = x2596 - x38;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68)
        assert(x3181 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:60");
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2591);
          reg = x2591;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2579);
          reg = x2579;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x2565);
          reg = x2565;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":19:3)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":20:3)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":23:5)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":24:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":25:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":53:3)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x3182 = x2905 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3183 = Fp(x3182.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3183);
            reg = x3183;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3184 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x3184 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3185 = x3182 - x3184;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3186 = x3185 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3187 = Fp(x3186.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3187);
            reg = x3187;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3188 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x3188 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3189 = x3186 - x3188;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3190 = x3189 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3191 = Fp(x3190.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3191);
            reg = x3191;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x3192 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x3192 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x3193 = x3190 - x3192;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x3194 = x3193 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x3195 = Fp(x3194.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3195);
            reg = x3195;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3196 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x3196 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x3197 = x3194 - x3196;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x3198 = x3197 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3198);
          reg = x3198;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3199 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x3199 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x3200 = x96 - x3199;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x3201 = x3199 * x3200;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3201);
          reg = x3201;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x3202 = x93 - x3199;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3203 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x3203 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x3204 = x3203 * x3202;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x3204 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/ComputeControl/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3205 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x3205 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3205);
          reg = x3205;
        }
        if (x2901 != 0) {
          extern_args[0] = x2897;
          extern_args[1] = x2829;
          extern_args[2] = x2833;
          extern_args[3] = x2841;
          extern_args[4] = x2845;
          extern_log(ctx, cycle, "  Writing to rd=x%u, val = %w", extern_args, extern_outs);
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":60:68)
          auto x3206 = x2897 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2829);
            reg = x2829;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2833);
            reg = x2833;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2841);
            reg = x2841;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x2845);
            reg = x2845;
          }
          {
            extern_args[0] = x3206;
            extern_args[1] = x2829;
            extern_args[2] = x2833;
            extern_args[3] = x2841;
            extern_args[4] = x2845;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3207 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x3207 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3208 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x3208 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3209 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x3209 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3210 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x3210 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3206);
            reg = x3206;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3207);
            reg = x3207;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3208);
            reg = x3208;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3209);
            reg = x3209;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3210);
            reg = x3210;
          }
        }
        if (x2900 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[3](Reg)"("./zirgen/components/mux.h":49:25))
    auto x3211 = arg2[103 * steps + ((cycle - 0) & mask)];
    assert(x3211 != Fp::invalid());
    if (x3211 != 0) {
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":20:41)
      auto x3212 = x963 * x75;
      {
        extern_args[0] = x3212;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x3213 = extern_outs[0];
        auto x3214 = extern_outs[1];
        auto x3215 = extern_outs[2];
        auto x3216 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3213);
          reg = x3213;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3214);
          reg = x3214;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3215);
          reg = x3215;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3216);
          reg = x3216;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3217 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x3217 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3218 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x3218 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3219 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x3219 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3220 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x3220 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[116 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3212);
        reg = x3212;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[117 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3217);
        reg = x3217;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3218);
        reg = x3218;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3219);
        reg = x3219;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3220);
        reg = x3220;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:16)
        auto x3221 = Fp(x3220.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:15)
        auto x3222 = x3221 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3222);
          reg = x3222;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:17)
        auto x3223 = Fp(x3220.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:16)
        auto x3224 = x3223 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3224);
          reg = x3224;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:16)
        auto x3225 = Fp(x3220.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:15)
        auto x3226 = x3225 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[188 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3226);
          reg = x3226;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:16)
        auto x3227 = Fp(x3220.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:15)
        auto x3228 = x3227 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[187 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3228);
          reg = x3228;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:17)
        auto x3229 = Fp(x3220.asUInt32() & x66.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:16)
        auto x3230 = x3229 * x54;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3230);
          reg = x3230;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":16:17)
        auto x3231 = Fp(x3220.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3231);
          reg = x3231;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:17)
        auto x3232 = Fp(x3219.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:16)
        auto x3233 = x3232 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3233);
          reg = x3233;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:18)
        auto x3234 = Fp(x3219.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:17)
        auto x3235 = x3234 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3235);
          reg = x3235;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:17)
        auto x3236 = Fp(x3219.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:16)
        auto x3237 = x3236 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3237);
          reg = x3237;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:18)
        auto x3238 = Fp(x3219.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:17)
        auto x3239 = x3238 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3239);
          reg = x3239;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:18)
        auto x3240 = Fp(x3219.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3240);
          reg = x3240;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x3241 = Fp(x3218.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x3242 = x3241 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3242);
          reg = x3242;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:19)
        auto x3243 = Fp(x3218.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:18)
        auto x3244 = x3243 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3244);
          reg = x3244;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:20)
        auto x3245 = Fp(x3218.asUInt32() & x51.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:19)
        auto x3246 = x3245 * x56;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3246);
          reg = x3246;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x3247 = Fp(x3218.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x3248 = x3247 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3248);
          reg = x3248;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x3249 = Fp(x3218.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3249);
          reg = x3249;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x3250 = Fp(x3217.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:15)
        auto x3251 = x3250 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3251);
          reg = x3251;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x3252 = Fp(x3217.asUInt32() & x50.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:5)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3252);
          reg = x3252;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3253 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x3253 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3254 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x3254 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3255 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x3255 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3256 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x3256 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3257 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x3257 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3258 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x3258 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x3259 = x3255 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x3260 = x3256 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:39)
      auto x3261 = x3253 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:25)
      auto x3262 = x3254 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x3263 = x3260 + x3262;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x3264 = x3263 + x3261;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x3265 = x3264 + x3258;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x3266 = x3259 + x3265;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x3267 = x3266 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x3268 = x3267 + x3257;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      auto x3269 = x3220 - x3268;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      assert(x3269 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:30");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3270 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x3270 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3271 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x3271 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3272 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x3272 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3273 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x3273 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3274 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x3274 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x3275 = x3270 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:37)
      auto x3276 = x3271 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:69)
      auto x3277 = x3272 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x3278 = x3275 + x3276;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x3279 = x3278 + x3273;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x3280 = x3279 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x3281 = x3280 + x3277;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x3282 = x3281 + x3274;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      auto x3283 = x3219 - x3282;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      assert(x3283 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:31");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3284 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x3284 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3285 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x3285 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3286 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x3286 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3287 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x3287 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3288 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x3288 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x3289 = x3284 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x3290 = x3285 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:53)
      auto x3291 = x3286 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x3292 = x3290 + x3287;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:36)
      auto x3293 = x3292 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x3294 = x3289 + x3293;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x3295 = x3294 + x3291;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x3296 = x3295 + x3288;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      auto x3297 = x3218 - x3296;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      assert(x3297 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:32");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3298 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x3298 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x3299 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x3299 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x3300 = x3298 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x3301 = x3300 + x3299;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      auto x3302 = x3217 - x3301;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      assert(x3302 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:33");
      {
        extern_args[0] = x3217;
        extern_args[1] = x3218;
        extern_args[2] = x3219;
        extern_args[3] = x3220;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x3303 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3304 = (x3303 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3304);
            reg = x3304;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3305 = x3303 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3306 = (x3305 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3306);
            reg = x3306;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3307 = x3303 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3308 = (x3307 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3308);
            reg = x3308;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3309 = x3303 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3310 = (x3309 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[204 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3310);
            reg = x3310;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3311 = x3303 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3312 = (x3311 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[205 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3312);
            reg = x3312;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3313 = x3303 - x67;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3314 = (x3313 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3314);
            reg = x3314;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3315 = x3303 - x66;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3316 = (x3315 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3316);
            reg = x3316;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3317 = x3303 - x65;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3318 = (x3317 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3318);
            reg = x3318;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3319 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x3319 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3320 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x3320 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3321 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x3321 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3322 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x3322 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3323 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x3323 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3324 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x3324 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3325 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x3325 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x3326 = x3320 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x3327 = x3321 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x3328 = x3322 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x3329 = x3323 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x3330 = x3324 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x3331 = x3325 * x65;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x3332 = x3319 + x3326;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x3333 = x3332 + x3327;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x3334 = x3333 + x3328;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x3335 = x3334 + x3329;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x3336 = x3335 + x3330;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x3337 = x3336 + x3331;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x3338 = x3337 - x3303;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x3338 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46))
        auto x3339 = arg2[201 * steps + ((cycle - 0) & mask)];
        assert(x3339 != Fp::invalid());
        if (x3339 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3340 = x3253 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3341 = x3255 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x3342 = x3257 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x3343 = x3255 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x3344 = x3258 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x3345 = x3256 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3346 = x3340 + x3344;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3347 = x3341 + x3345;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3348 = x3347 + x3254;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x3349 = x3342 + x3279;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3350 = x3346 + x3349;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3350);
            reg = x3350;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3348);
            reg = x3348;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3343);
            reg = x3343;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3343);
            reg = x3343;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46))
        auto x3351 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x3351 != Fp::invalid());
        if (x3351 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3352 = x3253 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3353 = x3255 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x3354 = x3257 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x3355 = x3255 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x3356 = x3258 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x3357 = x3256 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3358 = x3352 + x3356;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3359 = x3353 + x3357;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3360 = x3359 + x3254;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x3361 = x3354 + x3279;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3362 = x3358 + x3361;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3362);
            reg = x3362;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3360);
            reg = x3360;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3355);
            reg = x3355;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3355);
            reg = x3355;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46))
        auto x3363 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x3363 != Fp::invalid());
        if (x3363 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3364 = x3253 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3365 = x3255 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x3366 = x3257 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x3367 = x3255 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x3368 = x3258 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x3369 = x3256 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3370 = x3364 + x3368;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3371 = x3365 + x3369;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3372 = x3371 + x3254;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x3373 = x3366 + x3279;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3374 = x3370 + x3373;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3374);
            reg = x3374;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3372);
            reg = x3372;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3367);
            reg = x3367;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3367);
            reg = x3367;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46))
        auto x3375 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x3375 != Fp::invalid());
        if (x3375 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3376 = x3253 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3377 = x3255 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x3378 = x3257 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x3379 = x3255 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x3380 = x3258 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x3381 = x3256 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3382 = x3376 + x3380;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3383 = x3377 + x3381;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3384 = x3383 + x3254;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x3385 = x3378 + x3279;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3386 = x3382 + x3385;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3386);
            reg = x3386;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3384);
            reg = x3384;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3379);
            reg = x3379;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3379);
            reg = x3379;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46))
        auto x3387 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x3387 != Fp::invalid());
        if (x3387 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3388 = x3253 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3389 = x3255 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x3390 = x3257 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
          auto x3391 = x3255 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
          auto x3392 = x3258 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
          auto x3393 = x3256 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3394 = x3388 + x3392;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3395 = x3389 + x3393;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
          auto x3396 = x3395 + x3254;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
          auto x3397 = x3390 + x3279;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
          auto x3398 = x3394 + x3397;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3398);
            reg = x3398;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3396);
            reg = x3396;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3391);
            reg = x3391;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3391);
            reg = x3391;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46))
        auto x3399 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x3399 != Fp::invalid());
        if (x3399 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
          auto x3400 = x3253 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3401 = x3255 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
          auto x3402 = x3286 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3403 = x3255 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:21)
          auto x3404 = x3258 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x3405 = x3256 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:25)
          auto x3406 = x3288 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
          auto x3407 = x3400 + x3404;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3408 = x3401 + x3405;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
          auto x3409 = x3402 + x3406;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3410 = x3408 + x3254;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
          auto x3411 = x3409 + x3298;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
          auto x3412 = x3407 + x3411;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3412);
            reg = x3412;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3410);
            reg = x3410;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3403);
            reg = x3403;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3403);
            reg = x3403;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46))
        auto x3413 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x3413 != Fp::invalid());
        if (x3413 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
          auto x3414 = x3253 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3415 = x3255 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
          auto x3416 = x3286 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3417 = x3255 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:21)
          auto x3418 = x3258 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x3419 = x3256 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:25)
          auto x3420 = x3288 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
          auto x3421 = x3414 + x3418;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3422 = x3415 + x3419;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
          auto x3423 = x3416 + x3420;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3424 = x3422 + x3254;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
          auto x3425 = x3423 + x3298;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
          auto x3426 = x3421 + x3425;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3426);
            reg = x3426;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3424);
            reg = x3424;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3417);
            reg = x3417;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3417);
            reg = x3417;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46))
        auto x3427 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x3427 != Fp::invalid());
        if (x3427 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
          auto x3428 = x3253 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3429 = x3255 * x49;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
          auto x3430 = x3286 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
          auto x3431 = x3255 * x92;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:21)
          auto x3432 = x3258 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
          auto x3433 = x3256 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:25)
          auto x3434 = x3288 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
          auto x3435 = x3428 + x3432;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3436 = x3429 + x3433;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
          auto x3437 = x3430 + x3434;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
          auto x3438 = x3436 + x3254;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
          auto x3439 = x3437 + x3298;
          // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
          auto x3440 = x3435 + x3439;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3440);
            reg = x3440;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3438);
            reg = x3438;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3431);
            reg = x3431;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3431);
            reg = x3431;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x3441 = x3272 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:26)
      auto x3442 = x3274 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x3443 = x3441 + x3442;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x3444 = x3443 + x3284;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":38:39)
      auto x3445 = x3444 + x48;
      {
        extern_args[0] = x3445;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x3446 = extern_outs[0];
        auto x3447 = extern_outs[1];
        auto x3448 = extern_outs[2];
        auto x3449 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3446);
          reg = x3446;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3447);
          reg = x3447;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3448);
          reg = x3448;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3449);
          reg = x3449;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3450 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x3450 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3451 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x3451 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3452 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x3452 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3453 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x3453 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3445);
        reg = x3445;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3450);
        reg = x3450;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3451);
        reg = x3451;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3452);
        reg = x3452;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3453);
        reg = x3453;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x3454 = x3257 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x3455 = x3454 + x3279;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":39:39)
      auto x3456 = x3455 + x48;
      {
        extern_args[0] = x3456;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x3457 = extern_outs[0];
        auto x3458 = extern_outs[1];
        auto x3459 = extern_outs[2];
        auto x3460 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3457);
          reg = x3457;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3458);
          reg = x3458;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3459);
          reg = x3459;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3460);
          reg = x3460;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3461 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x3461 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3462 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x3462 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3463 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x3463 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3464 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x3464 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3456);
        reg = x3456;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3461);
        reg = x3461;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3462);
        reg = x3462;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3463);
        reg = x3463;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3464);
        reg = x3464;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3465 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x3465 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3466 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x3466 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3467 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x3467 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3468 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x3468 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x3469 = x3286 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:25)
      auto x3470 = x3288 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x3471 = x3469 + x3470;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x3472 = x3471 + x3298;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x3473 = (x3472 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3473);
          reg = x3473;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x3474 = inv(x3472);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[210 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3474);
          reg = x3474;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3475 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x3475 != Fp::invalid());
      if (x3475 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x3472 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x3476 = x96 - x3475;
      if (x3476 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3477 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x3477 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x3478 = x3472 * x3477;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x3479 = x3478 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x3479 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":47:17)
        auto x3480 = x3450 + x3465;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":48:18)
        auto x3481 = Fp(x3480.asUInt32() & x76.asUInt32());
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3482 = (x3481 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[211 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3482);
            reg = x3482;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3483 = x3481 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3484 = (x3483 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[212 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3484);
            reg = x3484;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3485 = x3481 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3486 = (x3485 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[213 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3486);
            reg = x3486;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3487 = x3481 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x3488 = (x3487 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[214 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3488);
            reg = x3488;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3489 = arg2[212 * steps + ((cycle - 0) & mask)];
        assert(x3489 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3490 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x3490 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x3491 = arg2[214 * steps + ((cycle - 0) & mask)];
        assert(x3491 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x3492 = x3490 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x3493 = x3491 * x76;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x3494 = x3489 + x3492;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x3495 = x3494 + x3493;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x3496 = x3495 - x3481;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x3496 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":49:20)
        auto x3497 = Fp(x3480.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":49:19)
        auto x3498 = x3497 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3499 = Fp(x3498.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3499);
            reg = x3499;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3500 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x3500 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":50:33)
        auto x3501 = x3500 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":50:15)
        auto x3502 = x3480 - x3495;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":50:15)
        auto x3503 = x3502 - x3501;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3503);
          reg = x3503;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":52:22)
        auto x3504 = x3503 * x75;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3504);
          reg = x3504;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":53:17)
        auto x3505 = x3451 + x3466;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":53:17)
        auto x3506 = x3505 + x3500;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":54:24)
        auto x3507 = Fp(x3506.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3507);
          reg = x3507;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":55:25)
        auto x3508 = Fp(x3506.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":55:24)
        auto x3509 = x3508 * x91;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3509);
          reg = x3509;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":56:17)
        auto x3510 = x3452 + x3467;
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3511 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x3511 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":56:17)
        auto x3512 = x3510 + x3511;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":57:24)
        auto x3513 = Fp(x3512.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3513);
          reg = x3513;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":58:25)
        auto x3514 = Fp(x3512.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":58:24)
        auto x3515 = x3514 * x91;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3515);
          reg = x3515;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":59:17)
        auto x3516 = x3453 + x3468;
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3517 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x3517 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":59:17)
        auto x3518 = x3516 + x3517;
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":60:23)
        auto x3519 = Fp(x3518.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3519);
          reg = x3519;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":61:24)
        auto x3520 = Fp(x3518.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":61:23)
        auto x3521 = x3520 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3521);
          reg = x3521;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":62:20)
        auto x3522 = Fp(x3518.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":62:19)
        auto x3523 = x3522 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x3524 = Fp(x3523.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3524);
            reg = x3524;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x3525 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x3525 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x3526 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x3526 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":65:16)
      auto x3527 = x3526 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":65:6)
      auto x3528 = x3525 - x3527;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":65:6)
      assert(x3528 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:65");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":67:6)
      auto x3529 = x3450 + x3465;
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x3530 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x3530 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x3531 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x3531 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x3532 = arg2[213 * steps + ((cycle - 0) & mask)];
      assert(x3532 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x3533 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x3533 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":67:35)
      auto x3534 = x3530 * x90;
      // loc("./zirgen/components/onehot.h":46:19)
      auto x3535 = x3532 * x93;
      // loc("./zirgen/components/onehot.h":46:19)
      auto x3536 = x3533 * x76;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":67:35)
      auto x3537 = x3534 + x3525;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x3538 = x3531 + x3535;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x3539 = x3538 + x3536;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":67:35)
      auto x3540 = x3537 + x3539;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":67:6)
      auto x3541 = x3529 - x3540;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":67:6)
      assert(x3541 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:67");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":69:6)
      auto x3542 = x3451 + x3466;
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x3543 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x3543 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x3544 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x3544 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":69:46)
      auto x3545 = x3543 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":69:6)
      auto x3546 = x3542 + x3530;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":69:46)
      auto x3547 = x3545 + x3544;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":69:6)
      auto x3548 = x3546 - x3547;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":69:6)
      assert(x3548 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:69");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":71:6)
      auto x3549 = x3452 + x3467;
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x3550 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x3550 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x3551 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x3551 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":71:46)
      auto x3552 = x3550 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":71:6)
      auto x3553 = x3549 + x3543;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":71:46)
      auto x3554 = x3552 + x3551;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":71:6)
      auto x3555 = x3553 - x3554;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":71:6)
      assert(x3555 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:71");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":73:6)
      auto x3556 = x3453 + x3468;
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x3557 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x3557 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3558 = arg2[85 * steps + ((cycle - 0) & mask)];
      assert(x3558 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3559 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x3559 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":73:46)
      auto x3560 = x3557 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":73:63)
      auto x3561 = x3558 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":73:6)
      auto x3562 = x3556 + x3550;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":73:46)
      auto x3563 = x3560 + x3561;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":73:46)
      auto x3564 = x3563 + x3559;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":73:6)
      auto x3565 = x3562 - x3564;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":73:6)
      assert(x3565 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:73");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":76:15)
      auto x3566 = x96 - x3558;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":76:28)
      auto x3567 = x93 - x3558;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":76:7)
      auto x3568 = x3558 * x3566;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":76:7)
      auto x3569 = x3568 * x3567;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":76:7)
      assert(x3569 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/memio.cpp:76");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":79:14)
      auto x3570 = x3558 * x79;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":80:14)
      auto x3571 = x3544 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":79:68)
      auto x3572 = x3551 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":79:41)
      auto x3573 = x3559 * x36;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":79:14)
      auto x3574 = x3570 + x3573;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":79:14)
      auto x3575 = x3574 + x3572;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":79:14)
      auto x3576 = x3575 + x3571;
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":79:14)
      auto x3577 = x3576 + x3526;
      {
        extern_args[0] = x3577;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x3578 = extern_outs[0];
        auto x3579 = extern_outs[1];
        auto x3580 = extern_outs[2];
        auto x3581 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3578);
          reg = x3578;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3579);
          reg = x3579;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3580);
          reg = x3580;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3581);
          reg = x3581;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3582 = arg2[140 * steps + ((cycle - 0) & mask)];
      assert(x3582 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3583 = arg2[141 * steps + ((cycle - 0) & mask)];
      assert(x3583 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3584 = arg2[142 * steps + ((cycle - 0) & mask)];
      assert(x3584 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3585 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x3585 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[137 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3577);
        reg = x3577;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[138 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[139 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[140 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3582);
        reg = x3582;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[141 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3583);
        reg = x3583;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[142 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3584);
        reg = x3584;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[143 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3585);
        reg = x3585;
      }
      extern_args[0] = x3465;
      extern_args[1] = x3466;
      extern_args[2] = x3467;
      extern_args[3] = x3468;
      extern_args[4] = x3444;
      extern_args[5] = x3450;
      extern_args[6] = x3451;
      extern_args[7] = x3452;
      extern_args[8] = x3453;
      extern_args[9] = x3455;
      extern_args[10] = x3461;
      extern_args[11] = x3462;
      extern_args[12] = x3463;
      extern_args[13] = x3464;
      extern_args[14] = x3577;
      extern_args[15] = x3539;
      extern_args[16] = x3582;
      extern_args[17] = x3583;
      extern_args[18] = x3584;
      extern_args[19] = x3585;
      extern_log(ctx, cycle, "  imm=%w, rs1=x%u -> %w, rs2=x%u -> %w, Addr = %10x, lowBits = %u, loaded = %w", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":92:17)
      auto x3586 = x963 + x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x3587 = x3586 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x3588 = Fp(x3587.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3588);
          reg = x3588;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x3589 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x3589 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x3590 = x3587 - x3589;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x3591 = x3590 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x3592 = Fp(x3591.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3592);
          reg = x3592;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x3593 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x3593 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x3594 = x3591 - x3593;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x3595 = x3594 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x3596 = Fp(x3595.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3596);
          reg = x3596;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x3597 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x3597 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x3598 = x3595 - x3597;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x3599 = x3598 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x3600 = Fp(x3599.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3600);
          reg = x3600;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3601 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x3601 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x3602 = x3599 - x3601;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x3603 = x3602 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3603);
        reg = x3603;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3604 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x3604 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x3605 = x96 - x3604;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x3606 = x3604 * x3605;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3606);
        reg = x3606;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x3607 = x93 - x3604;
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x3608 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x3608 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x3609 = x3608 * x3607;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x3609 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      // loc("zirgen/circuit/rv32im/v1/edsl/memio.cpp":93:3)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x62);
        reg = x62;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46))
      auto x3610 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x3610 != Fp::invalid());
      if (x3610 != 0) {
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46))
          auto x3611 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3611 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
          auto x3612 = x3611 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
          assert(x3612 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:76");
        }
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46))
          auto x3613 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3613 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
          auto x3614 = x3613 + x3532;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
          auto x3615 = x3614 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
          assert(x3615 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:76");
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46))
        auto x3616 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x3616 != Fp::invalid());
        if (x3616 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3617 = Fp(x3582.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3617);
              reg = x3617;
            }
          }
        }
        if (x3531 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3618 = Fp(x3583.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3618);
              reg = x3618;
            }
          }
        }
        if (x3532 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3619 = Fp(x3584.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3619);
              reg = x3619;
            }
          }
        }
        if (x3533 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3620 = Fp(x3585.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3620);
              reg = x3620;
            }
          }
        }
        {
          // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
          auto x3621 = arg2[29 * steps + ((cycle - 0) & mask)];
          assert(x3621 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
          auto x3622 = Fp(x3621.asUInt32() & x61.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
          auto x3623 = x3622 * x60;
          // loc("zirgen/components/bytes.cpp":101:3)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3623);
            reg = x3623;
          }
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
          auto x3624 = Fp(x3621.asUInt32() & x50.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
          auto x3625 = x3624 * x93;
          // loc("zirgen/components/bytes.cpp":101:3)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3625);
            reg = x3625;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3626 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x3626 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3627 = x96 - x3626;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3628 = x3626 * x3627;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        assert(x3628 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:76");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3629 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x3629 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3630 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x3630 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3631 = x3626 * x61;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3632 = x3630 * x54;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3633 = x3631 + x3632;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3634 = x3629 - x3633;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        assert(x3634 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:76");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3635 = x3616 * x3582;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3636 = x3531 * x3583;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3637 = x3532 * x3584;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3638 = x3533 * x3585;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3639 = x3626 * x92;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3640 = x3635 + x3636;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3641 = x3640 + x3637;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3642 = x3641 + x3638;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3642);
          reg = x3642;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3639);
          reg = x3639;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3639);
          reg = x3639;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3639);
          reg = x3639;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3643 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x3643 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3644 = arg2[216 * steps + ((cycle - 0) & mask)];
        assert(x3644 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3645 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x3645 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3646 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x3646 != Fp::invalid());
        extern_args[0] = x3639;
        extern_args[1] = x3643;
        extern_args[2] = x3644;
        extern_args[3] = x3645;
        extern_args[4] = x3646;
        extern_log(ctx, cycle, "  fillByte = %4x, extended: %w", extern_args, extern_outs);
        if (x3476 != 0) {
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
          auto x3647 = x3472 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3643);
            reg = x3643;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3644);
            reg = x3644;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3645);
            reg = x3645;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3646);
            reg = x3646;
          }
          {
            extern_args[0] = x3647;
            extern_args[1] = x3643;
            extern_args[2] = x3644;
            extern_args[3] = x3645;
            extern_args[4] = x3646;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3648 = arg2[147 * steps + ((cycle - 0) & mask)];
          assert(x3648 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3649 = arg2[148 * steps + ((cycle - 0) & mask)];
          assert(x3649 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3650 = arg2[149 * steps + ((cycle - 0) & mask)];
          assert(x3650 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3651 = arg2[150 * steps + ((cycle - 0) & mask)];
          assert(x3651 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3647);
            reg = x3647;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3648);
            reg = x3648;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3649);
            reg = x3649;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3650);
            reg = x3650;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3651);
            reg = x3651;
          }
        }
        if (x3475 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        auto x3652 = x3299 - x76;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        assert(x3652 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:76");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":76:46)
        assert(x3292 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:76");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3653 = x3253 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3654 = x3255 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x3655 = x3255 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x3656 = x3258 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x3657 = x3256 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3658 = x3653 + x3656;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3659 = x3654 + x3657;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3660 = x3659 + x3254;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3661 = x3658 + x3455;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3661);
          reg = x3661;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3660);
          reg = x3660;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3655);
          reg = x3655;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3655);
          reg = x3655;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46))
      auto x3662 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x3662 != Fp::invalid());
      if (x3662 != 0) {
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46))
          auto x3663 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3663 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
          auto x3664 = x3663 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
          assert(x3664 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:77");
        }
        if (x96 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46))
          auto x3665 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3665 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
          auto x3666 = x3665 + x3532;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
          auto x3667 = x3666 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
          assert(x3667 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:77");
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46))
        auto x3668 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x3668 != Fp::invalid());
        if (x3668 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3669 = Fp(x3583.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3669);
              reg = x3669;
            }
          }
        }
        if (x3532 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3670 = Fp(x3585.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3670);
              reg = x3670;
            }
          }
        }
        {
          // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
          auto x3671 = arg2[29 * steps + ((cycle - 0) & mask)];
          assert(x3671 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
          auto x3672 = Fp(x3671.asUInt32() & x61.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
          auto x3673 = x3672 * x60;
          // loc("zirgen/components/bytes.cpp":101:3)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3673);
            reg = x3673;
          }
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
          auto x3674 = Fp(x3671.asUInt32() & x50.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
          auto x3675 = x3674 * x93;
          // loc("zirgen/components/bytes.cpp":101:3)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3675);
            reg = x3675;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3676 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x3676 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3677 = x96 - x3676;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3678 = x3676 * x3677;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        assert(x3678 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:77");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3679 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x3679 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3680 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x3680 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3681 = x3676 * x61;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3682 = x3680 * x54;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3683 = x3681 + x3682;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3684 = x3679 - x3683;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        assert(x3684 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:77");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3685 = x3668 * x3582;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3686 = x3668 * x3583;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3687 = x3532 * x3584;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3688 = x3532 * x3585;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3689 = x3676 * x92;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3690 = x3685 + x3687;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3691 = x3686 + x3688;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3690);
          reg = x3690;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3691);
          reg = x3691;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3689);
          reg = x3689;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3689);
          reg = x3689;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3692 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x3692 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3693 = arg2[216 * steps + ((cycle - 0) & mask)];
        assert(x3693 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3694 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x3694 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3695 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x3695 != Fp::invalid());
        extern_args[0] = x3689;
        extern_args[1] = x3692;
        extern_args[2] = x3693;
        extern_args[3] = x3694;
        extern_args[4] = x3695;
        extern_log(ctx, cycle, "  fillByte = %4x, extended: %w", extern_args, extern_outs);
        if (x3476 != 0) {
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
          auto x3696 = x3472 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3692);
            reg = x3692;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3693);
            reg = x3693;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3694);
            reg = x3694;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3695);
            reg = x3695;
          }
          {
            extern_args[0] = x3696;
            extern_args[1] = x3692;
            extern_args[2] = x3693;
            extern_args[3] = x3694;
            extern_args[4] = x3695;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3697 = arg2[147 * steps + ((cycle - 0) & mask)];
          assert(x3697 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3698 = arg2[148 * steps + ((cycle - 0) & mask)];
          assert(x3698 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3699 = arg2[149 * steps + ((cycle - 0) & mask)];
          assert(x3699 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3700 = arg2[150 * steps + ((cycle - 0) & mask)];
          assert(x3700 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3696);
            reg = x3696;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3697);
            reg = x3697;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3698);
            reg = x3698;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3699);
            reg = x3699;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3700);
            reg = x3700;
          }
        }
        if (x3475 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3701 = x3299 - x76;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        assert(x3701 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:77");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        auto x3702 = x3292 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":77:46)
        assert(x3702 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:77");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3703 = x3253 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3704 = x3255 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x3705 = x3255 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x3706 = x3258 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x3707 = x3256 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3708 = x3703 + x3706;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3709 = x3704 + x3707;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3710 = x3709 + x3254;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3711 = x3708 + x3455;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3711);
          reg = x3711;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3710);
          reg = x3710;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3705);
          reg = x3705;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3705);
          reg = x3705;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46))
      auto x3712 = arg2[203 * steps + ((cycle - 0) & mask)];
      assert(x3712 != Fp::invalid());
      if (x3712 != 0) {
        if (x96 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46))
          auto x3713 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3713 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
          auto x3714 = x3713 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
          assert(x3714 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:78");
        }
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46))
          auto x3715 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3715 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
          auto x3716 = x3715 + x3532;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
          auto x3717 = x3716 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
          assert(x3717 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:78");
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46))
        auto x3718 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x3718 != Fp::invalid());
        if (x3718 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3719 = Fp(x3585.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3719);
              reg = x3719;
            }
          }
        }
        {
          // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
          auto x3720 = arg2[29 * steps + ((cycle - 0) & mask)];
          assert(x3720 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
          auto x3721 = Fp(x3720.asUInt32() & x61.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
          auto x3722 = x3721 * x60;
          // loc("zirgen/components/bytes.cpp":101:3)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3722);
            reg = x3722;
          }
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
          auto x3723 = Fp(x3720.asUInt32() & x50.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
          auto x3724 = x3723 * x93;
          // loc("zirgen/components/bytes.cpp":101:3)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3724);
            reg = x3724;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3725 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x3725 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3726 = x96 - x3725;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3727 = x3725 * x3726;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        assert(x3727 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:78");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3728 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x3728 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3729 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x3729 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3730 = x3725 * x61;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3731 = x3729 * x54;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3732 = x3730 + x3731;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3733 = x3728 - x3732;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        assert(x3733 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:78");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3734 = x3718 * x3582;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3735 = x3718 * x3583;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3736 = x3718 * x3584;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3737 = x3718 * x3585;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3734);
          reg = x3734;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3735);
          reg = x3735;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3736);
          reg = x3736;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3737);
          reg = x3737;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3738 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x3738 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3739 = arg2[216 * steps + ((cycle - 0) & mask)];
        assert(x3739 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3740 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x3740 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3741 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x3741 != Fp::invalid());
        extern_args[0] = x95;
        extern_args[1] = x3738;
        extern_args[2] = x3739;
        extern_args[3] = x3740;
        extern_args[4] = x3741;
        extern_log(ctx, cycle, "  fillByte = %4x, extended: %w", extern_args, extern_outs);
        if (x3476 != 0) {
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
          auto x3742 = x3472 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3738);
            reg = x3738;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3739);
            reg = x3739;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3740);
            reg = x3740;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3741);
            reg = x3741;
          }
          {
            extern_args[0] = x3742;
            extern_args[1] = x3738;
            extern_args[2] = x3739;
            extern_args[3] = x3740;
            extern_args[4] = x3741;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3743 = arg2[147 * steps + ((cycle - 0) & mask)];
          assert(x3743 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3744 = arg2[148 * steps + ((cycle - 0) & mask)];
          assert(x3744 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3745 = arg2[149 * steps + ((cycle - 0) & mask)];
          assert(x3745 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3746 = arg2[150 * steps + ((cycle - 0) & mask)];
          assert(x3746 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3742);
            reg = x3742;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3743);
            reg = x3743;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3744);
            reg = x3744;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3745);
            reg = x3745;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3746);
            reg = x3746;
          }
        }
        if (x3475 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3747 = x3299 - x76;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        assert(x3747 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:78");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        auto x3748 = x3292 - x93;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":78:46)
        assert(x3748 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:78");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3749 = x3253 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3750 = x3255 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x3751 = x3255 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x3752 = x3258 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x3753 = x3256 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3754 = x3749 + x3752;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3755 = x3750 + x3753;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3756 = x3755 + x3254;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3757 = x3754 + x3455;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3757);
          reg = x3757;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3756);
          reg = x3756;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3751);
          reg = x3751;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3751);
          reg = x3751;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46))
      auto x3758 = arg2[204 * steps + ((cycle - 0) & mask)];
      assert(x3758 != Fp::invalid());
      if (x3758 != 0) {
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46))
          auto x3759 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3759 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
          auto x3760 = x3759 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
          assert(x3760 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:79");
        }
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46))
          auto x3761 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3761 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
          auto x3762 = x3761 + x3532;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
          auto x3763 = x3762 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
          assert(x3763 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:79");
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46))
        auto x3764 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x3764 != Fp::invalid());
        if (x3764 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3765 = Fp(x3582.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3765);
              reg = x3765;
            }
          }
        }
        if (x3531 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3766 = Fp(x3583.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3766);
              reg = x3766;
            }
          }
        }
        if (x3532 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3767 = Fp(x3584.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3767);
              reg = x3767;
            }
          }
        }
        if (x3533 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3768 = Fp(x3585.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3768);
              reg = x3768;
            }
          }
        }
        {
          // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
          auto x3769 = arg2[29 * steps + ((cycle - 0) & mask)];
          assert(x3769 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
          auto x3770 = Fp(x3769.asUInt32() & x61.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
          auto x3771 = x3770 * x60;
          // loc("zirgen/components/bytes.cpp":101:3)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3771);
            reg = x3771;
          }
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
          auto x3772 = Fp(x3769.asUInt32() & x50.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
          auto x3773 = x3772 * x93;
          // loc("zirgen/components/bytes.cpp":101:3)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3773);
            reg = x3773;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3774 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x3774 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3775 = x96 - x3774;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3776 = x3774 * x3775;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        assert(x3776 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:79");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3777 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x3777 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3778 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x3778 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3779 = x3774 * x61;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3780 = x3778 * x54;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3781 = x3779 + x3780;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3782 = x3777 - x3781;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        assert(x3782 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:79");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3783 = x3764 * x3582;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3784 = x3531 * x3583;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3785 = x3532 * x3584;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3786 = x3533 * x3585;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3787 = x3783 + x3784;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3788 = x3787 + x3785;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3789 = x3788 + x3786;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3789);
          reg = x3789;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3790 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x3790 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3791 = arg2[216 * steps + ((cycle - 0) & mask)];
        assert(x3791 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3792 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x3792 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3793 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x3793 != Fp::invalid());
        extern_args[0] = x95;
        extern_args[1] = x3790;
        extern_args[2] = x3791;
        extern_args[3] = x3792;
        extern_args[4] = x3793;
        extern_log(ctx, cycle, "  fillByte = %4x, extended: %w", extern_args, extern_outs);
        if (x3476 != 0) {
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
          auto x3794 = x3472 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3790);
            reg = x3790;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3791);
            reg = x3791;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3792);
            reg = x3792;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3793);
            reg = x3793;
          }
          {
            extern_args[0] = x3794;
            extern_args[1] = x3790;
            extern_args[2] = x3791;
            extern_args[3] = x3792;
            extern_args[4] = x3793;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3795 = arg2[147 * steps + ((cycle - 0) & mask)];
          assert(x3795 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3796 = arg2[148 * steps + ((cycle - 0) & mask)];
          assert(x3796 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3797 = arg2[149 * steps + ((cycle - 0) & mask)];
          assert(x3797 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3798 = arg2[150 * steps + ((cycle - 0) & mask)];
          assert(x3798 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3794);
            reg = x3794;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3795);
            reg = x3795;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3796);
            reg = x3796;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3797);
            reg = x3797;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3798);
            reg = x3798;
          }
        }
        if (x3475 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3799 = x3299 - x76;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        assert(x3799 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:79");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        auto x3800 = x3292 - x78;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":79:46)
        assert(x3800 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:79");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3801 = x3253 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3802 = x3255 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x3803 = x3255 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x3804 = x3258 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x3805 = x3256 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3806 = x3801 + x3804;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3807 = x3802 + x3805;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3808 = x3807 + x3254;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3809 = x3806 + x3455;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3809);
          reg = x3809;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3808);
          reg = x3808;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3803);
          reg = x3803;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3803);
          reg = x3803;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46))
      auto x3810 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x3810 != Fp::invalid());
      if (x3810 != 0) {
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46))
          auto x3811 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3811 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
          auto x3812 = x3811 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
          assert(x3812 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:80");
        }
        if (x96 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46))
          auto x3813 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3813 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
          auto x3814 = x3813 + x3532;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
          auto x3815 = x3814 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
          assert(x3815 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:80");
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46))
        auto x3816 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x3816 != Fp::invalid());
        if (x3816 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3817 = Fp(x3583.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3817);
              reg = x3817;
            }
          }
        }
        if (x3532 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:21)
            auto x3818 = Fp(x3585.asUInt32() & x92.asUInt32());
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x3818);
              reg = x3818;
            }
          }
        }
        {
          // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
          auto x3819 = arg2[29 * steps + ((cycle - 0) & mask)];
          assert(x3819 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
          auto x3820 = Fp(x3819.asUInt32() & x61.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
          auto x3821 = x3820 * x60;
          // loc("zirgen/components/bytes.cpp":101:3)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3821);
            reg = x3821;
          }
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
          auto x3822 = Fp(x3819.asUInt32() & x50.asUInt32());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
          auto x3823 = x3822 * x93;
          // loc("zirgen/components/bytes.cpp":101:3)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3823);
            reg = x3823;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3824 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x3824 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3825 = x96 - x3824;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3826 = x3824 * x3825;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        assert(x3826 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:80");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3827 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x3827 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x3828 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x3828 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3829 = x3824 * x61;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3830 = x3828 * x54;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3831 = x3829 + x3830;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3832 = x3827 - x3831;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        assert(x3832 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:80");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3833 = x3816 * x3582;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3834 = x3816 * x3583;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3835 = x3532 * x3584;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3836 = x3532 * x3585;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3837 = x3833 + x3835;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3838 = x3834 + x3836;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3837);
          reg = x3837;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3838);
          reg = x3838;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3839 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x3839 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3840 = arg2[216 * steps + ((cycle - 0) & mask)];
        assert(x3840 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3841 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x3841 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3842 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x3842 != Fp::invalid());
        extern_args[0] = x95;
        extern_args[1] = x3839;
        extern_args[2] = x3840;
        extern_args[3] = x3841;
        extern_args[4] = x3842;
        extern_log(ctx, cycle, "  fillByte = %4x, extended: %w", extern_args, extern_outs);
        if (x3476 != 0) {
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
          auto x3843 = x3472 + x48;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3839);
            reg = x3839;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3840);
            reg = x3840;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3841);
            reg = x3841;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3842);
            reg = x3842;
          }
          {
            extern_args[0] = x3843;
            extern_args[1] = x3839;
            extern_args[2] = x3840;
            extern_args[3] = x3841;
            extern_args[4] = x3842;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3844 = arg2[147 * steps + ((cycle - 0) & mask)];
          assert(x3844 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3845 = arg2[148 * steps + ((cycle - 0) & mask)];
          assert(x3845 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3846 = arg2[149 * steps + ((cycle - 0) & mask)];
          assert(x3846 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x3847 = arg2[150 * steps + ((cycle - 0) & mask)];
          assert(x3847 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3843);
            reg = x3843;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3844);
            reg = x3844;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3845);
            reg = x3845;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3846);
            reg = x3846;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x3847);
            reg = x3847;
          }
        }
        if (x3475 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3848 = x3299 - x76;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        assert(x3848 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:80");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        auto x3849 = x3292 - x67;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":80:46)
        assert(x3849 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:80");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3850 = x3253 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3851 = x3255 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":72:7)
        auto x3852 = x3255 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
        auto x3853 = x3258 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:21)
        auto x3854 = x3256 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3855 = x3850 + x3853;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3856 = x3851 + x3854;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":71:7)
        auto x3857 = x3856 + x3254;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
        auto x3858 = x3855 + x3455;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3858);
          reg = x3858;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3857);
          reg = x3857;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3852);
          reg = x3852;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3852);
          reg = x3852;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46))
      auto x3859 = arg2[206 * steps + ((cycle - 0) & mask)];
      assert(x3859 != Fp::invalid());
      if (x3859 != 0) {
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46))
          auto x3860 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3860 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
          auto x3861 = x3860 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
          assert(x3861 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:81");
        }
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46))
          auto x3862 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3862 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
          auto x3863 = x3862 + x3532;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
          auto x3864 = x3863 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
          assert(x3864 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:81");
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46))
        auto x3865 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x3865 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3866 = x3865 * x3461;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3867 = x3531 * x3461;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3868 = x3532 * x3461;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3869 = x3533 * x3461;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3870 = x96 - x3865;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3871 = x96 - x3531;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3872 = x96 - x3532;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3873 = x96 - x3533;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3874 = x3870 * x3582;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3875 = x3871 * x3583;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3876 = x3872 * x3584;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3877 = x3873 * x3585;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3878 = x3866 + x3874;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3879 = x3867 + x3875;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3880 = x3868 + x3876;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3881 = x3869 + x3877;
        extern_args[0] = x3878;
        extern_args[1] = x3879;
        extern_args[2] = x3880;
        extern_args[3] = x3881;
        extern_log(ctx, cycle, "  writeVal = %w", extern_args, extern_outs);
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3878);
          reg = x3878;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3879);
          reg = x3879;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3880);
          reg = x3880;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3881);
          reg = x3881;
        }
        {
          extern_args[0] = x3577;
          extern_args[1] = x3878;
          extern_args[2] = x3879;
          extern_args[3] = x3880;
          extern_args[4] = x3881;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3882 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x3882 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3883 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x3883 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3884 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x3884 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3885 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x3885 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3577);
          reg = x3577;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3882);
          reg = x3882;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3883);
          reg = x3883;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3884);
          reg = x3884;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3885);
          reg = x3885;
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        auto x3886 = x3299 - x35;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        assert(x3886 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:81");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":81:46)
        assert(x3292 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:81");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
        auto x3887 = x3253 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3888 = x3255 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3889 = x3255 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:21)
        auto x3890 = x3258 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x3891 = x3256 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
        auto x3892 = x3887 + x3890;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3893 = x3888 + x3891;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3894 = x3893 + x3254;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
        auto x3895 = x3892 + x3472;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3895);
          reg = x3895;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3894);
          reg = x3894;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3889);
          reg = x3889;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3889);
          reg = x3889;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46))
      auto x3896 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x3896 != Fp::invalid());
      if (x3896 != 0) {
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46))
          auto x3897 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3897 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
          auto x3898 = x3897 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
          assert(x3898 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:82");
        }
        if (x96 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46))
          auto x3899 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3899 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
          auto x3900 = x3899 + x3532;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
          auto x3901 = x3900 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
          assert(x3901 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:82");
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46))
        auto x3902 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x3902 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3903 = x3902 * x3462;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3904 = x3902 * x3461;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3905 = x3532 * x3462;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3906 = x3532 * x3461;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3907 = x96 - x3902;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3908 = x96 - x3532;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3909 = x3907 * x3582;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3910 = x3907 * x3583;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3911 = x3908 * x3584;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3912 = x3908 * x3585;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3913 = x3904 + x3909;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3914 = x3903 + x3910;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3915 = x3906 + x3911;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3916 = x3905 + x3912;
        extern_args[0] = x3913;
        extern_args[1] = x3914;
        extern_args[2] = x3915;
        extern_args[3] = x3916;
        extern_log(ctx, cycle, "  writeVal = %w", extern_args, extern_outs);
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3913);
          reg = x3913;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3914);
          reg = x3914;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3915);
          reg = x3915;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3916);
          reg = x3916;
        }
        {
          extern_args[0] = x3577;
          extern_args[1] = x3913;
          extern_args[2] = x3914;
          extern_args[3] = x3915;
          extern_args[4] = x3916;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3917 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x3917 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3918 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x3918 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3919 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x3919 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3920 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x3920 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3577);
          reg = x3577;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3917);
          reg = x3917;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3918);
          reg = x3918;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3919);
          reg = x3919;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3920);
          reg = x3920;
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3921 = x3299 - x35;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        assert(x3921 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:82");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        auto x3922 = x3292 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":82:46)
        assert(x3922 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:82");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
        auto x3923 = x3253 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3924 = x3255 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3925 = x3255 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:21)
        auto x3926 = x3258 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x3927 = x3256 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
        auto x3928 = x3923 + x3926;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3929 = x3924 + x3927;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3930 = x3929 + x3254;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
        auto x3931 = x3928 + x3472;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3931);
          reg = x3931;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3930);
          reg = x3930;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3925);
          reg = x3925;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3925);
          reg = x3925;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46))
      auto x3932 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x3932 != Fp::invalid());
      if (x3932 != 0) {
        if (x96 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46))
          auto x3933 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3933 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
          auto x3934 = x3933 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
          assert(x3934 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:83");
        }
        if (x95 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46))
          auto x3935 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x3935 != Fp::invalid());
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
          auto x3936 = x3935 + x3532;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
          auto x3937 = x3936 - x96;
          // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
          assert(x3937 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:83");
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46))
        auto x3938 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x3938 != Fp::invalid());
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3939 = x3938 * x3463;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3940 = x3938 * x3462;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3941 = x3938 * x3464;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3942 = x3938 * x3461;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3943 = x96 - x3938;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3944 = x3943 * x3582;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3945 = x3943 * x3583;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3946 = x3943 * x3584;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3947 = x3943 * x3585;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3948 = x3942 + x3944;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3949 = x3940 + x3945;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3950 = x3939 + x3946;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3951 = x3941 + x3947;
        extern_args[0] = x3948;
        extern_args[1] = x3949;
        extern_args[2] = x3950;
        extern_args[3] = x3951;
        extern_log(ctx, cycle, "  writeVal = %w", extern_args, extern_outs);
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3948);
          reg = x3948;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3949);
          reg = x3949;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3950);
          reg = x3950;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3951);
          reg = x3951;
        }
        {
          extern_args[0] = x3577;
          extern_args[1] = x3948;
          extern_args[2] = x3949;
          extern_args[3] = x3950;
          extern_args[4] = x3951;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3952 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x3952 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3953 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x3953 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3954 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x3954 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x3955 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x3955 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3577);
          reg = x3577;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3952);
          reg = x3952;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3953);
          reg = x3953;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3954);
          reg = x3954;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3955);
          reg = x3955;
        }
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3956 = x3299 - x35;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        assert(x3956 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:83");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        auto x3957 = x3292 - x93;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":83:46)
        assert(x3957 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:83");
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
        auto x3958 = x3253 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3959 = x3255 * x49;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":81:7)
        auto x3960 = x3255 * x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:21)
        auto x3961 = x3258 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:21)
        auto x3962 = x3256 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
        auto x3963 = x3958 + x3961;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3964 = x3959 + x3962;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":80:7)
        auto x3965 = x3964 + x3254;
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":79:7)
        auto x3966 = x3963 + x3472;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3966);
          reg = x3966;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3965);
          reg = x3965;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3960);
          reg = x3960;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3960);
          reg = x3960;
        }
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[4](Reg)"("./zirgen/components/mux.h":49:25))
    auto x3967 = arg2[104 * steps + ((cycle - 0) & mask)];
    assert(x3967 != Fp::invalid());
    if (x3967 != 0) {
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":20:41)
      auto x3968 = x963 * x75;
      {
        extern_args[0] = x3968;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x3969 = extern_outs[0];
        auto x3970 = extern_outs[1];
        auto x3971 = extern_outs[2];
        auto x3972 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3969);
          reg = x3969;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3970);
          reg = x3970;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3971);
          reg = x3971;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3972);
          reg = x3972;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3973 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x3973 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3974 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x3974 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3975 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x3975 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x3976 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x3976 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[116 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3968);
        reg = x3968;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[117 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3973);
        reg = x3973;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3974);
        reg = x3974;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3975);
        reg = x3975;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3976);
        reg = x3976;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:16)
        auto x3977 = Fp(x3976.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:15)
        auto x3978 = x3977 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3978);
          reg = x3978;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:17)
        auto x3979 = Fp(x3976.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:16)
        auto x3980 = x3979 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3980);
          reg = x3980;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:16)
        auto x3981 = Fp(x3976.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:15)
        auto x3982 = x3981 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3982);
          reg = x3982;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:16)
        auto x3983 = Fp(x3976.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:15)
        auto x3984 = x3983 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3984);
          reg = x3984;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:17)
        auto x3985 = Fp(x3976.asUInt32() & x66.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:16)
        auto x3986 = x3985 * x54;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3986);
          reg = x3986;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":16:17)
        auto x3987 = Fp(x3976.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3987);
          reg = x3987;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:17)
        auto x3988 = Fp(x3975.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:16)
        auto x3989 = x3988 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3989);
          reg = x3989;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:18)
        auto x3990 = Fp(x3975.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:17)
        auto x3991 = x3990 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3991);
          reg = x3991;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:17)
        auto x3992 = Fp(x3975.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:16)
        auto x3993 = x3992 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3993);
          reg = x3993;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:18)
        auto x3994 = Fp(x3975.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:17)
        auto x3995 = x3994 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3995);
          reg = x3995;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:18)
        auto x3996 = Fp(x3975.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3996);
          reg = x3996;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x3997 = Fp(x3974.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x3998 = x3997 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x3998);
          reg = x3998;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:19)
        auto x3999 = Fp(x3974.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:18)
        auto x4000 = x3999 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4000);
          reg = x4000;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:20)
        auto x4001 = Fp(x3974.asUInt32() & x51.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:19)
        auto x4002 = x4001 * x56;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4002);
          reg = x4002;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x4003 = Fp(x3974.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x4004 = x4003 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4004);
          reg = x4004;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x4005 = Fp(x3974.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4005);
          reg = x4005;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x4006 = Fp(x3973.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:15)
        auto x4007 = x4006 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4007);
          reg = x4007;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x4008 = Fp(x3973.asUInt32() & x50.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:5)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4008);
          reg = x4008;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4009 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x4009 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4010 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x4010 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4011 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x4011 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4012 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x4012 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4013 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x4013 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4014 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x4014 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x4015 = x4011 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x4016 = x4012 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:39)
      auto x4017 = x4009 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:25)
      auto x4018 = x4010 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x4019 = x4016 + x4018;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x4020 = x4019 + x4017;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x4021 = x4020 + x4014;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x4022 = x4015 + x4021;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x4023 = x4022 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x4024 = x4023 + x4013;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      auto x4025 = x3976 - x4024;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      assert(x4025 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:30");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4026 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x4026 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4027 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x4027 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4028 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x4028 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4029 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x4029 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4030 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x4030 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x4031 = x4026 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:37)
      auto x4032 = x4027 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:69)
      auto x4033 = x4028 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x4034 = x4031 + x4032;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x4035 = x4034 + x4029;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x4036 = x4035 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x4037 = x4036 + x4033;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x4038 = x4037 + x4030;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      auto x4039 = x3975 - x4038;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      assert(x4039 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:31");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4040 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x4040 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4041 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x4041 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4042 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x4042 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4043 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x4043 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4044 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x4044 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x4045 = x4040 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x4046 = x4041 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:53)
      auto x4047 = x4042 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x4048 = x4046 + x4043;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:36)
      auto x4049 = x4048 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x4050 = x4045 + x4049;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x4051 = x4050 + x4047;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x4052 = x4051 + x4044;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      auto x4053 = x3974 - x4052;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      assert(x4053 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:32");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4054 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x4054 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x4055 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x4055 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x4056 = x4054 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x4057 = x4056 + x4055;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      auto x4058 = x3973 - x4057;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      assert(x4058 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:33");
      {
        extern_args[0] = x3973;
        extern_args[1] = x3974;
        extern_args[2] = x3975;
        extern_args[3] = x3976;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x4059 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4060 = (x4059 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[181 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4060);
            reg = x4060;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4061 = x4059 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4062 = (x4061 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[182 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4062);
            reg = x4062;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4063 = x4059 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4064 = (x4063 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4064);
            reg = x4064;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4065 = x4059 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4066 = (x4065 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4066);
            reg = x4066;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4067 = x4059 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4068 = (x4067 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4068);
            reg = x4068;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4069 = x4059 - x67;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4070 = (x4069 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4070);
            reg = x4070;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4071 = x4059 - x66;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4072 = (x4071 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4072);
            reg = x4072;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4073 = x4059 - x65;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4074 = (x4073 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4074);
            reg = x4074;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4075 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x4075 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4076 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x4076 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4077 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x4077 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4078 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x4078 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4079 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x4079 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4080 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x4080 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4081 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x4081 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4082 = x4076 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4083 = x4077 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4084 = x4078 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4085 = x4079 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4086 = x4080 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4087 = x4081 * x65;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4088 = x4075 + x4082;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4089 = x4088 + x4083;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4090 = x4089 + x4084;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4091 = x4090 + x4085;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4092 = x4091 + x4086;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4093 = x4092 + x4087;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x4094 = x4093 - x4059;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x4094 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      }
      extern_args[0] = x95;
      extern_args[1] = x95;
      extern_args[2] = x95;
      extern_args[3] = x95;
      extern_args[4] = x95;
      extern_log(ctx, cycle, "  useImm=%u, usePo2=%u, signedA=%u, signedB=%u, useHigh=%u", extern_args, extern_outs);
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":102:49))
      auto x4095 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x4095 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":103:49))
      auto x4096 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x4096 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":104:49))
      auto x4097 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x4097 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":105:49))
      auto x4098 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x4098 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":106:49))
      auto x4099 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x4099 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x4100 = x4028 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:26)
      auto x4101 = x4030 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x4102 = x4100 + x4101;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x4103 = x4102 + x4040;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":54:39)
      auto x4104 = x4103 + x48;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":103:49)
      auto x4105 = x4095 + x4096;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":104:49)
      auto x4106 = x4105 + x4097;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":106:49)
      auto x4107 = x4098 + x4099;
      {
        extern_args[0] = x4104;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4108 = extern_outs[0];
        auto x4109 = extern_outs[1];
        auto x4110 = extern_outs[2];
        auto x4111 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4108);
          reg = x4108;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4109);
          reg = x4109;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4110);
          reg = x4110;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4111);
          reg = x4111;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4112 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x4112 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4113 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x4113 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4114 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x4114 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4115 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x4115 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4104);
        reg = x4104;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4112);
        reg = x4112;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4113);
        reg = x4113;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4114);
        reg = x4114;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4115);
        reg = x4115;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x4116 = x4013 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x4117 = x4116 + x4035;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":55:39)
      auto x4118 = x4117 + x48;
      {
        extern_args[0] = x4118;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4119 = extern_outs[0];
        auto x4120 = extern_outs[1];
        auto x4121 = extern_outs[2];
        auto x4122 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4119);
          reg = x4119;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4120);
          reg = x4120;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4121);
          reg = x4121;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4122);
          reg = x4122;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4123 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x4123 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4124 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x4124 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4125 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x4125 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4126 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x4126 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4118);
        reg = x4118;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4123);
        reg = x4123;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4124);
        reg = x4124;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4125);
        reg = x4125;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4126);
        reg = x4126;
      }
      extern_args[0] = x4103;
      extern_args[1] = x4112;
      extern_args[2] = x4113;
      extern_args[3] = x4114;
      extern_args[4] = x4115;
      extern_args[5] = x4117;
      extern_args[6] = x4123;
      extern_args[7] = x4124;
      extern_args[8] = x4125;
      extern_args[9] = x4126;
      extern_log(ctx, cycle, "  rs1=x%u -> %w, rs2=x%u -> %w", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":61:35)
      auto x4127 = x96 - x4099;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
      auto x4128 = x4009 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
      auto x4129 = x4014 * x58;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4130 = x4127 * x4123;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
      auto x4131 = x4128 + x4129;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
      auto x4132 = x4131 + x4117;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4133 = x4099 * x4132;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x4134 = x4133 + x4130;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":63:16)
        auto x4135 = Fp(x4134.asUInt32() & x34.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":63:15)
        auto x4136 = x4135 * x53;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4136);
          reg = x4136;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":64:16)
        auto x4137 = Fp(x4134.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":64:15)
        auto x4138 = x4137 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4138);
          reg = x4138;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":65:14)
        auto x4139 = Fp(x4134.asUInt32() & x33.asUInt32());
        {
          // loc("zirgen/components/u32.cpp":193:21)
          auto x4140 = Fp(x4139.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4140);
            reg = x4140;
          }
          // loc("zirgen/components/u32.cpp":193:21)
          auto x4141 = Fp(x4139.asUInt32() & x93.asUInt32());
          // loc("zirgen/components/u32.cpp":193:20)
          auto x4142 = x4141 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4142);
            reg = x4142;
          }
          // loc("zirgen/components/u32.cpp":193:21)
          auto x4143 = Fp(x4139.asUInt32() & x78.asUInt32());
          // loc("zirgen/components/u32.cpp":193:20)
          auto x4144 = x4143 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4144);
            reg = x4144;
          }
          // loc("zirgen/components/u32.cpp":193:21)
          auto x4145 = Fp(x4139.asUInt32() & x64.asUInt32());
          // loc("zirgen/components/u32.cpp":193:20)
          auto x4146 = x4145 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4146);
            reg = x4146;
          }
          // loc("zirgen/components/u32.cpp":193:21)
          auto x4147 = Fp(x4139.asUInt32() & x62.asUInt32());
          // loc("zirgen/components/u32.cpp":193:20)
          auto x4148 = x4147 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4148);
            reg = x4148;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x4149 = arg2[190 * steps + ((cycle - 0) & mask)];
          assert(x4149 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x4150 = arg2[191 * steps + ((cycle - 0) & mask)];
          assert(x4150 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x4151 = arg2[192 * steps + ((cycle - 0) & mask)];
          assert(x4151 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x4152 = arg2[194 * steps + ((cycle - 0) & mask)];
          assert(x4152 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x4153 = arg2[193 * steps + ((cycle - 0) & mask)];
          assert(x4153 != Fp::invalid());
          // loc("zirgen/components/u32.cpp":195:42)
          auto x4154 = x4150 * x76;
          // loc("zirgen/components/u32.cpp":195:21)
          auto x4155 = x4151 * x68;
          // loc("zirgen/components/u32.cpp":196:15)
          auto x4156 = x4152 * x93;
          // loc("zirgen/components/u32.cpp":195:17)
          auto x4157 = x4155 + x96;
          // loc("zirgen/components/u32.cpp":196:15)
          auto x4158 = x4156 + x4153;
          // loc("zirgen/components/u32.cpp":195:58)
          auto x4159 = x4149 + x96;
          // loc("zirgen/components/u32.cpp":195:38)
          auto x4160 = x4154 + x96;
          // loc("zirgen/components/u32.cpp":198:13)
          auto x4161 = (x4158 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":195:16)
          auto x4162 = x4157 * x4160;
          // loc("zirgen/components/u32.cpp":195:16)
          auto x4163 = x4162 * x4159;
          // loc("zirgen/components/u32.cpp":198:34)
          auto x4164 = x4158 - x96;
          // loc("zirgen/components/u32.cpp":198:55)
          auto x4165 = x4158 - x93;
          // loc("zirgen/components/u32.cpp":198:76)
          auto x4166 = x4158 - x76;
          // loc("zirgen/components/u32.cpp":198:34)
          auto x4167 = (x4164 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":198:55)
          auto x4168 = (x4165 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":198:76)
          auto x4169 = (x4166 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":198:9)
          auto x4170 = x4161 * x4163;
          // loc("zirgen/components/u32.cpp":198:30)
          auto x4171 = x4167 * x4163;
          // loc("zirgen/components/u32.cpp":198:51)
          auto x4172 = x4168 * x4163;
          // loc("zirgen/components/u32.cpp":198:72)
          auto x4173 = x4169 * x4163;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4170);
            reg = x4170;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4171);
            reg = x4171;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4172);
            reg = x4172;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4173);
            reg = x4173;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4174 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x4174 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4175 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x4175 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4176 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x4176 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4177 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x4177 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4178 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x4178 != Fp::invalid());
        // loc("zirgen/components/u32.cpp":207:17)
        auto x4179 = x4175 * x93;
        // loc("zirgen/components/u32.cpp":207:17)
        auto x4180 = x4176 * x78;
        // loc("zirgen/components/u32.cpp":207:17)
        auto x4181 = x4177 * x64;
        // loc("zirgen/components/u32.cpp":207:17)
        auto x4182 = x4178 * x62;
        // loc("zirgen/components/u32.cpp":207:11)
        auto x4183 = x4174 + x4179;
        // loc("zirgen/components/u32.cpp":207:11)
        auto x4184 = x4183 + x4180;
        // loc("zirgen/components/u32.cpp":207:11)
        auto x4185 = x4184 + x4181;
        // loc("zirgen/components/u32.cpp":207:11)
        auto x4186 = x4185 + x4182;
        // loc("zirgen/components/u32.cpp":201:6)
        auto x4187 = x4186 - x4139;
        // loc("zirgen/components/u32.cpp":201:6)
        assert(x4187 == 0 && "eqz failed at: zirgen/components/u32.cpp:201");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4188 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x4188 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4189 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x4189 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4190 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x4190 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4191 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x4191 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4192 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x4192 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4193 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x4193 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4194 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x4194 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":67:23)
      auto x4195 = x4194 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":67:37)
      auto x4196 = x4188 * x58;
      // loc("zirgen/components/u32.cpp":207:17)
      auto x4197 = x4190 * x93;
      // loc("zirgen/components/u32.cpp":207:17)
      auto x4198 = x4191 * x78;
      // loc("zirgen/components/u32.cpp":207:17)
      auto x4199 = x4192 * x64;
      // loc("zirgen/components/u32.cpp":207:17)
      auto x4200 = x4193 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":67:23)
      auto x4201 = x4195 + x4196;
      // loc("zirgen/components/u32.cpp":207:11)
      auto x4202 = x4189 + x4197;
      // loc("zirgen/components/u32.cpp":207:11)
      auto x4203 = x4202 + x4198;
      // loc("zirgen/components/u32.cpp":207:11)
      auto x4204 = x4203 + x4199;
      // loc("zirgen/components/u32.cpp":207:11)
      auto x4205 = x4204 + x4200;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":67:23)
      auto x4206 = x4201 + x4205;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":67:6)
      auto x4207 = x4134 - x4206;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":67:6)
      assert(x4207 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/multiply.cpp:67");
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":70:42)
      auto x4208 = x96 - x4107;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4209 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x4209 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4210 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x4210 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4211 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x4211 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Po2/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4212 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x4212 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4213 = x4107 * x4209;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4214 = x4107 * x4210;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4215 = x4107 * x4211;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4216 = x4107 * x4212;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4217 = x4208 * x4123;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4218 = x4208 * x4124;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4219 = x4208 * x4125;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4220 = x4208 * x4126;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x4221 = x4213 + x4217;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x4222 = x4214 + x4218;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x4223 = x4215 + x4219;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x4224 = x4216 + x4220;
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x4225 = Fp(x4115.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x4226 = x4225 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4226);
          reg = x4226;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x4227 = Fp(x4115.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x4228 = x4227 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4228);
          reg = x4228;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4229 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x4229 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Mul/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4230 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x4230 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x4231 = x4230 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x4232 = x4229 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x4233 = x4231 + x4232;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x4234 = x4115 - x4233;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x4234 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x4235 = Fp(x4224.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x4236 = x4235 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4236);
          reg = x4236;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x4237 = Fp(x4224.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x4238 = x4237 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4238);
          reg = x4238;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4239 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x4239 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Mul/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4240 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x4240 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x4241 = x4240 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x4242 = x4239 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x4243 = x4241 + x4242;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x4244 = x4224 - x4243;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x4244 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      // loc("zirgen/components/u32.cpp":219:13)
      auto x4245 = x4095 * x4240;
      // loc("zirgen/components/u32.cpp":219:3)
      {
        auto& reg = arg2[201 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4245);
        reg = x4245;
      }
      // loc("zirgen/components/u32.cpp":220:13)
      auto x4246 = x4105 * x4230;
      // loc("zirgen/components/u32.cpp":220:3)
      {
        auto& reg = arg2[202 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4246);
        reg = x4246;
      }
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4247 = x4112 * x4221;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4248 = x4113 * x4221;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4249 = x4112 * x4222;
      // loc("zirgen/components/u32.cpp":235:20)
      auto x4250 = x4248 + x4249;
      // loc("zirgen/components/u32.cpp":237:19)
      auto x4251 = x4250 * x90;
      // loc("zirgen/components/u32.cpp":237:13)
      auto x4252 = x4247 + x4251;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4253 = Fp(x4252.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4253);
          reg = x4253;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4254 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x4254 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4255 = x4252 - x4254;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4256 = x4255 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4257 = Fp(x4256.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4257);
          reg = x4257;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4258 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x4258 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4259 = x4256 - x4258;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4260 = x4259 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4261 = Fp(x4260.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4261);
          reg = x4261;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4262 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x4262 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4263 = x4260 - x4262;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4264 = x4263 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4264);
        reg = x4264;
      }
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4265 = x4114 * x4221;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4266 = x4115 * x4221;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4267 = x4112 * x4223;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4268 = x4112 * x4224;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4269 = x4113 * x4222;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4270 = x4113 * x4223;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4271 = x4114 * x4222;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Mul/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4272 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x4272 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":225:19)
      auto x4273 = x4272 * x90;
      // loc("zirgen/components/u32.cpp":235:20)
      auto x4274 = x4265 + x4269;
      // loc("zirgen/components/u32.cpp":235:20)
      auto x4275 = x4266 + x4271;
      // loc("zirgen/components/u32.cpp":235:20)
      auto x4276 = x4274 + x4267;
      // loc("zirgen/components/u32.cpp":235:20)
      auto x4277 = x4275 + x4270;
      // loc("zirgen/components/u32.cpp":225:13)
      auto x4278 = x4262 + x4273;
      // loc("zirgen/components/u32.cpp":235:20)
      auto x4279 = x4277 + x4268;
      // loc("zirgen/components/u32.cpp":237:13)
      auto x4280 = x4278 + x4276;
      // loc("zirgen/components/u32.cpp":237:19)
      auto x4281 = x4279 * x90;
      // loc("zirgen/components/u32.cpp":237:13)
      auto x4282 = x4280 + x4281;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4283 = Fp(x4282.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4283);
          reg = x4283;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4284 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x4284 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4285 = x4282 - x4284;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4286 = x4285 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4287 = Fp(x4286.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4287);
          reg = x4287;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4288 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x4288 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4289 = x4286 - x4288;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4290 = x4289 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4291 = Fp(x4290.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4291);
          reg = x4291;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4292 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x4292 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4293 = x4290 - x4292;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4294 = x4293 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[85 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4294);
        reg = x4294;
      }
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4295 = x4115 * x4222;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4296 = x4115 * x4223;
      // loc("zirgen/components/u32.cpp":241:37)
      auto x4297 = x4222 * x90;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4298 = x4113 * x4224;
      // loc("zirgen/components/u32.cpp":240:53)
      auto x4299 = x4113 * x90;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4300 = x4114 * x4223;
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4301 = x4114 * x4224;
      // loc("zirgen/components/u32.cpp":241:22)
      auto x4302 = x4221 + x4297;
      // loc("zirgen/components/u32.cpp":240:38)
      auto x4303 = x4112 + x4299;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Mul/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x4304 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x4304 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Mul/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x4305 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x4305 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Mul/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4306 = arg2[85 * steps + ((cycle - 0) & mask)];
      assert(x4306 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":240:30)
      auto x4307 = x4304 * x4303;
      // loc("zirgen/components/u32.cpp":241:14)
      auto x4308 = x4305 * x4302;
      // loc("zirgen/components/u32.cpp":225:19)
      auto x4309 = x4306 * x90;
      // loc("zirgen/components/u32.cpp":235:20)
      auto x4310 = x4295 + x4300;
      // loc("zirgen/components/u32.cpp":235:20)
      auto x4311 = x4296 + x4301;
      // loc("zirgen/components/u32.cpp":235:20)
      auto x4312 = x4310 + x4298;
      // loc("zirgen/components/u32.cpp":237:19)
      auto x4313 = x4311 * x90;
      // loc("zirgen/components/u32.cpp":225:13)
      auto x4314 = x4292 + x4309;
      // loc("zirgen/components/u32.cpp":237:13)
      auto x4315 = x4314 + x4312;
      // loc("zirgen/components/u32.cpp":237:13)
      auto x4316 = x4315 + x4313;
      // loc("zirgen/components/u32.cpp":240:13)
      auto x4317 = x4316 + x32;
      // loc("zirgen/components/u32.cpp":240:13)
      auto x4318 = x4317 - x4307;
      // loc("zirgen/components/u32.cpp":240:13)
      auto x4319 = x4318 - x4308;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4320 = Fp(x4319.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4320);
          reg = x4320;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4321 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x4321 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4322 = x4319 - x4321;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4323 = x4322 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4324 = Fp(x4323.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4324);
          reg = x4324;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4325 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x4325 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4326 = x4323 - x4325;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4327 = x4326 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4328 = Fp(x4327.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4328);
          reg = x4328;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4329 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x4329 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4330 = x4327 - x4329;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4331 = x4330 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[86 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4331);
        reg = x4331;
      }
      // loc("zirgen/components/u32.cpp":235:31)
      auto x4332 = x4115 * x4224;
      // loc("zirgen/components/u32.cpp":245:37)
      auto x4333 = x4224 * x90;
      // loc("zirgen/components/u32.cpp":244:53)
      auto x4334 = x4115 * x90;
      // loc("zirgen/components/u32.cpp":245:22)
      auto x4335 = x4223 + x4333;
      // loc("zirgen/components/u32.cpp":244:38)
      auto x4336 = x4114 + x4334;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/U32Mul/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4337 = arg2[86 * steps + ((cycle - 0) & mask)];
      assert(x4337 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":244:30)
      auto x4338 = x4304 * x4336;
      // loc("zirgen/components/u32.cpp":245:14)
      auto x4339 = x4305 * x4335;
      // loc("zirgen/components/u32.cpp":225:19)
      auto x4340 = x4337 * x90;
      // loc("zirgen/components/u32.cpp":225:13)
      auto x4341 = x4329 + x4340;
      // loc("zirgen/components/u32.cpp":237:13)
      auto x4342 = x4341 + x4332;
      // loc("zirgen/components/u32.cpp":244:13)
      auto x4343 = x4342 + x31;
      // loc("zirgen/components/u32.cpp":244:13)
      auto x4344 = x4343 - x4338;
      // loc("zirgen/components/u32.cpp":244:13)
      auto x4345 = x4344 - x4339;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4346 = Fp(x4345.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4346);
          reg = x4346;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4347 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x4347 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4348 = x4345 - x4347;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4349 = x4348 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4350 = Fp(x4349.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4350);
          reg = x4350;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4351 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x4351 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4352 = x4349 - x4351;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4353 = x4352 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[87 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4353);
        reg = x4353;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x4354 = x4042 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:25)
      auto x4355 = x4044 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x4356 = x4354 + x4355;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x4357 = x4356 + x4054;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x4358 = (x4357 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[203 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4358);
          reg = x4358;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x4359 = inv(x4357);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[204 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4359);
          reg = x4359;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4360 = arg2[203 * steps + ((cycle - 0) & mask)];
      assert(x4360 != Fp::invalid());
      if (x4360 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x4357 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x4361 = x96 - x4360;
      if (x4361 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4362 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x4362 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x4363 = x4357 * x4362;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x4364 = x4363 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x4364 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":78:17)
      auto x4365 = x963 + x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x4366 = x4365 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4367 = Fp(x4366.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4367);
          reg = x4367;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4368 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x4368 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4369 = x4366 - x4368;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4370 = x4369 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4371 = Fp(x4370.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4371);
          reg = x4371;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4372 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x4372 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4373 = x4370 - x4372;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4374 = x4373 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4375 = Fp(x4374.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4375);
          reg = x4375;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4376 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x4376 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4377 = x4374 - x4376;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4378 = x4377 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x4379 = Fp(x4378.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4379);
          reg = x4379;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4380 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x4380 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x4381 = x4378 - x4380;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x4382 = x4381 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4382);
        reg = x4382;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4383 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x4383 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x4384 = x96 - x4383;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x4385 = x4383 * x4384;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4385);
        reg = x4385;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x4386 = x93 - x4383;
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x4387 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x4387 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x4388 = x4387 * x4386;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x4388 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":79:3)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x62);
        reg = x62;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":80:38)
      auto x4389 = x4106 * x4361;
      if (x4389 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":81:29)
        auto x4390 = x4357 + x48;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4321);
          reg = x4321;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4325);
          reg = x4325;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4347);
          reg = x4347;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4351);
          reg = x4351;
        }
        {
          extern_args[0] = x4390;
          extern_args[1] = x4321;
          extern_args[2] = x4325;
          extern_args[3] = x4347;
          extern_args[4] = x4351;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4391 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x4391 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4392 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x4392 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4393 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x4393 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4394 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x4394 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4390);
          reg = x4390;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4391);
          reg = x4391;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4392);
          reg = x4392;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4393);
          reg = x4393;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4394);
          reg = x4394;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":83:44)
      auto x4395 = x96 - x4106;
      // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":83:44)
      auto x4396 = x4395 * x4361;
      if (x4396 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/multiply.cpp":84:29)
        auto x4397 = x4357 + x48;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4254);
          reg = x4254;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4258);
          reg = x4258;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4284);
          reg = x4284;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4288);
          reg = x4288;
        }
        {
          extern_args[0] = x4397;
          extern_args[1] = x4254;
          extern_args[2] = x4258;
          extern_args[3] = x4284;
          extern_args[4] = x4288;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4398 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x4398 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4399 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x4399 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4400 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x4400 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4401 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x4401 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4397);
          reg = x4397;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4398);
          reg = x4398;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4399);
          reg = x4399;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4400);
          reg = x4400;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4401);
          reg = x4401;
        }
      }
      if (x4360 != 0) {
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":101:49))
      auto x4402 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x4402 != Fp::invalid());
      if (x4402 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":101:49)
        auto x4403 = x4055 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":101:49)
        assert(x4403 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:101");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":101:49)
        assert(x4048 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:101");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":101:49)
        auto x4404 = x4022 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":101:49)
        assert(x4404 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:101");
      }
      if (x4095 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":102:49)
        auto x4405 = x4055 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":102:49)
        assert(x4405 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:102");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":102:49)
        auto x4406 = x4048 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":102:49)
        assert(x4406 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:102");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":102:49)
        auto x4407 = x4022 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":102:49)
        assert(x4407 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:102");
      }
      if (x4096 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":103:49)
        auto x4408 = x4055 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":103:49)
        assert(x4408 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:103");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":103:49)
        auto x4409 = x4048 - x93;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":103:49)
        assert(x4409 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:103");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":103:49)
        auto x4410 = x4022 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":103:49)
        assert(x4410 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:103");
      }
      if (x4097 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":104:49)
        auto x4411 = x4055 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":104:49)
        assert(x4411 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:104");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":104:49)
        auto x4412 = x4048 - x76;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":104:49)
        assert(x4412 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:104");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":104:49)
        auto x4413 = x4022 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":104:49)
        assert(x4413 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:104");
      }
      if (x4098 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":105:49)
        auto x4414 = x4055 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":105:49)
        assert(x4414 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:105");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":105:49)
        auto x4415 = x4048 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":105:49)
        assert(x4415 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:105");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":105:49)
        assert(x4022 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:105");
      }
      if (x4099 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":106:49)
        auto x4416 = x4055 - x44;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":106:49)
        assert(x4416 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:106");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":106:49)
        auto x4417 = x4048 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":106:49)
        assert(x4417 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:106");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":106:49)
        assert(x4022 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:106");
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[5](Reg)"("./zirgen/components/mux.h":49:25))
    auto x4418 = arg2[105 * steps + ((cycle - 0) & mask)];
    assert(x4418 != Fp::invalid());
    if (x4418 != 0) {
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":20:41)
      auto x4419 = x963 * x75;
      {
        extern_args[0] = x4419;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4420 = extern_outs[0];
        auto x4421 = extern_outs[1];
        auto x4422 = extern_outs[2];
        auto x4423 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4420);
          reg = x4420;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4421);
          reg = x4421;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4422);
          reg = x4422;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4423);
          reg = x4423;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4424 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x4424 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4425 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x4425 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4426 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x4426 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4427 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x4427 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[116 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4419);
        reg = x4419;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[117 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4424);
        reg = x4424;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4425);
        reg = x4425;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4426);
        reg = x4426;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4427);
        reg = x4427;
      }
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:16)
        auto x4428 = Fp(x4427.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":11:15)
        auto x4429 = x4428 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4429);
          reg = x4429;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:17)
        auto x4430 = Fp(x4427.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":12:16)
        auto x4431 = x4430 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4431);
          reg = x4431;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:16)
        auto x4432 = Fp(x4427.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":13:15)
        auto x4433 = x4432 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4433);
          reg = x4433;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:16)
        auto x4434 = Fp(x4427.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":14:15)
        auto x4435 = x4434 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4435);
          reg = x4435;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:17)
        auto x4436 = Fp(x4427.asUInt32() & x66.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":15:16)
        auto x4437 = x4436 * x54;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4437);
          reg = x4437;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":16:17)
        auto x4438 = Fp(x4427.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4438);
          reg = x4438;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:17)
        auto x4439 = Fp(x4426.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":17:16)
        auto x4440 = x4439 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4440);
          reg = x4440;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:18)
        auto x4441 = Fp(x4426.asUInt32() & x57.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":18:17)
        auto x4442 = x4441 * x59;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4442);
          reg = x4442;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:17)
        auto x4443 = Fp(x4426.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":19:16)
        auto x4444 = x4443 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4444);
          reg = x4444;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:18)
        auto x4445 = Fp(x4426.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":20:17)
        auto x4446 = x4445 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4446);
          reg = x4446;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":21:18)
        auto x4447 = Fp(x4426.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4447);
          reg = x4447;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:17)
        auto x4448 = Fp(x4425.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":22:16)
        auto x4449 = x4448 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4449);
          reg = x4449;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:19)
        auto x4450 = Fp(x4425.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":23:18)
        auto x4451 = x4450 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4451);
          reg = x4451;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:20)
        auto x4452 = Fp(x4425.asUInt32() & x51.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":24:19)
        auto x4453 = x4452 * x56;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4453);
          reg = x4453;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:17)
        auto x4454 = Fp(x4425.asUInt32() & x71.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":25:16)
        auto x4455 = x4454 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4455);
          reg = x4455;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":26:17)
        auto x4456 = Fp(x4425.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4456);
          reg = x4456;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:16)
        auto x4457 = Fp(x4424.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":27:15)
        auto x4458 = x4457 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4458);
          reg = x4458;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:18)
        auto x4459 = Fp(x4424.asUInt32() & x50.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":28:5)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4459);
          reg = x4459;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4460 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x4460 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4461 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x4461 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4462 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x4462 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4463 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x4463 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4464 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x4464 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4465 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x4465 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x4466 = x4462 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x4467 = x4463 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:39)
      auto x4468 = x4460 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:25)
      auto x4469 = x4461 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x4470 = x4467 + x4469;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x4471 = x4470 + x4468;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":57:10)
      auto x4472 = x4471 + x4465;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":53:10)
      auto x4473 = x4466 + x4472;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x4474 = x4473 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:21)
      auto x4475 = x4474 + x4464;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      auto x4476 = x4427 - x4475;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":30:6)
      assert(x4476 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:30");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4477 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x4477 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4478 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x4478 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4479 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x4479 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4480 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x4480 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4481 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x4481 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x4482 = x4477 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:37)
      auto x4483 = x4478 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:69)
      auto x4484 = x4479 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x4485 = x4482 + x4483;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:22)
      auto x4486 = x4485 + x4480;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x4487 = x4486 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x4488 = x4487 + x4484;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:21)
      auto x4489 = x4488 + x4481;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      auto x4490 = x4426 - x4489;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":31:6)
      assert(x4490 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:31");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4491 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x4491 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4492 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x4492 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4493 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x4493 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4494 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x4494 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4495 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x4495 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x4496 = x4491 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x4497 = x4492 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:53)
      auto x4498 = x4493 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":49:10)
      auto x4499 = x4497 + x4494;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:36)
      auto x4500 = x4499 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x4501 = x4496 + x4500;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x4502 = x4501 + x4498;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:21)
      auto x4503 = x4502 + x4495;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      auto x4504 = x4425 - x4503;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":32:6)
      assert(x4504 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:32");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4505 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x4505 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Decoder/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x4506 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x4506 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x4507 = x4505 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:21)
      auto x4508 = x4507 + x4506;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      auto x4509 = x4424 - x4508;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":33:6)
      assert(x4509 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/decode.cpp:33");
      {
        extern_args[0] = x4424;
        extern_args[1] = x4425;
        extern_args[2] = x4426;
        extern_args[3] = x4427;
        extern_getMinor(ctx, cycle, "", extern_args, extern_outs);
        auto x4510 = extern_outs[0];
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4511 = (x4510 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[181 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4511);
            reg = x4511;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4512 = x4510 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4513 = (x4512 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[182 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4513);
            reg = x4513;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4514 = x4510 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4515 = (x4514 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4515);
            reg = x4515;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4516 = x4510 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4517 = (x4516 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4517);
            reg = x4517;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4518 = x4510 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4519 = (x4518 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4519);
            reg = x4519;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4520 = x4510 - x67;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4521 = (x4520 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4521);
            reg = x4521;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4522 = x4510 - x66;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4523 = (x4522 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4523);
            reg = x4523;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4524 = x4510 - x65;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x4525 = (x4524 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4525);
            reg = x4525;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4526 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x4526 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4527 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x4527 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4528 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x4528 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4529 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x4529 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4530 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x4530 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4531 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x4531 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4532 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x4532 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4533 = x4527 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4534 = x4528 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4535 = x4529 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4536 = x4530 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4537 = x4531 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x4538 = x4532 * x65;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4539 = x4526 + x4533;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4540 = x4539 + x4534;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4541 = x4540 + x4535;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4542 = x4541 + x4536;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4543 = x4542 + x4537;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x4544 = x4543 + x4538;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x4545 = x4544 - x4510;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x4545 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[0](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":124:49))
      auto x4546 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x4546 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[2](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":126:49))
      auto x4547 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x4547 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[3](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":127:49))
      auto x4548 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x4548 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[4](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":128:49))
      auto x4549 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x4549 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[5](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":129:49))
      auto x4550 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x4550 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[6](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":130:49))
      auto x4551 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x4551 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[7](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49))
      auto x4552 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x4552 != Fp::invalid());
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":126:49)
      auto x4553 = x4546 + x4547;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":127:49)
      auto x4554 = x4547 + x4548;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":129:49)
      auto x4555 = x4549 + x4550;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":129:49)
      auto x4556 = x4553 + x4550;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":130:49)
      auto x4557 = x4555 + x4551;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49)
      auto x4558 = x4551 + x4552;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49)
      auto x4559 = x4550 + x4552;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49)
      auto x4560 = x4556 + x4552;
      // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49)
      auto x4561 = x4557 + x4552;
      // loc("./zirgen/components/bits.h":27:23)
      {
        auto& reg = arg2[199 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4560);
        reg = x4560;
      }
      // loc("./zirgen/components/bits.h":27:23)
      {
        auto& reg = arg2[200 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4559);
        reg = x4559;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4562 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x4562 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4563 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x4563 != Fp::invalid());
      extern_args[0] = x4558;
      extern_args[1] = x4561;
      extern_args[2] = x4562;
      extern_args[3] = x4563;
      extern_args[4] = x4554;
      extern_log(ctx, cycle, "  useImm=%u, usePo2=%u, signed=%u, onesComp=%u, useRem=%u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x4564 = x4479 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:26)
      auto x4565 = x4481 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x4566 = x4564 + x4565;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":37:10)
      auto x4567 = x4566 + x4491;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":56:39)
      auto x4568 = x4567 + x48;
      {
        extern_args[0] = x4568;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4569 = extern_outs[0];
        auto x4570 = extern_outs[1];
        auto x4571 = extern_outs[2];
        auto x4572 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4569);
          reg = x4569;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4570);
          reg = x4570;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4571);
          reg = x4571;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4572);
          reg = x4572;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4573 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x4573 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4574 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x4574 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4575 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x4575 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4576 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x4576 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4568);
        reg = x4568;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4573);
        reg = x4573;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4574);
        reg = x4574;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4575);
        reg = x4575;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4576);
        reg = x4576;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x4577 = x4464 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":41:10)
      auto x4578 = x4577 + x4486;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":57:39)
      auto x4579 = x4578 + x48;
      {
        extern_args[0] = x4579;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x4580 = extern_outs[0];
        auto x4581 = extern_outs[1];
        auto x4582 = extern_outs[2];
        auto x4583 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4580);
          reg = x4580;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4581);
          reg = x4581;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4582);
          reg = x4582;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4583);
          reg = x4583;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4584 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x4584 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4585 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x4585 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4586 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x4586 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4587 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x4587 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[130 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4579);
        reg = x4579;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[131 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[132 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[133 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4584);
        reg = x4584;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[134 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4585);
        reg = x4585;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4586);
        reg = x4586;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4587);
        reg = x4587;
      }
      extern_args[0] = x4567;
      extern_args[1] = x4573;
      extern_args[2] = x4574;
      extern_args[3] = x4575;
      extern_args[4] = x4576;
      extern_args[5] = x4578;
      extern_args[6] = x4584;
      extern_args[7] = x4585;
      extern_args[8] = x4586;
      extern_args[9] = x4587;
      extern_log(ctx, cycle, "  rs1=x%u -> %w, rs2=x%u -> %w", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":63:35)
      auto x4588 = x96 - x4558;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
      auto x4589 = x4460 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:21)
      auto x4590 = x4465 * x58;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4591 = x4588 * x4584;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
      auto x4592 = x4589 + x4590;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":70:7)
      auto x4593 = x4592 + x4578;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4594 = x4558 * x4593;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x4595 = x4594 + x4591;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":65:16)
        auto x4596 = Fp(x4595.asUInt32() & x34.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":65:15)
        auto x4597 = x4596 * x53;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4597);
          reg = x4597;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":66:16)
        auto x4598 = Fp(x4595.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":66:15)
        auto x4599 = x4598 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4599);
          reg = x4599;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":67:14)
        auto x4600 = Fp(x4595.asUInt32() & x33.asUInt32());
        {
          // loc("zirgen/components/u32.cpp":193:21)
          auto x4601 = Fp(x4600.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4601);
            reg = x4601;
          }
          // loc("zirgen/components/u32.cpp":193:21)
          auto x4602 = Fp(x4600.asUInt32() & x93.asUInt32());
          // loc("zirgen/components/u32.cpp":193:20)
          auto x4603 = x4602 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4603);
            reg = x4603;
          }
          // loc("zirgen/components/u32.cpp":193:21)
          auto x4604 = Fp(x4600.asUInt32() & x78.asUInt32());
          // loc("zirgen/components/u32.cpp":193:20)
          auto x4605 = x4604 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4605);
            reg = x4605;
          }
          // loc("zirgen/components/u32.cpp":193:21)
          auto x4606 = Fp(x4600.asUInt32() & x64.asUInt32());
          // loc("zirgen/components/u32.cpp":193:20)
          auto x4607 = x4606 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4607);
            reg = x4607;
          }
          // loc("zirgen/components/u32.cpp":193:21)
          auto x4608 = Fp(x4600.asUInt32() & x62.asUInt32());
          // loc("zirgen/components/u32.cpp":193:20)
          auto x4609 = x4608 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4609);
            reg = x4609;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x4610 = arg2[190 * steps + ((cycle - 0) & mask)];
          assert(x4610 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x4611 = arg2[191 * steps + ((cycle - 0) & mask)];
          assert(x4611 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x4612 = arg2[192 * steps + ((cycle - 0) & mask)];
          assert(x4612 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x4613 = arg2[194 * steps + ((cycle - 0) & mask)];
          assert(x4613 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x4614 = arg2[193 * steps + ((cycle - 0) & mask)];
          assert(x4614 != Fp::invalid());
          // loc("zirgen/components/u32.cpp":195:42)
          auto x4615 = x4611 * x76;
          // loc("zirgen/components/u32.cpp":195:21)
          auto x4616 = x4612 * x68;
          // loc("zirgen/components/u32.cpp":196:15)
          auto x4617 = x4613 * x93;
          // loc("zirgen/components/u32.cpp":195:17)
          auto x4618 = x4616 + x96;
          // loc("zirgen/components/u32.cpp":196:15)
          auto x4619 = x4617 + x4614;
          // loc("zirgen/components/u32.cpp":195:58)
          auto x4620 = x4610 + x96;
          // loc("zirgen/components/u32.cpp":195:38)
          auto x4621 = x4615 + x96;
          // loc("zirgen/components/u32.cpp":198:13)
          auto x4622 = (x4619 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":195:16)
          auto x4623 = x4618 * x4621;
          // loc("zirgen/components/u32.cpp":195:16)
          auto x4624 = x4623 * x4620;
          // loc("zirgen/components/u32.cpp":198:34)
          auto x4625 = x4619 - x96;
          // loc("zirgen/components/u32.cpp":198:55)
          auto x4626 = x4619 - x93;
          // loc("zirgen/components/u32.cpp":198:76)
          auto x4627 = x4619 - x76;
          // loc("zirgen/components/u32.cpp":198:34)
          auto x4628 = (x4625 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":198:55)
          auto x4629 = (x4626 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":198:76)
          auto x4630 = (x4627 == 0) ? Fp(1) : Fp(0);
          // loc("zirgen/components/u32.cpp":198:9)
          auto x4631 = x4622 * x4624;
          // loc("zirgen/components/u32.cpp":198:30)
          auto x4632 = x4628 * x4624;
          // loc("zirgen/components/u32.cpp":198:51)
          auto x4633 = x4629 * x4624;
          // loc("zirgen/components/u32.cpp":198:72)
          auto x4634 = x4630 * x4624;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4631);
            reg = x4631;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4632);
            reg = x4632;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4633);
            reg = x4633;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x4634);
            reg = x4634;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4635 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x4635 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4636 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x4636 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4637 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x4637 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4638 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x4638 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4639 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x4639 != Fp::invalid());
        // loc("zirgen/components/u32.cpp":207:17)
        auto x4640 = x4636 * x93;
        // loc("zirgen/components/u32.cpp":207:17)
        auto x4641 = x4637 * x78;
        // loc("zirgen/components/u32.cpp":207:17)
        auto x4642 = x4638 * x64;
        // loc("zirgen/components/u32.cpp":207:17)
        auto x4643 = x4639 * x62;
        // loc("zirgen/components/u32.cpp":207:11)
        auto x4644 = x4635 + x4640;
        // loc("zirgen/components/u32.cpp":207:11)
        auto x4645 = x4644 + x4641;
        // loc("zirgen/components/u32.cpp":207:11)
        auto x4646 = x4645 + x4642;
        // loc("zirgen/components/u32.cpp":207:11)
        auto x4647 = x4646 + x4643;
        // loc("zirgen/components/u32.cpp":201:6)
        auto x4648 = x4647 - x4600;
        // loc("zirgen/components/u32.cpp":201:6)
        assert(x4648 == 0 && "eqz failed at: zirgen/components/u32.cpp:201");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4649 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x4649 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4650 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x4650 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4651 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x4651 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4652 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x4652 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4653 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x4653 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4654 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x4654 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4655 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x4655 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":69:23)
      auto x4656 = x4655 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":69:37)
      auto x4657 = x4649 * x58;
      // loc("zirgen/components/u32.cpp":207:17)
      auto x4658 = x4651 * x93;
      // loc("zirgen/components/u32.cpp":207:17)
      auto x4659 = x4652 * x78;
      // loc("zirgen/components/u32.cpp":207:17)
      auto x4660 = x4653 * x64;
      // loc("zirgen/components/u32.cpp":207:17)
      auto x4661 = x4654 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":69:23)
      auto x4662 = x4656 + x4657;
      // loc("zirgen/components/u32.cpp":207:11)
      auto x4663 = x4650 + x4658;
      // loc("zirgen/components/u32.cpp":207:11)
      auto x4664 = x4663 + x4659;
      // loc("zirgen/components/u32.cpp":207:11)
      auto x4665 = x4664 + x4660;
      // loc("zirgen/components/u32.cpp":207:11)
      auto x4666 = x4665 + x4661;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":69:23)
      auto x4667 = x4662 + x4666;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":69:6)
      auto x4668 = x4595 - x4667;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":69:6)
      assert(x4668 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:69");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":72:42)
      auto x4669 = x96 - x4561;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4670 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x4670 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4671 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x4671 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4672 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x4672 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/U32Po2/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4673 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x4673 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4674 = x4561 * x4670;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4675 = x4561 * x4671;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4676 = x4561 * x4672;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4677 = x4561 * x4673;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4678 = x4669 * x4584;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4679 = x4669 * x4585;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4680 = x4669 * x4586;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x4681 = x4669 * x4587;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x4682 = x4674 + x4678;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x4683 = x4675 + x4679;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x4684 = x4676 + x4680;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x4685 = x4677 + x4681;
      // loc("zirgen/components/bytes.cpp":101:3)
      {
        auto& reg = arg2[18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4682);
        reg = x4682;
      }
      // loc("zirgen/components/bytes.cpp":101:3)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4683);
        reg = x4683;
      }
      // loc("zirgen/components/bytes.cpp":101:3)
      {
        auto& reg = arg2[20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4684);
        reg = x4684;
      }
      // loc("zirgen/components/bytes.cpp":101:3)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4685);
        reg = x4685;
      }
      {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x4686 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x4686 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x4687 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x4687 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x4688 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x4688 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x4689 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x4689 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":83:16)
        auto x4690 = x4562 + x4563;
        extern_args[0] = x4573;
        extern_args[1] = x4574;
        extern_args[2] = x4575;
        extern_args[3] = x4576;
        extern_args[4] = x4686;
        extern_args[5] = x4687;
        extern_args[6] = x4688;
        extern_args[7] = x4689;
        extern_args[8] = x4690;
        extern_divide(ctx, cycle, "", extern_args, extern_outs);
        auto x4691 = extern_outs[0];
        auto x4692 = extern_outs[1];
        auto x4693 = extern_outs[2];
        auto x4694 = extern_outs[3];
        auto x4695 = extern_outs[4];
        auto x4696 = extern_outs[5];
        auto x4697 = extern_outs[6];
        auto x4698 = extern_outs[7];
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4691);
          reg = x4691;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4695);
          reg = x4695;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4692);
          reg = x4692;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4696);
          reg = x4696;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4693);
          reg = x4693;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4697);
          reg = x4697;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4694);
          reg = x4694;
        }
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4698);
          reg = x4698;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4699 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x4699 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4700 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x4700 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4701 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x4701 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4702 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x4702 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4703 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x4703 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4704 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x4704 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4705 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x4705 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4706 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x4706 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4707 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x4707 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4708 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x4708 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4709 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x4709 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x4710 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x4710 != Fp::invalid());
      extern_args[0] = x4573;
      extern_args[1] = x4574;
      extern_args[2] = x4575;
      extern_args[3] = x4576;
      extern_args[4] = x4699;
      extern_args[5] = x4700;
      extern_args[6] = x4701;
      extern_args[7] = x4702;
      extern_args[8] = x4703;
      extern_args[9] = x4704;
      extern_args[10] = x4705;
      extern_args[11] = x4706;
      extern_args[12] = x4707;
      extern_args[13] = x4708;
      extern_args[14] = x4709;
      extern_args[15] = x4710;
      extern_log(ctx, cycle, "  numer=%w, denom=%w, quot=%w, rem=%w", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x4711 = x4493 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:25)
      auto x4712 = x4495 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x4713 = x4711 + x4712;
      // loc("zirgen/circuit/rv32im/v1/edsl/decode.cpp":45:10)
      auto x4714 = x4713 + x4505;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x4715 = (x4714 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4715);
          reg = x4715;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x4716 = inv(x4714);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4716);
          reg = x4716;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4717 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x4717 != Fp::invalid());
      if (x4717 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x4714 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x4718 = x96 - x4717;
      if (x4718 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x4719 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x4719 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x4720 = x4714 * x4719;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x4721 = x4720 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x4721 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":94:37)
      auto x4722 = x4554 * x4718;
      if (x4722 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":96:16)
        auto x4723 = x4714 + x48;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4707);
          reg = x4707;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4708);
          reg = x4708;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4709);
          reg = x4709;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4710);
          reg = x4710;
        }
        {
          extern_args[0] = x4723;
          extern_args[1] = x4707;
          extern_args[2] = x4708;
          extern_args[3] = x4709;
          extern_args[4] = x4710;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4724 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x4724 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4725 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x4725 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4726 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x4726 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4727 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x4727 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4723);
          reg = x4723;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4724);
          reg = x4724;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4725);
          reg = x4725;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4726);
          reg = x4726;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4727);
          reg = x4727;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":98:43)
      auto x4728 = x96 - x4554;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":98:43)
      auto x4729 = x4728 * x4718;
      if (x4729 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":100:16)
        auto x4730 = x4714 + x48;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4703);
          reg = x4703;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4704);
          reg = x4704;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4705);
          reg = x4705;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4706);
          reg = x4706;
        }
        {
          extern_args[0] = x4730;
          extern_args[1] = x4703;
          extern_args[2] = x4704;
          extern_args[3] = x4705;
          extern_args[4] = x4706;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4731 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x4731 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4732 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x4732 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4733 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x4733 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x4734 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x4734 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4730);
          reg = x4730;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4731);
          reg = x4731;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4732);
          reg = x4732;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4733);
          reg = x4733;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4734);
          reg = x4734;
        }
      }
      if (x4717 != 0) {
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":105:17)
      auto x4735 = x963 + x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x4736 = x4735 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4737 = Fp(x4736.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4737);
          reg = x4737;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4738 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x4738 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4739 = x4736 - x4738;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4740 = x4739 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4741 = Fp(x4740.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4741);
          reg = x4741;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4742 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x4742 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4743 = x4740 - x4742;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4744 = x4743 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x4745 = Fp(x4744.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4745);
          reg = x4745;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x4746 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x4746 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x4747 = x4744 - x4746;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x4748 = x4747 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x4749 = Fp(x4748.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4749);
          reg = x4749;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4750 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x4750 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x4751 = x4748 - x4750;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x4752 = x4751 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4752);
        reg = x4752;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4753 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x4753 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x4754 = x96 - x4753;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x4755 = x4753 * x4754;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x4755);
        reg = x4755;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x4756 = x93 - x4753;
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x4757 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x4757 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x4758 = x4757 * x4756;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x4758 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":106:3)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x65);
        reg = x65;
      }
      if (x4546 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":124:49)
        auto x4759 = x4506 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":124:49)
        assert(x4759 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:124");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":124:49)
        auto x4760 = x4499 - x78;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":124:49)
        assert(x4760 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:124");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":124:49)
        auto x4761 = x4473 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":124:49)
        assert(x4761 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:124");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/OneHot/hot[1](Reg)"("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":125:49))
      auto x4762 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x4762 != Fp::invalid());
      if (x4762 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":125:49)
        auto x4763 = x4506 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":125:49)
        assert(x4763 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:125");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":125:49)
        auto x4764 = x4499 - x67;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":125:49)
        assert(x4764 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:125");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":125:49)
        auto x4765 = x4473 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":125:49)
        assert(x4765 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:125");
      }
      if (x4547 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":126:49)
        auto x4766 = x4506 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":126:49)
        assert(x4766 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:126");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":126:49)
        auto x4767 = x4499 - x66;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":126:49)
        assert(x4767 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:126");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":126:49)
        auto x4768 = x4473 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":126:49)
        assert(x4768 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:126");
      }
      if (x4548 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":127:49)
        auto x4769 = x4506 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":127:49)
        assert(x4769 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:127");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":127:49)
        auto x4770 = x4499 - x65;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":127:49)
        assert(x4770 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:127");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":127:49)
        auto x4771 = x4473 - x96;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":127:49)
        assert(x4771 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:127");
      }
      if (x4549 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":128:49)
        auto x4772 = x4506 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":128:49)
        assert(x4772 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:128");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":128:49)
        auto x4773 = x4499 - x67;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":128:49)
        assert(x4773 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:128");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":128:49)
        assert(x4473 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:128");
      }
      if (x4550 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":129:49)
        auto x4774 = x4506 - x45;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":129:49)
        assert(x4774 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:129");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":129:49)
        auto x4775 = x4499 - x67;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":129:49)
        assert(x4775 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:129");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":129:49)
        auto x4776 = x4473 - x58;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":129:49)
        assert(x4776 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:129");
      }
      if (x4551 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":130:49)
        auto x4777 = x4506 - x44;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":130:49)
        assert(x4777 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:130");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":130:49)
        auto x4778 = x4499 - x67;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":130:49)
        assert(x4778 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:130");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":130:49)
        assert(x4473 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:130");
      }
      if (x4552 != 0) {
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49)
        auto x4779 = x4506 - x44;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49)
        assert(x4779 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:131");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49)
        auto x4780 = x4499 - x67;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49)
        assert(x4780 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:131");
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49)
        auto x4781 = x4473 - x58;
        // loc("./zirgen/circuit/rv32im/v1/platform/rv32im.inl":131:49)
        assert(x4781 == 0 && "eqz failed at: ./zirgen/circuit/rv32im/v1/platform/rv32im.inl:131");
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[6](Reg)"("./zirgen/components/mux.h":49:25))
    auto x4782 = arg2[106 * steps + ((cycle - 0) & mask)];
    assert(x4782 != Fp::invalid());
    if (x4782 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4783 = arg2[126 * steps + ((cycle - 1) & mask)];
      assert(x4783 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4784 = arg2[201 * steps + ((cycle - 1) & mask)];
      assert(x4784 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4785 = arg2[205 * steps + ((cycle - 1) & mask)];
      assert(x4785 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4786 = arg2[127 * steps + ((cycle - 1) & mask)];
      assert(x4786 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4787 = arg2[202 * steps + ((cycle - 1) & mask)];
      assert(x4787 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4788 = arg2[206 * steps + ((cycle - 1) & mask)];
      assert(x4788 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4789 = arg2[128 * steps + ((cycle - 1) & mask)];
      assert(x4789 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4790 = arg2[203 * steps + ((cycle - 1) & mask)];
      assert(x4790 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4791 = arg2[207 * steps + ((cycle - 1) & mask)];
      assert(x4791 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4792 = arg2[129 * steps + ((cycle - 1) & mask)];
      assert(x4792 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4793 = arg2[204 * steps + ((cycle - 1) & mask)];
      assert(x4793 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/ALU/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4794 = arg2[208 * steps + ((cycle - 1) & mask)];
      assert(x4794 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4795 = Fp(x4783.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4795);
          reg = x4795;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4796 = Fp(x4784.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4796);
          reg = x4796;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4797 = Fp(x4783.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4798 = x4797 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4798);
          reg = x4798;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4799 = Fp(x4784.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4800 = x4799 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4800);
          reg = x4800;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4801 = Fp(x4783.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4802 = x4801 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4802);
          reg = x4802;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4803 = Fp(x4784.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4804 = x4803 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4804);
          reg = x4804;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4805 = Fp(x4783.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4806 = x4805 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4806);
          reg = x4806;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4807 = Fp(x4784.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4808 = x4807 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4808);
          reg = x4808;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4809 = Fp(x4783.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4810 = x4809 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4810);
          reg = x4810;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4811 = Fp(x4784.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4812 = x4811 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4812);
          reg = x4812;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4813 = Fp(x4783.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4814 = x4813 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4814);
          reg = x4814;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4815 = Fp(x4784.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4816 = x4815 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[153 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4816);
          reg = x4816;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4817 = Fp(x4783.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4818 = x4817 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4818);
          reg = x4818;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4819 = Fp(x4784.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4820 = x4819 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[154 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4820);
          reg = x4820;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4821 = Fp(x4783.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4822 = x4821 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4822);
          reg = x4822;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4823 = Fp(x4784.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4824 = x4823 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[155 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4824);
          reg = x4824;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4825 = Fp(x4786.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4825);
          reg = x4825;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4826 = Fp(x4787.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[156 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4826);
          reg = x4826;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4827 = Fp(x4786.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4828 = x4827 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4828);
          reg = x4828;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4829 = Fp(x4787.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4830 = x4829 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[157 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4830);
          reg = x4830;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4831 = Fp(x4786.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4832 = x4831 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4832);
          reg = x4832;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4833 = Fp(x4787.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4834 = x4833 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[158 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4834);
          reg = x4834;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4835 = Fp(x4786.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4836 = x4835 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4836);
          reg = x4836;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4837 = Fp(x4787.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4838 = x4837 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[159 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4838);
          reg = x4838;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4839 = Fp(x4786.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4840 = x4839 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4840);
          reg = x4840;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4841 = Fp(x4787.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4842 = x4841 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[160 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4842);
          reg = x4842;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4843 = Fp(x4786.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4844 = x4843 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4844);
          reg = x4844;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4845 = Fp(x4787.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4846 = x4845 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[161 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4846);
          reg = x4846;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4847 = Fp(x4786.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4848 = x4847 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4848);
          reg = x4848;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4849 = Fp(x4787.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4850 = x4849 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[162 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4850);
          reg = x4850;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4851 = Fp(x4786.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4852 = x4851 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4852);
          reg = x4852;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4853 = Fp(x4787.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4854 = x4853 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[163 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4854);
          reg = x4854;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4855 = Fp(x4789.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4855);
          reg = x4855;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4856 = Fp(x4790.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[164 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4856);
          reg = x4856;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4857 = Fp(x4789.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4858 = x4857 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4858);
          reg = x4858;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4859 = Fp(x4790.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4860 = x4859 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[165 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4860);
          reg = x4860;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4861 = Fp(x4789.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4862 = x4861 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4862);
          reg = x4862;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4863 = Fp(x4790.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4864 = x4863 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[166 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4864);
          reg = x4864;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4865 = Fp(x4789.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4866 = x4865 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4866);
          reg = x4866;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4867 = Fp(x4790.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4868 = x4867 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[167 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4868);
          reg = x4868;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4869 = Fp(x4789.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4870 = x4869 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4870);
          reg = x4870;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4871 = Fp(x4790.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4872 = x4871 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[168 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4872);
          reg = x4872;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4873 = Fp(x4789.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4874 = x4873 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4874);
          reg = x4874;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4875 = Fp(x4790.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4876 = x4875 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[169 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4876);
          reg = x4876;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4877 = Fp(x4789.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4878 = x4877 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4878);
          reg = x4878;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4879 = Fp(x4790.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4880 = x4879 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[170 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4880);
          reg = x4880;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4881 = Fp(x4789.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4882 = x4881 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4882);
          reg = x4882;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4883 = Fp(x4790.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4884 = x4883 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4884);
          reg = x4884;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4885 = Fp(x4792.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4885);
          reg = x4885;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4886 = Fp(x4793.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4886);
          reg = x4886;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4887 = Fp(x4792.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4888 = x4887 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4888);
          reg = x4888;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4889 = Fp(x4793.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4890 = x4889 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4890);
          reg = x4890;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4891 = Fp(x4792.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4892 = x4891 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4892);
          reg = x4892;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4893 = Fp(x4793.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4894 = x4893 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4894);
          reg = x4894;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4895 = Fp(x4792.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4896 = x4895 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4896);
          reg = x4896;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4897 = Fp(x4793.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4898 = x4897 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4898);
          reg = x4898;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4899 = Fp(x4792.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4900 = x4899 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4900);
          reg = x4900;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4901 = Fp(x4793.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4902 = x4901 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4902);
          reg = x4902;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4903 = Fp(x4792.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4904 = x4903 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4904);
          reg = x4904;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4905 = Fp(x4793.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4906 = x4905 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4906);
          reg = x4906;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4907 = Fp(x4792.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4908 = x4907 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4908);
          reg = x4908;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4909 = Fp(x4793.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4910 = x4909 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4910);
          reg = x4910;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:37)
        auto x4911 = Fp(x4792.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":211:36)
        auto x4912 = x4911 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4912);
          reg = x4912;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:37)
        auto x4913 = Fp(x4793.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":212:36)
        auto x4914 = x4913 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x4914);
          reg = x4914;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4915 = arg2[116 * steps + ((cycle - 0) & mask)];
      assert(x4915 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4916 = arg2[117 * steps + ((cycle - 0) & mask)];
      assert(x4916 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4917 = arg2[118 * steps + ((cycle - 0) & mask)];
      assert(x4917 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4918 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x4918 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4919 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x4919 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4920 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x4920 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4921 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x4921 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4922 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x4922 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4923 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x4923 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4924 = arg2[125 * steps + ((cycle - 0) & mask)];
      assert(x4924 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4925 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x4925 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4926 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x4926 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4927 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x4927 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4928 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x4928 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4929 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x4929 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4930 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x4930 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4931 = arg2[132 * steps + ((cycle - 0) & mask)];
      assert(x4931 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4932 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x4932 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4933 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x4933 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4934 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x4934 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4935 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x4935 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4936 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x4936 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4937 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x4937 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4938 = arg2[139 * steps + ((cycle - 0) & mask)];
      assert(x4938 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4939 = arg2[140 * steps + ((cycle - 0) & mask)];
      assert(x4939 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4940 = arg2[141 * steps + ((cycle - 0) & mask)];
      assert(x4940 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4941 = arg2[142 * steps + ((cycle - 0) & mask)];
      assert(x4941 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4942 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x4942 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4943 = arg2[144 * steps + ((cycle - 0) & mask)];
      assert(x4943 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4944 = arg2[145 * steps + ((cycle - 0) & mask)];
      assert(x4944 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4945 = arg2[146 * steps + ((cycle - 0) & mask)];
      assert(x4945 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4946 = arg2[147 * steps + ((cycle - 0) & mask)];
      assert(x4946 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4947 = arg2[148 * steps + ((cycle - 0) & mask)];
      assert(x4947 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4948 = arg2[149 * steps + ((cycle - 0) & mask)];
      assert(x4948 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4949 = arg2[150 * steps + ((cycle - 0) & mask)];
      assert(x4949 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4950 = arg2[151 * steps + ((cycle - 0) & mask)];
      assert(x4950 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4951 = arg2[152 * steps + ((cycle - 0) & mask)];
      assert(x4951 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4952 = arg2[153 * steps + ((cycle - 0) & mask)];
      assert(x4952 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4953 = arg2[154 * steps + ((cycle - 0) & mask)];
      assert(x4953 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4954 = arg2[155 * steps + ((cycle - 0) & mask)];
      assert(x4954 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4955 = arg2[156 * steps + ((cycle - 0) & mask)];
      assert(x4955 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4956 = arg2[157 * steps + ((cycle - 0) & mask)];
      assert(x4956 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4957 = arg2[158 * steps + ((cycle - 0) & mask)];
      assert(x4957 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4958 = arg2[159 * steps + ((cycle - 0) & mask)];
      assert(x4958 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4959 = arg2[160 * steps + ((cycle - 0) & mask)];
      assert(x4959 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4960 = arg2[161 * steps + ((cycle - 0) & mask)];
      assert(x4960 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4961 = arg2[162 * steps + ((cycle - 0) & mask)];
      assert(x4961 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4962 = arg2[163 * steps + ((cycle - 0) & mask)];
      assert(x4962 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4963 = arg2[164 * steps + ((cycle - 0) & mask)];
      assert(x4963 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4964 = arg2[165 * steps + ((cycle - 0) & mask)];
      assert(x4964 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4965 = arg2[166 * steps + ((cycle - 0) & mask)];
      assert(x4965 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4966 = arg2[167 * steps + ((cycle - 0) & mask)];
      assert(x4966 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4967 = arg2[168 * steps + ((cycle - 0) & mask)];
      assert(x4967 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4968 = arg2[169 * steps + ((cycle - 0) & mask)];
      assert(x4968 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4969 = arg2[170 * steps + ((cycle - 0) & mask)];
      assert(x4969 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4970 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x4970 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4971 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x4971 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4972 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x4972 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4973 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x4973 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4974 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x4974 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4975 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x4975 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4976 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x4976 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4977 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x4977 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/6(VerifyAndCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x4978 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x4978 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4979 = x4915 * x4947;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4980 = x4916 * x4948;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4981 = x4917 * x4949;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4982 = x4918 * x4950;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4983 = x4919 * x4951;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4984 = x4920 * x4952;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4985 = x4921 * x4953;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4986 = x4922 * x4954;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4987 = x4923 * x4955;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4988 = x4924 * x4956;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4989 = x4925 * x4957;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4990 = x4926 * x4958;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4991 = x4927 * x4959;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4992 = x4928 * x4960;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4993 = x4929 * x4961;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4994 = x4930 * x4962;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4995 = x4931 * x4963;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4996 = x4932 * x4964;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4997 = x4933 * x4965;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4998 = x4934 * x4966;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x4999 = x4935 * x4967;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5000 = x4936 * x4968;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5001 = x4937 * x4969;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5002 = x4938 * x4970;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5003 = x4939 * x4971;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5004 = x4940 * x4972;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5005 = x4941 * x4973;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5006 = x4942 * x4974;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5007 = x4943 * x4975;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5008 = x4944 * x4976;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5009 = x4945 * x4977;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5010 = x4946 * x4978;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5011 = x4916 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5012 = x4917 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5013 = x4918 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5014 = x4919 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5015 = x4920 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5016 = x4921 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5017 = x4922 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5018 = x4924 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5019 = x4925 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5020 = x4926 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5021 = x4927 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5022 = x4928 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5023 = x4929 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5024 = x4930 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5025 = x4932 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5026 = x4933 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5027 = x4934 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5028 = x4935 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5029 = x4936 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5030 = x4937 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5031 = x4938 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5032 = x4940 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5033 = x4941 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5034 = x4942 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5035 = x4943 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5036 = x4944 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5037 = x4945 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:41)
      auto x5038 = x4946 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5039 = x4948 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5040 = x4949 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5041 = x4950 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5042 = x4951 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5043 = x4952 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5044 = x4953 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5045 = x4954 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5046 = x4956 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5047 = x4957 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5048 = x4958 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5049 = x4959 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5050 = x4960 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5051 = x4961 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5052 = x4962 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5053 = x4964 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5054 = x4965 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5055 = x4966 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5056 = x4967 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5057 = x4968 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5058 = x4969 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5059 = x4970 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5060 = x4972 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5061 = x4973 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5062 = x4974 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5063 = x4975 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5064 = x4976 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5065 = x4977 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:41)
      auto x5066 = x4978 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5067 = x4980 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5068 = x4981 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5069 = x4982 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5070 = x4983 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5071 = x4984 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5072 = x4985 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5073 = x4986 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5074 = x4988 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5075 = x4989 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5076 = x4990 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5077 = x4991 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5078 = x4992 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5079 = x4993 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5080 = x4994 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5081 = x4996 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5082 = x4997 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5083 = x4998 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5084 = x4999 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5085 = x5000 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5086 = x5001 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5087 = x5002 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5088 = x5004 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5089 = x5005 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5090 = x5006 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5091 = x5007 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5092 = x5008 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5093 = x5009 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:41)
      auto x5094 = x5010 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5095 = x4915 + x5011;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5096 = x4923 + x5018;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5097 = x4931 + x5025;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5098 = x4939 + x5032;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5099 = x4947 + x5039;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5100 = x4955 + x5046;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5101 = x4963 + x5053;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5102 = x4971 + x5060;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5103 = x4979 + x5067;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5104 = x4987 + x5074;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5105 = x4995 + x5081;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5106 = x5003 + x5088;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5107 = x5095 + x5012;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5108 = x5096 + x5019;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5109 = x5097 + x5026;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5110 = x5098 + x5033;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5111 = x5099 + x5040;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5112 = x5100 + x5047;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5113 = x5101 + x5054;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5114 = x5102 + x5061;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5115 = x5103 + x5068;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5116 = x5104 + x5075;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5117 = x5105 + x5082;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5118 = x5106 + x5089;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5119 = x5107 + x5013;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5120 = x5108 + x5020;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5121 = x5109 + x5027;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5122 = x5110 + x5034;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5123 = x5111 + x5041;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5124 = x5112 + x5048;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5125 = x5113 + x5055;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5126 = x5114 + x5062;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5127 = x5115 + x5069;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5128 = x5116 + x5076;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5129 = x5117 + x5083;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5130 = x5118 + x5090;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5131 = x5119 + x5014;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5132 = x5120 + x5021;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5133 = x5121 + x5028;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5134 = x5122 + x5035;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5135 = x5123 + x5042;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5136 = x5124 + x5049;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5137 = x5125 + x5056;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5138 = x5126 + x5063;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5139 = x5127 + x5070;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5140 = x5128 + x5077;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5141 = x5129 + x5084;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5142 = x5130 + x5091;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5143 = x5131 + x5015;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5144 = x5132 + x5022;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5145 = x5133 + x5029;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5146 = x5134 + x5036;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5147 = x5135 + x5043;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5148 = x5136 + x5050;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5149 = x5137 + x5057;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5150 = x5138 + x5064;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5151 = x5139 + x5071;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5152 = x5140 + x5078;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5153 = x5141 + x5085;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5154 = x5142 + x5092;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5155 = x5143 + x5016;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5156 = x5144 + x5023;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5157 = x5145 + x5030;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5158 = x5146 + x5037;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5159 = x5147 + x5044;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5160 = x5148 + x5051;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5161 = x5149 + x5058;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5162 = x5150 + x5065;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5163 = x5151 + x5072;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5164 = x5152 + x5079;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5165 = x5153 + x5086;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5166 = x5154 + x5093;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5167 = x5155 + x5017;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5168 = x5159 + x5045;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5169 = x5163 + x5073;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5170 = x5156 + x5024;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5171 = x5160 + x5052;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5172 = x5164 + x5080;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5173 = x5157 + x5031;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5174 = x5161 + x5059;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5175 = x5165 + x5087;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":223:24)
      auto x5176 = x5158 + x5038;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":224:24)
      auto x5177 = x5162 + x5066;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":225:24)
      auto x5178 = x5166 + x5094;
      extern_args[0] = x4783;
      extern_args[1] = x4786;
      extern_args[2] = x4789;
      extern_args[3] = x4792;
      extern_args[4] = x5167;
      extern_args[5] = x5170;
      extern_args[6] = x5173;
      extern_args[7] = x5176;
      extern_log(ctx, cycle, "  a = %w, ax = %w", extern_args, extern_outs);
      extern_args[0] = x4784;
      extern_args[1] = x4787;
      extern_args[2] = x4790;
      extern_args[3] = x4793;
      extern_args[4] = x5168;
      extern_args[5] = x5171;
      extern_args[6] = x5174;
      extern_args[7] = x5177;
      extern_log(ctx, cycle, "  b = %w, bx = %w", extern_args, extern_outs);
      extern_args[0] = x4785;
      extern_args[1] = x4788;
      extern_args[2] = x4791;
      extern_args[3] = x4794;
      extern_args[4] = x5169;
      extern_args[5] = x5172;
      extern_args[6] = x5175;
      extern_args[7] = x5178;
      extern_log(ctx, cycle, "  c = %w, cx = %w", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":231:3)
      auto x5179 = x4783 - x5167;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":231:3)
      assert(x5179 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:231");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":231:3)
      auto x5180 = x4786 - x5170;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":231:3)
      assert(x5180 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:231");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":231:3)
      auto x5181 = x4789 - x5173;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":231:3)
      assert(x5181 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:231");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":231:3)
      auto x5182 = x4792 - x5176;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":231:3)
      assert(x5182 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:231");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":232:3)
      auto x5183 = x4784 - x5168;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":232:3)
      assert(x5183 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:232");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":232:3)
      auto x5184 = x4787 - x5171;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":232:3)
      assert(x5184 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:232");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":232:3)
      auto x5185 = x4790 - x5174;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":232:3)
      assert(x5185 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:232");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":232:3)
      auto x5186 = x4793 - x5177;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":232:3)
      assert(x5186 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:232");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":233:3)
      auto x5187 = x4785 - x5169;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":233:3)
      assert(x5187 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:233");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":233:3)
      auto x5188 = x4788 - x5172;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":233:3)
      assert(x5188 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:233");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":233:3)
      auto x5189 = x4791 - x5175;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":233:3)
      assert(x5189 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:233");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":233:3)
      auto x5190 = x4794 - x5178;
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":233:3)
      assert(x5190 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/compute.cpp:233");
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x5191 = x963 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5192 = Fp(x5191.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5192);
          reg = x5192;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5193 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x5193 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5194 = x5191 - x5193;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5195 = x5194 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5196 = Fp(x5195.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5196);
          reg = x5196;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5197 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x5197 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5198 = x5195 - x5197;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5199 = x5198 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5200 = Fp(x5199.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5200);
          reg = x5200;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5201 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x5201 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5202 = x5199 - x5201;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5203 = x5202 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x5204 = Fp(x5203.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5204);
          reg = x5204;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5205 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x5205 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x5206 = x5203 - x5205;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x5207 = x5206 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5207);
        reg = x5207;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5208 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x5208 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x5209 = x96 - x5208;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x5210 = x5208 * x5209;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5210);
        reg = x5210;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x5211 = x93 - x5208;
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x5212 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x5212 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x5213 = x5212 * x5211;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x5213 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      // loc("zirgen/circuit/rv32im/v1/edsl/compute.cpp":236:3)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x62);
        reg = x62;
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[7](Reg)"("./zirgen/components/mux.h":49:25))
    auto x5214 = arg2[107 * steps + ((cycle - 0) & mask)];
    assert(x5214 != Fp::invalid());
    if (x5214 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5215 = arg2[199 * steps + ((cycle - 1) & mask)];
      assert(x5215 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5216 = arg2[18 * steps + ((cycle - 1) & mask)];
      assert(x5216 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5217 = arg2[22 * steps + ((cycle - 1) & mask)];
      assert(x5217 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5218 = arg2[26 * steps + ((cycle - 1) & mask)];
      assert(x5218 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5219 = arg2[126 * steps + ((cycle - 1) & mask)];
      assert(x5219 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5220 = arg2[19 * steps + ((cycle - 1) & mask)];
      assert(x5220 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5221 = arg2[23 * steps + ((cycle - 1) & mask)];
      assert(x5221 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5222 = arg2[27 * steps + ((cycle - 1) & mask)];
      assert(x5222 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5223 = arg2[127 * steps + ((cycle - 1) & mask)];
      assert(x5223 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5224 = arg2[20 * steps + ((cycle - 1) & mask)];
      assert(x5224 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5225 = arg2[24 * steps + ((cycle - 1) & mask)];
      assert(x5225 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5226 = arg2[28 * steps + ((cycle - 1) & mask)];
      assert(x5226 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5227 = arg2[128 * steps + ((cycle - 1) & mask)];
      assert(x5227 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5228 = arg2[200 * steps + ((cycle - 1) & mask)];
      assert(x5228 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5229 = arg2[21 * steps + ((cycle - 1) & mask)];
      assert(x5229 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5230 = arg2[25 * steps + ((cycle - 1) & mask)];
      assert(x5230 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5231 = arg2[29 * steps + ((cycle - 1) & mask)];
      assert(x5231 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5232 = arg2[129 * steps + ((cycle - 1) & mask)];
      assert(x5232 != Fp::invalid());
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x5233 = Fp(x5232.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x5234 = x5233 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5234);
          reg = x5234;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x5235 = Fp(x5232.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x5236 = x5235 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5236);
          reg = x5236;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5237 = arg2[116 * steps + ((cycle - 0) & mask)];
      assert(x5237 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5238 = arg2[9 * steps + ((cycle - 0) & mask)];
      assert(x5238 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x5239 = x5237 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x5240 = x5238 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x5241 = x5239 + x5240;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x5242 = x5232 - x5241;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x5242 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      {
        // loc("zirgen/components/u32.cpp":126:18)
        auto x5243 = Fp(x5229.asUInt32() & x61.asUInt32());
        // loc("zirgen/components/u32.cpp":126:17)
        auto x5244 = x5243 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5244);
          reg = x5244;
        }
        // loc("zirgen/components/u32.cpp":127:25)
        auto x5245 = Fp(x5229.asUInt32() & x50.asUInt32());
        // loc("zirgen/components/u32.cpp":127:24)
        auto x5246 = x5245 * x93;
        // loc("zirgen/components/bytes.cpp":101:3)
        {
          auto& reg = arg2[10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5246);
          reg = x5246;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5247 = arg2[10 * steps + ((cycle - 0) & mask)];
      assert(x5247 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/TopBit/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5248 = arg2[117 * steps + ((cycle - 0) & mask)];
      assert(x5248 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":129:19)
      auto x5249 = x5248 * x61;
      // loc("zirgen/components/u32.cpp":129:34)
      auto x5250 = x5247 * x54;
      // loc("zirgen/components/u32.cpp":129:19)
      auto x5251 = x5249 + x5250;
      // loc("zirgen/components/u32.cpp":129:6)
      auto x5252 = x5229 - x5251;
      // loc("zirgen/components/u32.cpp":129:6)
      assert(x5252 == 0 && "eqz failed at: zirgen/components/u32.cpp:129");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":139:17)
      auto x5253 = x5215 * x5237;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":139:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5253);
        reg = x5253;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":140:29)
      auto x5254 = x96 - x5228;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":140:17)
      auto x5255 = x5215 * x5254;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":140:17)
      auto x5256 = x5255 * x5248;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":140:3)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5256);
        reg = x5256;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5257 = arg2[118 * steps + ((cycle - 0) & mask)];
      assert(x5257 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5258 = x5257 * x5219;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5259 = x5257 * x5223;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5260 = x5257 * x5227;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":143:17)
      auto x5261 = x5257 * x5228;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5262 = x5257 * x5232;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":142:47)
      auto x5263 = x96 - x5257;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5264 = x5263 * x5219;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5265 = x5263 * x5223;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5266 = x5263 * x5227;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5267 = x5263 * x5232;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5268 = x5264 + x90;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5269 = x5265 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5270 = x5266 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5271 = x5267 + x92;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5272 = x5268 - x5258;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5273 = x5269 - x5259;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5274 = x5271 - x5262;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5275 = x5272 - x5261;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5276 = x5270 - x5260;
      // loc("zirgen/components/u32.cpp":152:29)
      auto x5277 = x5273 * x90;
      // loc("zirgen/components/u32.cpp":152:15)
      auto x5278 = x5275 + x5277;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5279 = Fp(x5278.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5279);
          reg = x5279;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5280 = arg2[11 * steps + ((cycle - 0) & mask)];
      assert(x5280 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5281 = x5278 - x5280;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5282 = x5281 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5283 = Fp(x5282.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5283);
          reg = x5283;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5284 = arg2[12 * steps + ((cycle - 0) & mask)];
      assert(x5284 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5285 = x5282 - x5284;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5286 = x5285 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[72 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5286);
        reg = x5286;
      }
      // loc("zirgen/components/u32.cpp":154:41)
      auto x5287 = x5274 * x90;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5288 = arg2[72 * steps + ((cycle - 0) & mask)];
      assert(x5288 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":154:16)
      auto x5289 = x5288 + x5276;
      // loc("zirgen/components/u32.cpp":154:16)
      auto x5290 = x5289 + x5287;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5291 = Fp(x5290.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5291);
          reg = x5291;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5292 = arg2[13 * steps + ((cycle - 0) & mask)];
      assert(x5292 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5293 = x5290 - x5292;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5294 = x5293 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5295 = Fp(x5294.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5295);
          reg = x5295;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5296 = arg2[14 * steps + ((cycle - 0) & mask)];
      assert(x5296 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5297 = x5294 - x5296;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5298 = x5297 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[73 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5298);
        reg = x5298;
      }
      extern_args[0] = x5219;
      extern_args[1] = x5223;
      extern_args[2] = x5227;
      extern_args[3] = x5232;
      extern_args[4] = x5280;
      extern_args[5] = x5284;
      extern_args[6] = x5292;
      extern_args[7] = x5296;
      extern_log(ctx, cycle, "  numer = %w, numerAbs = %w", extern_args, extern_outs);
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5299 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x5299 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5300 = x5299 * x5216;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5301 = x5299 * x5220;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5302 = x5299 * x5224;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":146:17)
      auto x5303 = x5299 * x5228;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5304 = x5299 * x5229;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":145:47)
      auto x5305 = x96 - x5299;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5306 = x5305 * x5216;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5307 = x5305 * x5220;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5308 = x5305 * x5224;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5309 = x5305 * x5229;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5310 = x5306 + x90;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5311 = x5307 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5312 = x5308 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5313 = x5309 + x92;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5314 = x5310 - x5300;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5315 = x5311 - x5301;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5316 = x5313 - x5304;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5317 = x5314 - x5303;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5318 = x5312 - x5302;
      // loc("zirgen/components/u32.cpp":152:29)
      auto x5319 = x5315 * x90;
      // loc("zirgen/components/u32.cpp":152:15)
      auto x5320 = x5317 + x5319;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5321 = Fp(x5320.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5321);
          reg = x5321;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5322 = arg2[15 * steps + ((cycle - 0) & mask)];
      assert(x5322 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5323 = x5320 - x5322;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5324 = x5323 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5325 = Fp(x5324.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5325);
          reg = x5325;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5326 = arg2[16 * steps + ((cycle - 0) & mask)];
      assert(x5326 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5327 = x5324 - x5326;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5328 = x5327 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[74 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5328);
        reg = x5328;
      }
      // loc("zirgen/components/u32.cpp":154:41)
      auto x5329 = x5316 * x90;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5330 = arg2[74 * steps + ((cycle - 0) & mask)];
      assert(x5330 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":154:16)
      auto x5331 = x5330 + x5318;
      // loc("zirgen/components/u32.cpp":154:16)
      auto x5332 = x5331 + x5329;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5333 = Fp(x5332.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5333);
          reg = x5333;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5334 = arg2[17 * steps + ((cycle - 0) & mask)];
      assert(x5334 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5335 = x5332 - x5334;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5336 = x5335 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5337 = Fp(x5336.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5337);
          reg = x5337;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5338 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x5338 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5339 = x5336 - x5338;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5340 = x5339 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[75 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5340);
        reg = x5340;
      }
      extern_args[0] = x5216;
      extern_args[1] = x5220;
      extern_args[2] = x5224;
      extern_args[3] = x5229;
      extern_args[4] = x5322;
      extern_args[5] = x5326;
      extern_args[6] = x5334;
      extern_args[7] = x5338;
      extern_log(ctx, cycle, "  demom = %w, denomAbs = %w", extern_args, extern_outs);
      // loc("zirgen/components/u32.cpp":143:26)
      auto x5341 = x5326 * x90;
      // loc("zirgen/components/u32.cpp":143:12)
      auto x5342 = x5322 + x5341;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x5343 = (x5342 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5343);
          reg = x5343;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x5344 = inv(x5342);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5344);
          reg = x5344;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5345 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x5345 != Fp::invalid());
      if (x5345 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x5342 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x5346 = x96 - x5345;
      if (x5346 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5347 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x5347 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x5348 = x5342 * x5347;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x5349 = x5348 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x5349 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/components/u32.cpp":144:27)
      auto x5350 = x5338 * x90;
      // loc("zirgen/components/u32.cpp":144:13)
      auto x5351 = x5334 + x5350;
      // loc("zirgen/components/u32.cpp":144:47)
      auto x5352 = x5346 * x77;
      // loc("zirgen/components/u32.cpp":144:13)
      auto x5353 = x5351 + x5352;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x5354 = (x5353 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5354);
          reg = x5354;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x5355 = inv(x5353);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5355);
          reg = x5355;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/IsZeroU32/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5356 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x5356 != Fp::invalid());
      if (x5356 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x5353 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x5357 = x96 - x5356;
      if (x5357 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/IsZeroU32/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5358 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x5358 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x5359 = x5353 * x5358;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x5360 = x5359 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x5360 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":149:38)
      auto x5361 = x5257 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":149:64)
      auto x5362 = x5356 * x5257;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":149:38)
      auto x5363 = x5361 * x5299;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":149:16)
      auto x5364 = x5257 + x5299;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":149:16)
      auto x5365 = x5364 - x5363;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":149:16)
      auto x5366 = x5365 - x5362;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":149:3)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5366);
        reg = x5366;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5367 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x5367 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5368 = x5367 * x5217;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5369 = x5367 * x5221;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5370 = x5367 * x5225;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":152:16)
      auto x5371 = x5367 * x5228;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5372 = x5367 * x5230;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":151:46)
      auto x5373 = x96 - x5367;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5374 = x5373 * x5217;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5375 = x5373 * x5221;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5376 = x5373 * x5225;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5377 = x5373 * x5230;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5378 = x5374 + x90;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5379 = x5375 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5380 = x5376 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5381 = x5377 + x92;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5382 = x5378 - x5368;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5383 = x5379 - x5369;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5384 = x5381 - x5372;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5385 = x5382 - x5371;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5386 = x5380 - x5370;
      // loc("zirgen/components/u32.cpp":152:29)
      auto x5387 = x5383 * x90;
      // loc("zirgen/components/u32.cpp":152:15)
      auto x5388 = x5385 + x5387;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5389 = Fp(x5388.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5389);
          reg = x5389;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5390 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x5390 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5391 = x5388 - x5390;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5392 = x5391 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5393 = Fp(x5392.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5393);
          reg = x5393;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5394 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x5394 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5395 = x5392 - x5394;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5396 = x5395 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[76 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5396);
        reg = x5396;
      }
      // loc("zirgen/components/u32.cpp":154:41)
      auto x5397 = x5384 * x90;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5398 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x5398 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":154:16)
      auto x5399 = x5398 + x5386;
      // loc("zirgen/components/u32.cpp":154:16)
      auto x5400 = x5399 + x5397;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5401 = Fp(x5400.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5401);
          reg = x5401;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5402 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x5402 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5403 = x5400 - x5402;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5404 = x5403 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5405 = Fp(x5404.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5405);
          reg = x5405;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5406 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x5406 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5407 = x5404 - x5406;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5408 = x5407 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5408);
        reg = x5408;
      }
      extern_args[0] = x5217;
      extern_args[1] = x5221;
      extern_args[2] = x5225;
      extern_args[3] = x5230;
      extern_args[4] = x5390;
      extern_args[5] = x5394;
      extern_args[6] = x5402;
      extern_args[7] = x5406;
      extern_log(ctx, cycle, "  quot = %w, quotAbs = %w", extern_args, extern_outs);
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5409 = x5257 * x5218;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5410 = x5257 * x5222;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5411 = x5257 * x5226;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5412 = x5257 * x5231;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5413 = x5263 * x5218;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5414 = x5263 * x5222;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5415 = x5263 * x5226;
      // loc("zirgen/components/u32.cpp":111:20)
      auto x5416 = x5263 * x5231;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5417 = x5413 + x90;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5418 = x5414 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5419 = x5415 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5420 = x5416 + x92;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5421 = x5417 - x5409;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5422 = x5418 - x5410;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5423 = x5420 - x5412;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5424 = x5421 - x5261;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5425 = x5419 - x5411;
      // loc("zirgen/components/u32.cpp":152:29)
      auto x5426 = x5422 * x90;
      // loc("zirgen/components/u32.cpp":152:15)
      auto x5427 = x5424 + x5426;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5428 = Fp(x5427.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5428);
          reg = x5428;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5429 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x5429 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5430 = x5427 - x5429;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5431 = x5430 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5432 = Fp(x5431.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5432);
          reg = x5432;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5433 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x5433 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5434 = x5431 - x5433;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5435 = x5434 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5435);
        reg = x5435;
      }
      // loc("zirgen/components/u32.cpp":154:41)
      auto x5436 = x5423 * x90;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5437 = arg2[78 * steps + ((cycle - 0) & mask)];
      assert(x5437 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":154:16)
      auto x5438 = x5437 + x5425;
      // loc("zirgen/components/u32.cpp":154:16)
      auto x5439 = x5438 + x5436;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5440 = Fp(x5439.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5440);
          reg = x5440;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5441 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x5441 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5442 = x5439 - x5441;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5443 = x5442 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5444 = Fp(x5443.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5444);
          reg = x5444;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5445 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x5445 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5446 = x5443 - x5445;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5447 = x5446 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[79 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5447);
        reg = x5447;
      }
      extern_args[0] = x5218;
      extern_args[1] = x5222;
      extern_args[2] = x5226;
      extern_args[3] = x5231;
      extern_args[4] = x5429;
      extern_args[5] = x5433;
      extern_args[6] = x5441;
      extern_args[7] = x5445;
      extern_log(ctx, cycle, "  rem = %w, remAbs = %w", extern_args, extern_outs);
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5448 = x5322 + x90;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5449 = x5326 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5450 = x5334 + x92;
      // loc("zirgen/components/u32.cpp":95:20)
      auto x5451 = x5338 + x92;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5452 = x5448 - x96;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5453 = x5449 - x5433;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5454 = x5451 - x5445;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5455 = x5452 - x5429;
      // loc("zirgen/components/u32.cpp":103:20)
      auto x5456 = x5450 - x5441;
      // loc("zirgen/components/u32.cpp":152:29)
      auto x5457 = x5453 * x90;
      // loc("zirgen/components/u32.cpp":152:15)
      auto x5458 = x5455 + x5457;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5459 = Fp(x5458.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5459);
          reg = x5459;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5460 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x5460 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5461 = x5458 - x5460;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5462 = x5461 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5463 = Fp(x5462.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5463);
          reg = x5463;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5464 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x5464 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5465 = x5462 - x5464;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5466 = x5465 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[80 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5466);
        reg = x5466;
      }
      // loc("zirgen/components/u32.cpp":154:41)
      auto x5467 = x5454 * x90;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5468 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x5468 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":154:16)
      auto x5469 = x5468 + x5456;
      // loc("zirgen/components/u32.cpp":154:16)
      auto x5470 = x5469 + x5467;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5471 = Fp(x5470.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5471);
          reg = x5471;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5472 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x5472 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5473 = x5470 - x5472;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5474 = x5473 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5475 = Fp(x5474.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5475);
          reg = x5475;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5476 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x5476 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5477 = x5474 - x5476;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5478 = x5477 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[81 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5478);
        reg = x5478;
      }
      // loc("zirgen/components/u32.cpp":266:14)
      auto x5479 = x5390 * x5322;
      // loc("zirgen/components/u32.cpp":267:21)
      auto x5480 = x5390 * x5326;
      // loc("zirgen/components/u32.cpp":267:51)
      auto x5481 = x5394 * x5322;
      // loc("zirgen/components/u32.cpp":266:14)
      auto x5482 = x5479 + x5429;
      // loc("zirgen/components/u32.cpp":267:21)
      auto x5483 = x5480 + x5481;
      // loc("zirgen/components/u32.cpp":267:21)
      auto x5484 = x5483 + x5433;
      // loc("zirgen/components/u32.cpp":267:14)
      auto x5485 = x5484 * x90;
      // loc("zirgen/components/u32.cpp":266:14)
      auto x5486 = x5482 + x5485;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5487 = Fp(x5486.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5487);
          reg = x5487;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5488 = arg2[31 * steps + ((cycle - 0) & mask)];
      assert(x5488 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5489 = x5486 - x5488;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5490 = x5489 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5491 = Fp(x5490.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5491);
          reg = x5491;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5492 = arg2[32 * steps + ((cycle - 0) & mask)];
      assert(x5492 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5493 = x5490 - x5492;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5494 = x5493 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5495 = Fp(x5494.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5495);
          reg = x5495;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5496 = arg2[35 * steps + ((cycle - 0) & mask)];
      assert(x5496 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5497 = x5494 - x5496;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5498 = x5497 * x91;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[82 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5498);
        reg = x5498;
      }
      // loc("zirgen/components/u32.cpp":272:7)
      auto x5499 = x5394 * x5338;
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/U32MulAcc/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5500 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x5500 != Fp::invalid());
      // loc("zirgen/components/u32.cpp":270:15)
      auto x5501 = x5500 * x90;
      // loc("zirgen/components/u32.cpp":270:15)
      auto x5502 = x5501 + x5496;
      // loc("zirgen/components/u32.cpp":272:7)
      assert(x5499 == 0 && "eqz failed at: zirgen/components/u32.cpp:272");
      // loc("zirgen/components/u32.cpp":273:7)
      auto x5503 = x5402 * x5334;
      // loc("zirgen/components/u32.cpp":273:7)
      assert(x5503 == 0 && "eqz failed at: zirgen/components/u32.cpp:273");
      // loc("zirgen/components/u32.cpp":274:7)
      auto x5504 = x5406 * x5326;
      // loc("zirgen/components/u32.cpp":274:7)
      assert(x5504 == 0 && "eqz failed at: zirgen/components/u32.cpp:274");
      // loc("zirgen/components/u32.cpp":275:7)
      auto x5505 = x5402 * x5338;
      // loc("zirgen/components/u32.cpp":275:7)
      assert(x5505 == 0 && "eqz failed at: zirgen/components/u32.cpp:275");
      // loc("zirgen/components/u32.cpp":276:7)
      auto x5506 = x5406 * x5334;
      // loc("zirgen/components/u32.cpp":276:7)
      assert(x5506 == 0 && "eqz failed at: zirgen/components/u32.cpp:276");
      // loc("zirgen/components/u32.cpp":277:7)
      auto x5507 = x5406 * x5338;
      // loc("zirgen/components/u32.cpp":277:7)
      assert(x5507 == 0 && "eqz failed at: zirgen/components/u32.cpp:277");
      // loc("zirgen/components/u32.cpp":279:15)
      auto x5508 = x5402 * x5322;
      // loc("zirgen/components/u32.cpp":281:22)
      auto x5509 = x5406 * x5322;
      // loc("zirgen/components/u32.cpp":280:15)
      auto x5510 = x5390 * x5334;
      // loc("zirgen/components/u32.cpp":282:52)
      auto x5511 = x5390 * x5338;
      // loc("zirgen/components/u32.cpp":279:45)
      auto x5512 = x5394 * x5326;
      // loc("zirgen/components/u32.cpp":282:22)
      auto x5513 = x5394 * x5334;
      // loc("zirgen/components/u32.cpp":281:52)
      auto x5514 = x5402 * x5326;
      // loc("zirgen/components/u32.cpp":279:15)
      auto x5515 = x5508 + x5512;
      // loc("zirgen/components/u32.cpp":281:22)
      auto x5516 = x5509 + x5514;
      // loc("zirgen/components/u32.cpp":279:15)
      auto x5517 = x5515 + x5510;
      // loc("zirgen/components/u32.cpp":281:22)
      auto x5518 = x5516 + x5513;
      // loc("zirgen/components/u32.cpp":279:15)
      auto x5519 = x5517 + x5441;
      // loc("zirgen/components/u32.cpp":281:22)
      auto x5520 = x5518 + x5511;
      // loc("zirgen/components/u32.cpp":279:15)
      auto x5521 = x5519 + x5502;
      // loc("zirgen/components/u32.cpp":281:22)
      auto x5522 = x5520 + x5445;
      // loc("zirgen/components/u32.cpp":281:15)
      auto x5523 = x5522 * x90;
      // loc("zirgen/components/u32.cpp":279:15)
      auto x5524 = x5521 + x5523;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5525 = Fp(x5524.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5525);
          reg = x5525;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5526 = arg2[33 * steps + ((cycle - 0) & mask)];
      assert(x5526 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5527 = x5524 - x5526;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5528 = x5527 * x91;
      // loc("zirgen/components/bytes.cpp":101:3)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5528);
        reg = x5528;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
      auto x5529 = arg2[34 * steps + ((cycle - 0) & mask)];
      assert(x5529 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/7(VerifyDivideCycle)/U32Normalize/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5530 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x5530 != Fp::invalid());
      extern_args[0] = x5488;
      extern_args[1] = x5492;
      extern_args[2] = x5526;
      extern_args[3] = x5529;
      extern_args[4] = x5530;
      extern_log(ctx, cycle, "  mul->getOut() = %w, denomRemCheck->carry = %u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":161:3)
      auto x5531 = x5488 - x5280;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":161:3)
      assert(x5531 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:161");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":161:3)
      auto x5532 = x5492 - x5284;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":161:3)
      assert(x5532 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:161");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":161:3)
      auto x5533 = x5526 - x5292;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":161:3)
      assert(x5533 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:161");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":161:3)
      auto x5534 = x5529 - x5296;
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":161:3)
      assert(x5534 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:161");
      if (x5357 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":162:36)
        auto x5535 = x5530 - x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":162:36)
        assert(x5535 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:162");
      }
      if (x5356 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":164:5)
        auto x5536 = x5218 - x5219;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":164:5)
        assert(x5536 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:164");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":164:5)
        auto x5537 = x5222 - x5223;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":164:5)
        assert(x5537 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:164");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":164:5)
        auto x5538 = x5226 - x5227;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":164:5)
        assert(x5538 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:164");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":164:5)
        auto x5539 = x5231 - x5232;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":164:5)
        assert(x5539 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:164");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":165:5)
        auto x5540 = x5217 - x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":165:5)
        assert(x5540 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:165");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":165:5)
        auto x5541 = x5221 - x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":165:5)
        assert(x5541 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:165");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":165:5)
        auto x5542 = x5225 - x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":165:5)
        assert(x5542 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:165");
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":165:5)
        auto x5543 = x5230 - x92;
        // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":165:5)
        assert(x5543 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/divide.cpp:165");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x5544 = x963 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5545 = Fp(x5544.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5545);
          reg = x5545;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5546 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x5546 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5547 = x5544 - x5546;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5548 = x5547 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5549 = Fp(x5548.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5549);
          reg = x5549;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5550 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x5550 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5551 = x5548 - x5550;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5552 = x5551 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x5553 = Fp(x5552.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5553);
          reg = x5553;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x5554 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x5554 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x5555 = x5552 - x5554;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x5556 = x5555 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x5557 = Fp(x5556.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5557);
          reg = x5557;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5558 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x5558 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x5559 = x5556 - x5558;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x5560 = x5559 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5560);
        reg = x5560;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5561 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x5561 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x5562 = x96 - x5561;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x5563 = x5561 * x5562;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5563);
        reg = x5563;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x5564 = x93 - x5561;
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x5565 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x5565 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x5566 = x5565 * x5564;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x5566 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      // loc("zirgen/circuit/rv32im/v1/edsl/divide.cpp":168:3)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x62);
        reg = x62;
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[8](Reg)"("./zirgen/components/mux.h":49:25))
    auto x5567 = arg2[108 * steps + ((cycle - 0) & mask)];
    assert(x5567 != Fp::invalid());
    if (x5567 != 0) {
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":142:41)
      auto x5568 = x963 * x75;
      {
        extern_args[0] = x5568;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x5569 = extern_outs[0];
        auto x5570 = extern_outs[1];
        auto x5571 = extern_outs[2];
        auto x5572 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5569);
          reg = x5569;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5570);
          reg = x5570;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5571);
          reg = x5571;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5572);
          reg = x5572;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5573 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x5573 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5574 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x5574 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5575 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x5575 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5576 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x5576 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[116 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5568);
        reg = x5568;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[117 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[118 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[119 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5573);
        reg = x5573;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[120 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5574);
        reg = x5574;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[121 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5575);
        reg = x5575;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[122 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5576);
        reg = x5576;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":144:6)
      auto x5577 = x5573 - x30;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":144:6)
      assert(x5577 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:144");
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":145:7)
      assert(x5574 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:145");
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":146:7)
      assert(x5575 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:146");
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":147:7)
      assert(x5576 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:147");
      {
        extern_args[0] = x29;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x5578 = extern_outs[0];
        auto x5579 = extern_outs[1];
        auto x5580 = extern_outs[2];
        auto x5581 = extern_outs[3];
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5578);
          reg = x5578;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5579);
          reg = x5579;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5580);
          reg = x5580;
        }
        // loc("zirgen/components/u32.cpp":88:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5581);
          reg = x5581;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5582 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x5582 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5583 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x5583 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5584 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x5584 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5585 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x5585 != Fp::invalid());
      // loc("zirgen/components/ram.cpp":168:3)
      {
        auto& reg = arg2[123 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x29);
        reg = x29;
      }
      // loc("zirgen/components/ram.cpp":169:3)
      {
        auto& reg = arg2[124 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x949);
        reg = x949;
      }
      // loc("zirgen/components/ram.cpp":170:3)
      {
        auto& reg = arg2[125 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[126 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5582);
        reg = x5582;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[127 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5583);
        reg = x5583;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[128 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5584);
        reg = x5584;
      }
      // loc("zirgen/components/u32.cpp":34:5)
      {
        auto& reg = arg2[129 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x5585);
        reg = x5585;
      }
      {
        // loc("./zirgen/components/onehot.h":37:26)
        auto x5586 = (x5582 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[187 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5586);
          reg = x5586;
        }
        // loc("./zirgen/components/onehot.h":37:26)
        auto x5587 = x5582 - x96;
        // loc("./zirgen/components/onehot.h":37:26)
        auto x5588 = (x5587 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[188 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5588);
          reg = x5588;
        }
        // loc("./zirgen/components/onehot.h":37:26)
        auto x5589 = x5582 - x93;
        // loc("./zirgen/components/onehot.h":37:26)
        auto x5590 = (x5589 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5590);
          reg = x5590;
        }
        // loc("./zirgen/components/onehot.h":37:26)
        auto x5591 = x5582 - x76;
        // loc("./zirgen/components/onehot.h":37:26)
        auto x5592 = (x5591 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5592);
          reg = x5592;
        }
        // loc("./zirgen/components/onehot.h":37:26)
        auto x5593 = x5582 - x78;
        // loc("./zirgen/components/onehot.h":37:26)
        auto x5594 = (x5593 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/onehot.h":37:9)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5594);
          reg = x5594;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x5595 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x5595 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x5596 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x5596 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x5597 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x5597 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x5598 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x5598 != Fp::invalid());
      // loc("./zirgen/components/onehot.h":46:19)
      auto x5599 = x5596 * x93;
      // loc("./zirgen/components/onehot.h":46:19)
      auto x5600 = x5597 * x76;
      // loc("./zirgen/components/onehot.h":46:19)
      auto x5601 = x5598 * x78;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x5602 = x5595 + x5599;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x5603 = x5602 + x5600;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x5604 = x5603 + x5601;
      // loc("./zirgen/components/onehot.h":40:8)
      auto x5605 = x5604 - x5582;
      // loc("./zirgen/components/onehot.h":40:8)
      assert(x5605 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":154:47)
        auto x5606 = (x5604 == 0) ? Fp(1) : Fp(0);
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":154:47)
        auto x5607 = x96 - x5606;
        if (x5607 != 0) {
          extern_args[0] = x5582;
          extern_args[1] = x5583;
          extern_args[2] = x5584;
          extern_args[3] = x5585;
          extern_log(ctx, cycle, "  ecall, selector = %w", extern_args, extern_outs);
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/OneHot/hot[0](Reg)"("./zirgen/components/mux.h":49:25))
      auto x5608 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x5608 != Fp::invalid());
      if (x5608 != 0) {
        {
          extern_args[0] = x28;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5609 = extern_outs[0];
          auto x5610 = extern_outs[1];
          auto x5611 = extern_outs[2];
          auto x5612 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5609);
            reg = x5609;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5610);
            reg = x5610;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5611);
            reg = x5611;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5612);
            reg = x5612;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5613 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x5613 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5614 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x5614 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5615 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x5615 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5616 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x5616 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x28);
          reg = x28;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5613);
          reg = x5613;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5614);
          reg = x5614;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5615);
          reg = x5615;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5616);
          reg = x5616;
        }
        // loc("./zirgen/components/u32.h":25:12)
        auto x5617 = x5614 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x5618 = x5615 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x5619 = x5616 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x5620 = x5613 + x5617;
        // loc("./zirgen/components/u32.h":24:12)
        auto x5621 = x5620 + x5618;
        // loc("./zirgen/components/u32.h":24:12)
        auto x5622 = x5621 + x5619;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":19:18)
        auto x5623 = x5622 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":19:3)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5623);
          reg = x5623;
        }
        {
          extern_args[0] = x27;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5624 = extern_outs[0];
          auto x5625 = extern_outs[1];
          auto x5626 = extern_outs[2];
          auto x5627 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5624);
            reg = x5624;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5625);
            reg = x5625;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5626);
            reg = x5626;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5627);
            reg = x5627;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5628 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x5628 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5629 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x5629 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5630 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x5630 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5631 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x5631 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x27);
          reg = x27;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5628);
          reg = x5628;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5629);
          reg = x5629;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5630);
          reg = x5630;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5631);
          reg = x5631;
        }
        extern_args[0] = x5628;
        extern_args[1] = x5629;
        extern_args[2] = x5630;
        extern_args[3] = x5631;
        extern_args[4] = x5613;
        extern_args[5] = x5614;
        extern_args[6] = x5615;
        extern_args[7] = x5616;
        extern_log(ctx, cycle, "ECallHalt> exitCode = %w, ramAddr = %w", extern_args, extern_outs);
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":25:17)
        auto x5632 = x963 + x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x5633 = x5632 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5634 = Fp(x5633.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5634);
            reg = x5634;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5635 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x5635 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5636 = x5633 - x5635;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5637 = x5636 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5638 = Fp(x5637.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5638);
            reg = x5638;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5639 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x5639 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5640 = x5637 - x5639;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5641 = x5640 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5642 = Fp(x5641.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5642);
            reg = x5642;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5643 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x5643 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5644 = x5641 - x5643;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5645 = x5644 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x5646 = Fp(x5645.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5646);
            reg = x5646;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5647 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x5647 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x5648 = x5645 - x5647;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x5649 = x5648 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5649);
          reg = x5649;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5650 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x5650 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x5651 = x96 - x5650;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x5652 = x5650 * x5651;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5652);
          reg = x5652;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x5653 = x93 - x5650;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5654 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x5654 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x5655 = x5654 * x5653;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x5655 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":26:3)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x68);
          reg = x68;
        }
      }
      if (x5595 != 0) {
        {
          extern_args[0] = x27;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5656 = extern_outs[0];
          auto x5657 = extern_outs[1];
          auto x5658 = extern_outs[2];
          auto x5659 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5656);
            reg = x5656;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5657);
            reg = x5657;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5658);
            reg = x5658;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5659);
            reg = x5659;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5660 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x5660 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5661 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x5661 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5662 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x5662 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5663 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x5663 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x27);
          reg = x27;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5660);
          reg = x5660;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5661);
          reg = x5661;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5662);
          reg = x5662;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5663);
          reg = x5663;
        }
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5664 = (x5660 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5664);
            reg = x5664;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5665 = x5660 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5666 = (x5665 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5666);
            reg = x5666;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5667 = x5660 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5668 = (x5667 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5668);
            reg = x5668;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5669 = x5660 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5670 = (x5669 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5670);
            reg = x5670;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5671 = x5660 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5672 = (x5671 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5672);
            reg = x5672;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5673 = x5660 - x67;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5674 = (x5673 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5674);
            reg = x5674;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5675 = x5660 - x66;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5676 = (x5675 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5676);
            reg = x5676;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5677 = x5660 - x65;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x5678 = (x5677 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5678);
            reg = x5678;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5679 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x5679 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5680 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x5680 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5681 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x5681 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5682 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x5682 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[5](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5683 = arg2[197 * steps + ((cycle - 0) & mask)];
        assert(x5683 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[6](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5684 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x5684 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[7](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5685 = arg2[199 * steps + ((cycle - 0) & mask)];
        assert(x5685 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5686 = x5680 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5687 = x5681 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5688 = x5682 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5689 = x5683 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5690 = x5684 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5691 = x5685 * x65;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5692 = x5679 + x5686;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5693 = x5692 + x5687;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5694 = x5693 + x5688;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5695 = x5694 + x5689;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5696 = x5695 + x5690;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5697 = x5696 + x5691;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x5698 = x5697 - x5660;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x5698 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":41:23))
        auto x5699 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x5699 != Fp::invalid());
        if (x5699 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[0](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5700 = arg1[0];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[0](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5701 = arg1[1];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[0](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5702 = arg1[2];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[0](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5703 = arg1[3];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5700);
            reg = x5700;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5701);
            reg = x5701;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5702);
            reg = x5702;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5703);
            reg = x5703;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5704 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x5704 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5705 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x5705 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5706 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x5706 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5707 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x5707 != Fp::invalid());
          extern_args[0] = x5697;
          extern_args[1] = x5704;
          extern_args[2] = x5705;
          extern_args[3] = x5706;
          extern_args[4] = x5707;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5679 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[1](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5708 = arg1[4];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[1](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5709 = arg1[5];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[1](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5710 = arg1[6];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[1](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5711 = arg1[7];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5708);
            reg = x5708;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5709);
            reg = x5709;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5710);
            reg = x5710;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5711);
            reg = x5711;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5712 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x5712 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5713 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x5713 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5714 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x5714 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5715 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x5715 != Fp::invalid());
          extern_args[0] = x5697;
          extern_args[1] = x5712;
          extern_args[2] = x5713;
          extern_args[3] = x5714;
          extern_args[4] = x5715;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5680 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[2](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5716 = arg1[10];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[2](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5717 = arg1[11];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[2](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5718 = arg1[8];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[2](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5719 = arg1[9];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5718);
            reg = x5718;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5719);
            reg = x5719;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5716);
            reg = x5716;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5717);
            reg = x5717;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5720 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x5720 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5721 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x5721 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5722 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x5722 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5723 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x5723 != Fp::invalid());
          extern_args[0] = x5697;
          extern_args[1] = x5720;
          extern_args[2] = x5721;
          extern_args[3] = x5722;
          extern_args[4] = x5723;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5681 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[3](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5724 = arg1[12];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[3](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5725 = arg1[13];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[3](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5726 = arg1[14];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[3](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5727 = arg1[15];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5724);
            reg = x5724;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5725);
            reg = x5725;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5726);
            reg = x5726;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5727);
            reg = x5727;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5728 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x5728 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5729 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x5729 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5730 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x5730 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5731 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x5731 != Fp::invalid());
          extern_args[0] = x5697;
          extern_args[1] = x5728;
          extern_args[2] = x5729;
          extern_args[3] = x5730;
          extern_args[4] = x5731;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5682 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[4](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5732 = arg1[16];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[4](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5733 = arg1[17];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[4](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5734 = arg1[18];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[4](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5735 = arg1[19];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5732);
            reg = x5732;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5733);
            reg = x5733;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5734);
            reg = x5734;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5735);
            reg = x5735;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5736 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x5736 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5737 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x5737 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5738 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x5738 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5739 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x5739 != Fp::invalid());
          extern_args[0] = x5697;
          extern_args[1] = x5736;
          extern_args[2] = x5737;
          extern_args[3] = x5738;
          extern_args[4] = x5739;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5683 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[5](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5740 = arg1[20];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[5](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5741 = arg1[21];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[5](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5742 = arg1[22];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[5](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5743 = arg1[23];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5740);
            reg = x5740;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5741);
            reg = x5741;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5742);
            reg = x5742;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5743);
            reg = x5743;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5744 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x5744 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5745 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x5745 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5746 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x5746 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5747 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x5747 != Fp::invalid());
          extern_args[0] = x5697;
          extern_args[1] = x5744;
          extern_args[2] = x5745;
          extern_args[3] = x5746;
          extern_args[4] = x5747;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5684 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[6](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5748 = arg1[24];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[6](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5749 = arg1[25];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[6](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5750 = arg1[26];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[6](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5751 = arg1[27];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5748);
            reg = x5748;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5749);
            reg = x5749;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5750);
            reg = x5750;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5751);
            reg = x5751;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5752 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x5752 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5753 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x5753 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5754 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x5754 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5755 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x5755 != Fp::invalid());
          extern_args[0] = x5697;
          extern_args[1] = x5752;
          extern_args[2] = x5753;
          extern_args[3] = x5754;
          extern_args[4] = x5755;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        if (x5685 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[7](U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5756 = arg1[28];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[7](U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5757 = arg1[29];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[7](U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5758 = arg1[30];
          // loc("Top/mux(Mux)/body(BodyStep)/global(Global)/input(GlobalDigest)/word[7](U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5759 = arg1[31];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5756);
            reg = x5756;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5757);
            reg = x5757;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5758);
            reg = x5758;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5759);
            reg = x5759;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5760 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x5760 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5761 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x5761 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5762 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x5762 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x5763 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x5763 != Fp::invalid());
          extern_args[0] = x5697;
          extern_args[1] = x5760;
          extern_args[2] = x5761;
          extern_args[3] = x5762;
          extern_args[4] = x5763;
          extern_log(ctx, cycle, "  Read from %u: %w", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5764 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x5764 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5765 = arg2[201 * steps + ((cycle - 0) & mask)];
        assert(x5765 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5766 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x5766 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/1(ECallInput)/U32Reg/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5767 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x5767 != Fp::invalid());
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5764);
          reg = x5764;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5765);
          reg = x5765;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5766);
          reg = x5766;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5767);
          reg = x5767;
        }
        {
          extern_args[0] = x27;
          extern_args[1] = x5764;
          extern_args[2] = x5765;
          extern_args[3] = x5766;
          extern_args[4] = x5767;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5768 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x5768 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5769 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x5769 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5770 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x5770 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5771 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x5771 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x27);
          reg = x27;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5768);
          reg = x5768;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5769);
          reg = x5769;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5770);
          reg = x5770;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5771);
          reg = x5771;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":51:17)
        auto x5772 = x963 + x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x5773 = x5772 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5774 = Fp(x5773.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5774);
            reg = x5774;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5775 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x5775 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5776 = x5773 - x5775;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5777 = x5776 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5778 = Fp(x5777.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5778);
            reg = x5778;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5779 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x5779 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5780 = x5777 - x5779;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5781 = x5780 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5782 = Fp(x5781.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5782);
            reg = x5782;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5783 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x5783 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5784 = x5781 - x5783;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5785 = x5784 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x5786 = Fp(x5785.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5786);
            reg = x5786;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5787 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x5787 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x5788 = x5785 - x5787;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x5789 = x5788 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5789);
          reg = x5789;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5790 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x5790 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x5791 = x96 - x5790;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x5792 = x5790 * x5791;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5792);
          reg = x5792;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x5793 = x93 - x5790;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5794 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x5794 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x5795 = x5794 * x5793;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x5795 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":52:3)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
      }
      if (x5596 != 0) {
        {
          extern_args[0] = x27;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5796 = extern_outs[0];
          auto x5797 = extern_outs[1];
          auto x5798 = extern_outs[2];
          auto x5799 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5796);
            reg = x5796;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5797);
            reg = x5797;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5798);
            reg = x5798;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5799);
            reg = x5799;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5800 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x5800 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5801 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x5801 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5802 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x5802 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5803 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x5803 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x27);
          reg = x27;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5800);
          reg = x5800;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5801);
          reg = x5801;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5802);
          reg = x5802;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5803);
          reg = x5803;
        }
        {
          extern_args[0] = x28;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5804 = extern_outs[0];
          auto x5805 = extern_outs[1];
          auto x5806 = extern_outs[2];
          auto x5807 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5804);
            reg = x5804;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5805);
            reg = x5805;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5806);
            reg = x5806;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5807);
            reg = x5807;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5808 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x5808 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5809 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x5809 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5810 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x5810 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5811 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x5811 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x28);
          reg = x28;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5808);
          reg = x5808;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5809);
          reg = x5809;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5810);
          reg = x5810;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5811);
          reg = x5811;
        }
        {
          // loc("./zirgen/components/u32.h":25:12)
          auto x5812 = x5809 * x90;
          // loc("./zirgen/components/u32.h":26:12)
          auto x5813 = x5810 * x77;
          // loc("./zirgen/components/u32.h":27:12)
          auto x5814 = x5811 * x79;
          // loc("./zirgen/components/u32.h":24:12)
          auto x5815 = x5808 + x5812;
          // loc("./zirgen/components/u32.h":24:12)
          auto x5816 = x5815 + x5813;
          // loc("./zirgen/components/u32.h":24:12)
          auto x5817 = x5816 + x5814;
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":79:22)
          auto x5818 = Fp(x5817.asUInt32() & x76.asUInt32());
          if (x5818 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":81:26)
            auto x5819 = x5817 - x5818;
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":81:26)
            auto x5820 = x5819 + x78;
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":81:25)
            auto x5821 = x5820 * x75;
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":81:7)
            {
              auto& reg = arg2[192 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x5821);
              reg = x5821;
            }
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":82:42)
            auto x5822 = x5818 - x96;
            // loc("./zirgen/components/bits.h":68:23)
            {
              auto& reg = arg2[76 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x5822);
              reg = x5822;
            }
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":84:23)
          auto x5823 = (x5818 == 0) ? Fp(1) : Fp(0);
          if (x5823 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":85:25)
            auto x5824 = x5817 * x75;
            // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":85:7)
            {
              auto& reg = arg2[192 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x5824);
              reg = x5824;
            }
            // loc("./zirgen/components/bits.h":68:23)
            {
              auto& reg = arg2[76 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x76);
              reg = x76;
            }
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/2(ECallSoftware)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5825 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x5825 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/2(ECallSoftware)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5826 = arg2[76 * steps + ((cycle - 0) & mask)];
        assert(x5826 != Fp::invalid());
        // loc("./zirgen/components/u32.h":25:12)
        auto x5827 = x5809 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x5828 = x5810 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x5829 = x5811 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x5830 = x5808 + x5827;
        // loc("./zirgen/components/u32.h":24:12)
        auto x5831 = x5830 + x5828;
        // loc("./zirgen/components/u32.h":24:12)
        auto x5832 = x5831 + x5829;
        extern_args[0] = x5832;
        extern_args[1] = x5825;
        extern_args[2] = x5826;
        extern_log(ctx, cycle, "Calculated orig = %u, output chunks = %u, first cycle-1 = %u", extern_args, extern_outs);
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":95:7)
        auto x5833 = x5825 - x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":95:44)
        auto x5834 = x5826 + x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":95:6)
        auto x5835 = x5833 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":95:6)
        auto x5836 = x5835 + x5834;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":94:6)
        auto x5837 = x5832 - x5836;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":94:6)
        assert(x5837 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:94");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":98:31)
        auto x5838 = x5800 * x75;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5839 = Fp(x5838.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5839);
            reg = x5839;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5840 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x5840 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5841 = x5838 - x5840;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5842 = x5841 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":98:7)
        assert(x5842 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:98");
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5843 = Fp(x5838.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5843);
            reg = x5843;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5844 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x5844 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5845 = x5838 - x5844;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5846 = x5845 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":99:7)
        assert(x5846 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:99");
        {
          extern_args[0] = x5832;
          extern_syscallInit(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x5847 = x963 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5848 = Fp(x5847.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5848);
            reg = x5848;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5849 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x5849 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5850 = x5847 - x5849;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5851 = x5850 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5852 = Fp(x5851.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5852);
            reg = x5852;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5853 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x5853 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5854 = x5851 - x5853;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5855 = x5854 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5856 = Fp(x5855.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5856);
            reg = x5856;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5857 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x5857 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5858 = x5855 - x5857;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5859 = x5858 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x5860 = Fp(x5859.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5860);
            reg = x5860;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5861 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x5861 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x5862 = x5859 - x5861;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x5863 = x5862 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5863);
          reg = x5863;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5864 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x5864 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x5865 = x96 - x5864;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x5866 = x5864 * x5865;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5866);
          reg = x5866;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x5867 = x93 - x5864;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5868 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x5868 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x5869 = x5868 * x5867;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x5869 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":104:3)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x70);
          reg = x70;
        }
        extern_log(ctx, cycle, "Set next major to be ecall copy in", extern_args, extern_outs);
      }
      if (x5597 != 0) {
        {
          extern_args[0] = x27;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5870 = extern_outs[0];
          auto x5871 = extern_outs[1];
          auto x5872 = extern_outs[2];
          auto x5873 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5870);
            reg = x5870;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5871);
            reg = x5871;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5872);
            reg = x5872;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5873);
            reg = x5873;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5874 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x5874 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5875 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x5875 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5876 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x5876 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5877 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x5877 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x27);
          reg = x27;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5874);
          reg = x5874;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5875);
          reg = x5875;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5876);
          reg = x5876;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5877);
          reg = x5877;
        }
        {
          extern_args[0] = x28;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5878 = extern_outs[0];
          auto x5879 = extern_outs[1];
          auto x5880 = extern_outs[2];
          auto x5881 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5878);
            reg = x5878;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5879);
            reg = x5879;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5880);
            reg = x5880;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5881);
            reg = x5881;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5882 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x5882 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5883 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x5883 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5884 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x5884 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5885 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x5885 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x28);
          reg = x28;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5882);
          reg = x5882;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5883);
          reg = x5883;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5884);
          reg = x5884;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5885);
          reg = x5885;
        }
        {
          extern_args[0] = x26;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5886 = extern_outs[0];
          auto x5887 = extern_outs[1];
          auto x5888 = extern_outs[2];
          auto x5889 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5886);
            reg = x5886;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5887);
            reg = x5887;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5888);
            reg = x5888;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5889);
            reg = x5889;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5890 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x5890 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5891 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x5891 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5892 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x5892 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5893 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x5893 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x26);
          reg = x26;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5890);
          reg = x5890;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5891);
          reg = x5891;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5892);
          reg = x5892;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5893);
          reg = x5893;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":119:17)
        auto x5894 = x963 + x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x5895 = x5894 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5896 = Fp(x5895.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5896);
            reg = x5896;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5897 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x5897 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5898 = x5895 - x5897;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5899 = x5898 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5900 = Fp(x5899.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5900);
            reg = x5900;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5901 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x5901 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5902 = x5899 - x5901;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5903 = x5902 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5904 = Fp(x5903.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5904);
            reg = x5904;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5905 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x5905 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5906 = x5903 - x5905;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5907 = x5906 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x5908 = Fp(x5907.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5908);
            reg = x5908;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5909 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x5909 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x5910 = x5907 - x5909;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x5911 = x5910 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5911);
          reg = x5911;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5912 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x5912 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x5913 = x96 - x5912;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x5914 = x5912 * x5913;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5914);
          reg = x5914;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x5915 = x93 - x5912;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5916 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x5916 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x5917 = x5916 * x5915;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x5917 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":120:3)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x63);
          reg = x63;
        }
      }
      if (x5598 != 0) {
        {
          extern_args[0] = x28;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x5918 = extern_outs[0];
          auto x5919 = extern_outs[1];
          auto x5920 = extern_outs[2];
          auto x5921 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5918);
            reg = x5918;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5919);
            reg = x5919;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5920);
            reg = x5920;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5921);
            reg = x5921;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5922 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x5922 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5923 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x5923 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5924 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x5924 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5925 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x5925 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x28);
          reg = x28;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5922);
          reg = x5922;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5923);
          reg = x5923;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5924);
          reg = x5924;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5925);
          reg = x5925;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x5926 = x963 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5927 = Fp(x5926.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5927);
            reg = x5927;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5928 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x5928 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5929 = x5926 - x5928;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5930 = x5929 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5931 = Fp(x5930.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5931);
            reg = x5931;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5932 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x5932 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5933 = x5930 - x5932;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5934 = x5933 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x5935 = Fp(x5934.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5935);
            reg = x5935;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x5936 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x5936 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x5937 = x5934 - x5936;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x5938 = x5937 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x5939 = Fp(x5938.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x5939);
            reg = x5939;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5940 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x5940 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x5941 = x5938 - x5940;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x5942 = x5941 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5942);
          reg = x5942;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5943 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x5943 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x5944 = x96 - x5943;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x5945 = x5943 * x5944;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5945);
          reg = x5945;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x5946 = x93 - x5943;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5947 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x5947 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x5948 = x5947 * x5946;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x5948 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":132:3)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x69);
          reg = x69;
        }
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[9](Reg)"("./zirgen/components/mux.h":49:25))
    auto x5949 = arg2[109 * steps + ((cycle - 0) & mask)];
    assert(x5949 != Fp::invalid());
    if (x5949 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[8](Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":174:69))
      auto x5950 = arg2[108 * steps + ((cycle - 1) & mask)];
      assert(x5950 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[12](Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":175:77))
      auto x5951 = arg2[112 * steps + ((cycle - 1) & mask)];
      assert(x5951 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":176:35)
      auto x5952 = x5950 + x5951;
      if (x5952 != 0) {
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":178:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x78);
          reg = x78;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":180:39)
      auto x5953 = x96 - x5950;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":180:39)
      auto x5954 = x5953 - x5951;
      if (x5954 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x5955 = arg2[149 * steps + ((cycle - 1) & mask)];
        assert(x5955 != Fp::invalid());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5955);
          reg = x5955;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":183:40))
        auto x5956 = arg2[143 * steps + ((cycle - 1) & mask)];
        assert(x5956 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":183:40)
        auto x5957 = x5956 - x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":183:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5957);
          reg = x5957;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5958 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x5958 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x5959 = (x5958 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5959);
          reg = x5959;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x5960 = inv(x5958);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5960);
          reg = x5960;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x5961 = arg2[144 * steps + ((cycle - 0) & mask)];
      assert(x5961 != Fp::invalid());
      if (x5961 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x5958 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x5962 = x96 - x5961;
      if (x5962 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5963 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x5963 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x5964 = x5958 * x5963;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x5965 = x5964 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x5965 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      if (x5961 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":187:29)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x73);
          reg = x73;
        }
      }
      if (x5962 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[10](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5966 = arg2[110 * steps + ((cycle - 0) & mask)];
        assert(x5966 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[11](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5967 = arg2[111 * steps + ((cycle - 0) & mask)];
        assert(x5967 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[12](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5968 = arg2[112 * steps + ((cycle - 0) & mask)];
        assert(x5968 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[13](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5969 = arg2[113 * steps + ((cycle - 0) & mask)];
        assert(x5969 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[14](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5970 = arg2[114 * steps + ((cycle - 0) & mask)];
        assert(x5970 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[15](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x5971 = arg2[115 * steps + ((cycle - 0) & mask)];
        assert(x5971 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5972 = x2508 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5973 = x3211 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5974 = x3967 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5975 = x4418 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5976 = x4782 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5977 = x5214 * x65;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5978 = x5567 * x64;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5979 = x5949 * x63;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5980 = x5966 * x73;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5981 = x5967 * x72;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5982 = x5968 * x71;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5983 = x5969 * x70;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5984 = x5970 * x69;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x5985 = x5971 * x68;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5986 = x1724 + x5972;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5987 = x5986 + x5973;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5988 = x5987 + x5974;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5989 = x5988 + x5975;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5990 = x5989 + x5976;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5991 = x5990 + x5977;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5992 = x5991 + x5978;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5993 = x5992 + x5979;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5994 = x5993 + x5980;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5995 = x5994 + x5981;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5996 = x5995 + x5982;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5997 = x5996 + x5983;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5998 = x5997 + x5984;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x5999 = x5998 + x5985;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":188:33)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x5999);
          reg = x5999;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x6000 = x963 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x6001 = Fp(x6000.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6001);
          reg = x6001;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x6002 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x6002 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x6003 = x6000 - x6002;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x6004 = x6003 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x6005 = Fp(x6004.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6005);
          reg = x6005;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x6006 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x6006 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x6007 = x6004 - x6006;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x6008 = x6007 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x6009 = Fp(x6008.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6009);
          reg = x6009;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x6010 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x6010 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x6011 = x6008 - x6010;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x6012 = x6011 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x6013 = Fp(x6012.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6013);
          reg = x6013;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6014 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x6014 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x6015 = x6012 - x6014;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x6016 = x6015 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6016);
        reg = x6016;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6017 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x6017 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x6018 = x96 - x6017;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x6019 = x6017 * x6018;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6019);
        reg = x6019;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x6020 = x93 - x6017;
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x6021 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x6021 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x6022 = x6021 * x6020;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x6022 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6023 = arg2[149 * steps + ((cycle - 0) & mask)];
      assert(x6023 != Fp::invalid());
      extern_args[0] = x63;
      extern_args[1] = x6023;
      extern_args[2] = x5958;
      extern_log(ctx, cycle, "SHA_INIT: major = %u, minor = %u, count = %u", extern_args, extern_outs);
      if (x5950 != 0) {
        {
          extern_args[0] = x25;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6024 = extern_outs[0];
          auto x6025 = extern_outs[1];
          auto x6026 = extern_outs[2];
          auto x6027 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6024);
            reg = x6024;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6025);
            reg = x6025;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6026);
            reg = x6026;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6027);
            reg = x6027;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6028 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x6028 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6029 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x6029 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6030 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x6030 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6031 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x6031 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x25);
          reg = x25;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6028);
          reg = x6028;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6029);
          reg = x6029;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6030);
          reg = x6030;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6031);
          reg = x6031;
        }
        {
          extern_args[0] = x24;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6032 = extern_outs[0];
          auto x6033 = extern_outs[1];
          auto x6034 = extern_outs[2];
          auto x6035 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6032);
            reg = x6032;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6033);
            reg = x6033;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6034);
            reg = x6034;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6035);
            reg = x6035;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6036 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x6036 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6037 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x6037 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6038 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x6038 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6039 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x6039 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x24);
          reg = x24;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6036);
          reg = x6036;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6037);
          reg = x6037;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6038);
          reg = x6038;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6039);
          reg = x6039;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6040 = arg2[133 * steps + ((cycle - 1) & mask)];
        assert(x6040 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6041 = arg2[134 * steps + ((cycle - 1) & mask)];
        assert(x6041 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6042 = arg2[135 * steps + ((cycle - 1) & mask)];
        assert(x6042 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6043 = arg2[136 * steps + ((cycle - 1) & mask)];
        assert(x6043 != Fp::invalid());
        // loc("./zirgen/components/u32.h":25:12)
        auto x6044 = x6041 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x6045 = x6042 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x6046 = x6043 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6047 = x6040 + x6044;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6048 = x6047 + x6045;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6049 = x6048 + x6046;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":197:58)
        auto x6050 = x6049 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":197:5)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6050);
          reg = x6050;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6051 = arg2[140 * steps + ((cycle - 1) & mask)];
        assert(x6051 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6052 = arg2[141 * steps + ((cycle - 1) & mask)];
        assert(x6052 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6053 = arg2[142 * steps + ((cycle - 1) & mask)];
        assert(x6053 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6054 = arg2[143 * steps + ((cycle - 1) & mask)];
        assert(x6054 != Fp::invalid());
        // loc("./zirgen/components/u32.h":25:12)
        auto x6055 = x6052 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x6056 = x6053 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x6057 = x6054 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6058 = x6051 + x6055;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6059 = x6058 + x6056;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6060 = x6059 + x6057;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":198:57)
        auto x6061 = x6060 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":198:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6061);
          reg = x6061;
        }
        // loc("./zirgen/components/u32.h":25:12)
        auto x6062 = x6029 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x6063 = x6030 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x6064 = x6031 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6065 = x6028 + x6062;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6066 = x6065 + x6063;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6067 = x6066 + x6064;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":199:16)
        auto x6068 = x6067 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":199:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6068);
          reg = x6068;
        }
        // loc("./zirgen/components/u32.h":25:12)
        auto x6069 = x6037 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x6070 = x6038 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x6071 = x6039 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6072 = x6036 + x6069;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6073 = x6072 + x6070;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6074 = x6073 + x6071;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":200:16)
        auto x6075 = x6074 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":200:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6075);
          reg = x6075;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6076 = arg2[147 * steps + ((cycle - 1) & mask)];
        assert(x6076 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6077 = arg2[148 * steps + ((cycle - 1) & mask)];
        assert(x6077 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6078 = arg2[149 * steps + ((cycle - 1) & mask)];
        assert(x6078 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6079 = arg2[150 * steps + ((cycle - 1) & mask)];
        assert(x6079 != Fp::invalid());
        // loc("./zirgen/components/u32.h":25:12)
        auto x6080 = x6077 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x6081 = x6078 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x6082 = x6079 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6083 = x6076 + x6080;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6084 = x6083 + x6081;
        // loc("./zirgen/components/u32.h":24:12)
        auto x6085 = x6084 + x6082;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":201:5)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6085);
          reg = x6085;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":203:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6086 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x6086 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6087 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x6087 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6088 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x6088 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6089 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x6089 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6090 = arg2[146 * steps + ((cycle - 0) & mask)];
        assert(x6090 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":205:10)
        auto x6091 = x6086 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":206:10)
        auto x6092 = x6087 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":207:10)
        auto x6093 = x6088 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":208:10)
        auto x6094 = x6089 * x78;
        extern_args[0] = x6091;
        extern_args[1] = x6092;
        extern_args[2] = x6093;
        extern_args[3] = x6094;
        extern_args[4] = x6090;
        extern_log(ctx, cycle, "  FromEcall: stateOut = %10x, stateIn = %10x, data0 = %10x, data1 = %10x, repeat: %u", extern_args, extern_outs);
      }
      if (x5951 != 0) {
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/12(PageFaultCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":215:53))
        auto x6095 = arg2[116 * steps + ((cycle - 1) & mask)];
        assert(x6095 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":215:5)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6095);
          reg = x6095;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/12(PageFaultCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":216:51))
        auto x6096 = arg2[117 * steps + ((cycle - 1) & mask)];
        assert(x6096 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":216:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6096);
          reg = x6096;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/12(PageFaultCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":217:64))
        auto x6097 = arg2[120 * steps + ((cycle - 1) & mask)];
        assert(x6097 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":14:10)
        auto x6098 = x6097 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":14:10)
        auto x6099 = x6098 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":217:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6099);
          reg = x6099;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":218:64)
        auto x6100 = x6099 + x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":218:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6100);
          reg = x6100;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/12(PageFaultCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":219:49))
        auto x6101 = arg2[121 * steps + ((cycle - 1) & mask)];
        assert(x6101 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":219:5)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6101);
          reg = x6101;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/12(PageFaultCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6102 = arg2[118 * steps + ((cycle - 1) & mask)];
        assert(x6102 != Fp::invalid());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6102);
          reg = x6102;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":221:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6103 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x6103 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6104 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x6104 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6105 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x6105 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6106 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x6106 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6107 = arg2[146 * steps + ((cycle - 0) & mask)];
        assert(x6107 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":223:10)
        auto x6108 = x6103 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":224:10)
        auto x6109 = x6104 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":225:10)
        auto x6110 = x6105 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":226:10)
        auto x6111 = x6106 * x78;
        extern_args[0] = x6108;
        extern_args[1] = x6109;
        extern_args[2] = x6110;
        extern_args[3] = x6111;
        extern_args[4] = x6107;
        extern_log(ctx, cycle, "  FromPageFault: stateOut = %10x, stateIn = %10x, data0 = %10x, data1 = %10x, repeat: %u", extern_args, extern_outs);
      }
      if (x5954 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":230:42))
        auto x6112 = arg2[139 * steps + ((cycle - 1) & mask)];
        assert(x6112 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":230:5)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6112);
          reg = x6112;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":231:40))
        auto x6113 = arg2[140 * steps + ((cycle - 1) & mask)];
        assert(x6113 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":231:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6113);
          reg = x6113;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":232:36))
        auto x6114 = arg2[141 * steps + ((cycle - 1) & mask)];
        assert(x6114 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":232:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6114);
          reg = x6114;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":233:36))
        auto x6115 = arg2[142 * steps + ((cycle - 1) & mask)];
        assert(x6115 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":233:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6115);
          reg = x6115;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":234:38))
        auto x6116 = arg2[146 * steps + ((cycle - 1) & mask)];
        assert(x6116 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":234:5)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6116);
          reg = x6116;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6117 = arg2[151 * steps + ((cycle - 1) & mask)];
        assert(x6117 != Fp::invalid());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[151 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6117);
          reg = x6117;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":236:38))
        auto x6118 = arg2[152 * steps + ((cycle - 1) & mask)];
        assert(x6118 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":236:5)
        {
          auto& reg = arg2[152 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6118);
          reg = x6118;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6119 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x6119 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":239:24)
        auto x6120 = x6119 + x5958;
        {
          extern_args[0] = x6120;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6121 = extern_outs[0];
          auto x6122 = extern_outs[1];
          auto x6123 = extern_outs[2];
          auto x6124 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6121);
            reg = x6121;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6122);
            reg = x6122;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6123);
            reg = x6123;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6124);
            reg = x6124;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6125 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x6125 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6126 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x6126 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6127 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x6127 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6128 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x6128 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6120);
          reg = x6120;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6125);
          reg = x6125;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6126);
          reg = x6126;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6127);
          reg = x6127;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6128);
          reg = x6128;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":240:24)
        auto x6129 = x6120 + x78;
        {
          extern_args[0] = x6129;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6130 = extern_outs[0];
          auto x6131 = extern_outs[1];
          auto x6132 = extern_outs[2];
          auto x6133 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6130);
            reg = x6130;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6131);
            reg = x6131;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6132);
            reg = x6132;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6133);
            reg = x6133;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6134 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x6134 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6135 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x6135 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6136 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x6136 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6137 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x6137 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6129);
          reg = x6129;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6134);
          reg = x6134;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6135);
          reg = x6135;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6136);
          reg = x6136;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6137);
          reg = x6137;
        }
      }
      // loc("./zirgen/components/bits.h":27:23)
      {
        auto& reg = arg2[150 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6138 = arg2[146 * steps + ((cycle - 0) & mask)];
      assert(x6138 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x6139 = (x6138 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6139);
          reg = x6139;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x6140 = inv(x6138);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6140);
          reg = x6140;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6141 = arg2[147 * steps + ((cycle - 0) & mask)];
      assert(x6141 != Fp::invalid());
      if (x6141 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x6138 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x6142 = x96 - x6141;
      if (x6142 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6143 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x6143 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x6144 = x6138 * x6143;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x6145 = x6144 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x6145 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      {
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6146 = arg2[12 * steps + ((cycle - 0) & mask)];
      assert(x6146 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6147 = arg2[13 * steps + ((cycle - 0) & mask)];
      assert(x6147 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6148 = arg2[14 * steps + ((cycle - 0) & mask)];
      assert(x6148 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6149 = arg2[15 * steps + ((cycle - 0) & mask)];
      assert(x6149 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6150 = arg2[16 * steps + ((cycle - 0) & mask)];
      assert(x6150 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6151 = arg2[17 * steps + ((cycle - 0) & mask)];
      assert(x6151 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6152 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x6152 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6153 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x6153 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6154 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x6154 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6155 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x6155 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6156 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x6156 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6157 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x6157 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6158 = arg2[85 * steps + ((cycle - 0) & mask)];
      assert(x6158 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6159 = arg2[86 * steps + ((cycle - 0) & mask)];
      assert(x6159 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6160 = arg2[87 * steps + ((cycle - 0) & mask)];
      assert(x6160 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6161 = arg2[88 * steps + ((cycle - 0) & mask)];
      assert(x6161 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6162 = x6146 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6163 = x6147 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6164 = x6148 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6165 = x6149 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6166 = x6150 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6167 = x6151 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6168 = x6153 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6169 = x6154 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6170 = x6155 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6171 = x6156 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6172 = x6157 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6173 = x6158 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6174 = x6159 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6175 = x6160 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6176 = x6161 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6177 = x6152 + x6168;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6178 = x6177 + x6169;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6179 = x6178 + x6170;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6180 = x6179 + x6171;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6181 = x6180 + x6172;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6182 = x6181 + x6173;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6183 = x6182 + x6174;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6184 = x6183 + x6175;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6185 = x6184 + x6176;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6186 = x6185 + x6162;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6187 = x6186 + x6163;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6188 = x6187 + x6164;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6189 = x6188 + x6165;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6190 = x6189 + x6166;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6191 = x6190 + x6167;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x6192 = x95 - x6191;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x6193 = x6192 * x10;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6193);
        reg = x6193;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6194 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x6194 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6195 = Fp(x6194.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6195);
          reg = x6195;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6196 = Fp(x6194.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6197 = x6196 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6197);
          reg = x6197;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6198 = Fp(x6194.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6199 = x6198 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6199);
          reg = x6199;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6200 = Fp(x6194.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6201 = x6200 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6201);
          reg = x6201;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6202 = Fp(x6194.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6203 = x6202 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6203);
          reg = x6203;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6204 = Fp(x6194.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6205 = x6204 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6205);
          reg = x6205;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6206 = Fp(x6194.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6207 = x6206 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6207);
          reg = x6207;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6208 = Fp(x6194.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6209 = x6208 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6209);
          reg = x6209;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6210 = Fp(x6194.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6211 = x6210 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6211);
          reg = x6211;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6212 = Fp(x6194.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6213 = x6212 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6213);
          reg = x6213;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6214 = Fp(x6194.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6215 = x6214 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6215);
          reg = x6215;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6216 = Fp(x6194.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6217 = x6216 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6217);
          reg = x6217;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6218 = Fp(x6194.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6219 = x6218 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6219);
          reg = x6219;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6220 = Fp(x6194.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6221 = x6220 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6221);
          reg = x6221;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6222 = Fp(x6194.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6223 = x6222 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6223);
          reg = x6223;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6224 = Fp(x6194.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6225 = x6224 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6225);
          reg = x6225;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6226 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x6226 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6227 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x6227 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6228 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x6228 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6229 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x6229 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6230 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x6230 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6231 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x6231 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6232 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x6232 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6233 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x6233 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6234 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x6234 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6235 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x6235 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6236 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x6236 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6237 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x6237 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6238 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x6238 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6239 = arg2[31 * steps + ((cycle - 0) & mask)];
      assert(x6239 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6240 = arg2[32 * steps + ((cycle - 0) & mask)];
      assert(x6240 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6241 = arg2[33 * steps + ((cycle - 0) & mask)];
      assert(x6241 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6242 = x6227 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6243 = x6228 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6244 = x6229 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6245 = x6230 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6246 = x6231 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6247 = x6232 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6248 = x6233 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6249 = x6234 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6250 = x6235 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6251 = x6236 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6252 = x6237 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6253 = x6238 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6254 = x6239 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6255 = x6240 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6256 = x6241 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6257 = x6226 + x6242;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6258 = x6257 + x6243;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6259 = x6258 + x6244;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6260 = x6259 + x6245;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6261 = x6260 + x6246;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6262 = x6261 + x6247;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6263 = x6262 + x6248;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6264 = x6263 + x6249;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6265 = x6264 + x6250;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6266 = x6265 + x6251;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6267 = x6266 + x6252;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6268 = x6267 + x6253;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6269 = x6268 + x6254;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6270 = x6269 + x6255;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6271 = x6270 + x6256;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x6272 = x6194 - x6271;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x6273 = x6272 * x10;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6273);
        reg = x6273;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6274 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x6274 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6275 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x6275 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6276 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x6276 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6277 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x6277 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:61)
      auto x6278 = x6274 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:26)
      auto x6279 = x6276 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:46)
      auto x6280 = x6275 + x6278;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:11)
      auto x6281 = x6277 + x6279;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6282 = Fp(x6281.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[159 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6282);
          reg = x6282;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6283 = Fp(x6281.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6284 = x6283 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[160 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6284);
          reg = x6284;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6285 = Fp(x6281.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6286 = x6285 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[161 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6286);
          reg = x6286;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6287 = Fp(x6281.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6288 = x6287 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[162 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6288);
          reg = x6288;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6289 = Fp(x6281.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6290 = x6289 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[163 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6290);
          reg = x6290;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6291 = Fp(x6281.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6292 = x6291 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[164 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6292);
          reg = x6292;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6293 = Fp(x6281.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6294 = x6293 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[165 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6294);
          reg = x6294;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6295 = Fp(x6281.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6296 = x6295 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[166 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6296);
          reg = x6296;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6297 = Fp(x6281.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6298 = x6297 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[167 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6298);
          reg = x6298;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6299 = Fp(x6281.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6300 = x6299 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[168 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6300);
          reg = x6300;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6301 = Fp(x6281.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6302 = x6301 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[169 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6302);
          reg = x6302;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6303 = Fp(x6281.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6304 = x6303 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[170 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6304);
          reg = x6304;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6305 = Fp(x6281.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6306 = x6305 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6306);
          reg = x6306;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6307 = Fp(x6281.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6308 = x6307 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6308);
          reg = x6308;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6309 = Fp(x6281.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6310 = x6309 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6310);
          reg = x6310;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6311 = Fp(x6281.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6312 = x6311 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6312);
          reg = x6312;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6313 = arg2[159 * steps + ((cycle - 0) & mask)];
      assert(x6313 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6314 = arg2[160 * steps + ((cycle - 0) & mask)];
      assert(x6314 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6315 = arg2[161 * steps + ((cycle - 0) & mask)];
      assert(x6315 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6316 = arg2[162 * steps + ((cycle - 0) & mask)];
      assert(x6316 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6317 = arg2[163 * steps + ((cycle - 0) & mask)];
      assert(x6317 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6318 = arg2[164 * steps + ((cycle - 0) & mask)];
      assert(x6318 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6319 = arg2[165 * steps + ((cycle - 0) & mask)];
      assert(x6319 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6320 = arg2[166 * steps + ((cycle - 0) & mask)];
      assert(x6320 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6321 = arg2[167 * steps + ((cycle - 0) & mask)];
      assert(x6321 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6322 = arg2[168 * steps + ((cycle - 0) & mask)];
      assert(x6322 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6323 = arg2[169 * steps + ((cycle - 0) & mask)];
      assert(x6323 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6324 = arg2[170 * steps + ((cycle - 0) & mask)];
      assert(x6324 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6325 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x6325 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6326 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x6326 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6327 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x6327 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6328 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x6328 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6329 = x6314 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6330 = x6315 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6331 = x6316 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6332 = x6317 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6333 = x6318 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6334 = x6319 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6335 = x6320 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6336 = x6321 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6337 = x6322 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6338 = x6323 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6339 = x6324 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6340 = x6325 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6341 = x6326 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6342 = x6327 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6343 = x6328 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6344 = x6313 + x6329;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6345 = x6344 + x6330;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6346 = x6345 + x6331;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6347 = x6346 + x6332;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6348 = x6347 + x6333;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6349 = x6348 + x6334;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6350 = x6349 + x6335;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6351 = x6350 + x6336;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6352 = x6351 + x6337;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6353 = x6352 + x6338;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6354 = x6353 + x6339;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6355 = x6354 + x6340;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6356 = x6355 + x6341;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6357 = x6356 + x6342;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6358 = x6357 + x6343;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x6359 = x6281 - x6358;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x6360 = x6359 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":122:26)
        auto x6361 = Fp(x6360.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6361);
          reg = x6361;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6362 = arg2[73 * steps + ((cycle - 0) & mask)];
      assert(x6362 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:20)
      auto x6363 = x6360 - x6362;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:19)
      auto x6364 = x6363 * x75;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:20)
      auto x6365 = x96 - x6364;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
      auto x6366 = x6364 * x6365;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
      assert(x6366 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:124");
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":125:32)
      auto x6367 = x6280 + x6360;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6368 = Fp(x6367.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6368);
          reg = x6368;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6369 = Fp(x6367.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6370 = x6369 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6370);
          reg = x6370;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6371 = Fp(x6367.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6372 = x6371 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6372);
          reg = x6372;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6373 = Fp(x6367.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6374 = x6373 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6374);
          reg = x6374;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6375 = Fp(x6367.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6376 = x6375 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6376);
          reg = x6376;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6377 = Fp(x6367.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6378 = x6377 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6378);
          reg = x6378;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6379 = Fp(x6367.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6380 = x6379 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6380);
          reg = x6380;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6381 = Fp(x6367.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6382 = x6381 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6382);
          reg = x6382;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6383 = Fp(x6367.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6384 = x6383 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[183 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6384);
          reg = x6384;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6385 = Fp(x6367.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6386 = x6385 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[184 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6386);
          reg = x6386;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6387 = Fp(x6367.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6388 = x6387 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[185 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6388);
          reg = x6388;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6389 = Fp(x6367.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6390 = x6389 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[186 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6390);
          reg = x6390;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6391 = Fp(x6367.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6392 = x6391 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[187 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6392);
          reg = x6392;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6393 = Fp(x6367.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6394 = x6393 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[188 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6394);
          reg = x6394;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6395 = Fp(x6367.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6396 = x6395 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6396);
          reg = x6396;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6397 = Fp(x6367.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6398 = x6397 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6398);
          reg = x6398;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6399 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x6399 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6400 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x6400 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6401 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x6401 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6402 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x6402 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6403 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x6403 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6404 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x6404 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6405 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x6405 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6406 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x6406 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6407 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x6407 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6408 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x6408 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6409 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x6409 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6410 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x6410 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6411 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x6411 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6412 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x6412 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6413 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x6413 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6414 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x6414 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6415 = x6400 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6416 = x6401 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6417 = x6402 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6418 = x6403 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6419 = x6404 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6420 = x6405 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6421 = x6406 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6422 = x6407 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6423 = x6408 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6424 = x6409 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6425 = x6410 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6426 = x6411 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6427 = x6412 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6428 = x6413 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6429 = x6414 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6430 = x6399 + x6415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6431 = x6430 + x6416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6432 = x6431 + x6417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6433 = x6432 + x6418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6434 = x6433 + x6419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6435 = x6434 + x6420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6436 = x6435 + x6421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6437 = x6436 + x6422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6438 = x6437 + x6423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6439 = x6438 + x6424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6440 = x6439 + x6425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6441 = x6440 + x6426;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6442 = x6441 + x6427;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6443 = x6442 + x6428;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6444 = x6443 + x6429;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x6445 = x6367 - x6444;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x6446 = x6445 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":126:27)
        auto x6447 = Fp(x6446.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6447);
          reg = x6447;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6448 = arg2[74 * steps + ((cycle - 0) & mask)];
      assert(x6448 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:21)
      auto x6449 = x6446 - x6448;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:20)
      auto x6450 = x6449 * x75;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:21)
      auto x6451 = x96 - x6450;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
      auto x6452 = x6450 * x6451;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
      assert(x6452 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:128");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6453 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x6453 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6454 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x6454 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6455 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x6455 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6456 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x6456 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:61)
      auto x6457 = x6453 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:26)
      auto x6458 = x6455 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:46)
      auto x6459 = x6454 + x6457;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:11)
      auto x6460 = x6456 + x6458;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6461 = Fp(x6460.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6461);
          reg = x6461;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6462 = Fp(x6460.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6463 = x6462 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6463);
          reg = x6463;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6464 = Fp(x6460.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6465 = x6464 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6465);
          reg = x6465;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6466 = Fp(x6460.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6467 = x6466 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6467);
          reg = x6467;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6468 = Fp(x6460.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6469 = x6468 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6469);
          reg = x6469;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6470 = Fp(x6460.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6471 = x6470 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6471);
          reg = x6471;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6472 = Fp(x6460.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6473 = x6472 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6473);
          reg = x6473;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6474 = Fp(x6460.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6475 = x6474 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6475);
          reg = x6475;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6476 = Fp(x6460.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6477 = x6476 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6477);
          reg = x6477;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6478 = Fp(x6460.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6479 = x6478 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6479);
          reg = x6479;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6480 = Fp(x6460.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6481 = x6480 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6481);
          reg = x6481;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6482 = Fp(x6460.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6483 = x6482 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6483);
          reg = x6483;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6484 = Fp(x6460.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6485 = x6484 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[203 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6485);
          reg = x6485;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6486 = Fp(x6460.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6487 = x6486 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[204 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6487);
          reg = x6487;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6488 = Fp(x6460.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6489 = x6488 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[205 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6489);
          reg = x6489;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6490 = Fp(x6460.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6491 = x6490 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[206 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6491);
          reg = x6491;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6492 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x6492 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6493 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x6493 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6494 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x6494 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6495 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x6495 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6496 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x6496 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6497 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x6497 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6498 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x6498 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6499 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x6499 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6500 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x6500 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6501 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x6501 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6502 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x6502 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6503 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x6503 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6504 = arg2[203 * steps + ((cycle - 0) & mask)];
      assert(x6504 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6505 = arg2[204 * steps + ((cycle - 0) & mask)];
      assert(x6505 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6506 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x6506 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6507 = arg2[206 * steps + ((cycle - 0) & mask)];
      assert(x6507 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6508 = x6493 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6509 = x6494 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6510 = x6495 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6511 = x6496 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6512 = x6497 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6513 = x6498 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6514 = x6499 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6515 = x6500 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6516 = x6501 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6517 = x6502 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6518 = x6503 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6519 = x6504 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6520 = x6505 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6521 = x6506 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6522 = x6507 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6523 = x6492 + x6508;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6524 = x6523 + x6509;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6525 = x6524 + x6510;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6526 = x6525 + x6511;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6527 = x6526 + x6512;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6528 = x6527 + x6513;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6529 = x6528 + x6514;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6530 = x6529 + x6515;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6531 = x6530 + x6516;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6532 = x6531 + x6517;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6533 = x6532 + x6518;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6534 = x6533 + x6519;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6535 = x6534 + x6520;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6536 = x6535 + x6521;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6537 = x6536 + x6522;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x6538 = x6460 - x6537;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x6539 = x6538 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":122:26)
        auto x6540 = Fp(x6539.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6540);
          reg = x6540;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6541 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x6541 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:20)
      auto x6542 = x6539 - x6541;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:19)
      auto x6543 = x6542 * x75;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:20)
      auto x6544 = x96 - x6543;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
      auto x6545 = x6543 * x6544;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
      assert(x6545 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:124");
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":125:32)
      auto x6546 = x6459 + x6539;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6547 = Fp(x6546.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6547);
          reg = x6547;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6548 = Fp(x6546.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6549 = x6548 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6549);
          reg = x6549;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6550 = Fp(x6546.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6551 = x6550 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6551);
          reg = x6551;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6552 = Fp(x6546.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6553 = x6552 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[210 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6553);
          reg = x6553;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6554 = Fp(x6546.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6555 = x6554 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[211 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6555);
          reg = x6555;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6556 = Fp(x6546.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6557 = x6556 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[212 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6557);
          reg = x6557;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6558 = Fp(x6546.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6559 = x6558 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[213 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6559);
          reg = x6559;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6560 = Fp(x6546.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6561 = x6560 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[214 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6561);
          reg = x6561;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6562 = Fp(x6546.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6563 = x6562 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6563);
          reg = x6563;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6564 = Fp(x6546.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6565 = x6564 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6565);
          reg = x6565;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6566 = Fp(x6546.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6567 = x6566 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6567);
          reg = x6567;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6568 = Fp(x6546.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6569 = x6568 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6569);
          reg = x6569;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6570 = Fp(x6546.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6571 = x6570 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6571);
          reg = x6571;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6572 = Fp(x6546.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6573 = x6572 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[220 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6573);
          reg = x6573;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6574 = Fp(x6546.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6575 = x6574 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[221 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6575);
          reg = x6575;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6576 = Fp(x6546.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6577 = x6576 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[222 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6577);
          reg = x6577;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6578 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x6578 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6579 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x6579 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6580 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x6580 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6581 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x6581 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6582 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x6582 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6583 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x6583 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6584 = arg2[213 * steps + ((cycle - 0) & mask)];
      assert(x6584 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6585 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x6585 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6586 = arg2[215 * steps + ((cycle - 0) & mask)];
      assert(x6586 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6587 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x6587 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6588 = arg2[217 * steps + ((cycle - 0) & mask)];
      assert(x6588 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6589 = arg2[218 * steps + ((cycle - 0) & mask)];
      assert(x6589 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6590 = arg2[219 * steps + ((cycle - 0) & mask)];
      assert(x6590 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6591 = arg2[220 * steps + ((cycle - 0) & mask)];
      assert(x6591 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6592 = arg2[221 * steps + ((cycle - 0) & mask)];
      assert(x6592 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6593 = arg2[222 * steps + ((cycle - 0) & mask)];
      assert(x6593 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6594 = x6579 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6595 = x6580 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6596 = x6581 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6597 = x6582 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6598 = x6583 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6599 = x6584 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6600 = x6585 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6601 = x6586 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6602 = x6587 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6603 = x6588 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6604 = x6589 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6605 = x6590 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6606 = x6591 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6607 = x6592 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6608 = x6593 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6609 = x6578 + x6594;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6610 = x6609 + x6595;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6611 = x6610 + x6596;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6612 = x6611 + x6597;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6613 = x6612 + x6598;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6614 = x6613 + x6599;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6615 = x6614 + x6600;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6616 = x6615 + x6601;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6617 = x6616 + x6602;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6618 = x6617 + x6603;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6619 = x6618 + x6604;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6620 = x6619 + x6605;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6621 = x6620 + x6606;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6622 = x6621 + x6607;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6623 = x6622 + x6608;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x6624 = x6546 - x6623;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x6625 = x6624 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":126:27)
        auto x6626 = Fp(x6625.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6626);
          reg = x6626;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6627 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x6627 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:21)
      auto x6628 = x6625 - x6627;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:20)
      auto x6629 = x6628 * x75;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:21)
      auto x6630 = x96 - x6629;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
      auto x6631 = x6629 * x6630;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
      assert(x6631 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:128");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[10](Reg)"("./zirgen/components/mux.h":49:25))
    auto x6632 = arg2[110 * steps + ((cycle - 0) & mask)];
    assert(x6632 != Fp::invalid());
    if (x6632 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[9](Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":262:70))
      auto x6633 = arg2[109 * steps + ((cycle - 1) & mask)];
      assert(x6633 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[11](Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":263:70))
      auto x6634 = arg2[111 * steps + ((cycle - 1) & mask)];
      assert(x6634 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":264:29)
      auto x6635 = x6633 + x6634;
      if (x6635 != 0) {
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":266:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x65);
          reg = x65;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":268:33)
      auto x6636 = x96 - x6633;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":268:33)
      auto x6637 = x6636 - x6634;
      if (x6637 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6638 = arg2[144 * steps + ((cycle - 1) & mask)];
        assert(x6638 != Fp::invalid());
        if (x6638 != 0) {
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":272:7)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x65);
            reg = x65;
          }
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":274:20)
        auto x6639 = x96 - x6638;
        if (x6639 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x6640 = arg2[149 * steps + ((cycle - 1) & mask)];
          assert(x6640 != Fp::invalid());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6640);
            reg = x6640;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":277:42))
          auto x6641 = arg2[143 * steps + ((cycle - 1) & mask)];
          assert(x6641 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":277:42)
          auto x6642 = x6641 - x96;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":277:7)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6642);
            reg = x6642;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6643 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x6643 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x6644 = (x6643 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6644);
          reg = x6644;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x6645 = inv(x6643);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6645);
          reg = x6645;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6646 = arg2[144 * steps + ((cycle - 0) & mask)];
      assert(x6646 != Fp::invalid());
      if (x6646 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x6643 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x6647 = x96 - x6646;
      if (x6647 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6648 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x6648 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x6649 = x6643 * x6648;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x6650 = x6649 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x6650 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      if (x6646 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6651 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x6651 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":284:17)
        auto x6652 = x96 - x6651;
        if (x6652 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":284:21)
          {
            auto& reg = arg2[99 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x73);
            reg = x73;
          }
        }
        if (x6651 != 0) {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":285:17)
          {
            auto& reg = arg2[99 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x72);
            reg = x72;
          }
        }
      }
      if (x6647 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[11](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6653 = arg2[111 * steps + ((cycle - 0) & mask)];
        assert(x6653 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[12](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6654 = arg2[112 * steps + ((cycle - 0) & mask)];
        assert(x6654 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[13](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6655 = arg2[113 * steps + ((cycle - 0) & mask)];
        assert(x6655 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[14](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6656 = arg2[114 * steps + ((cycle - 0) & mask)];
        assert(x6656 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[15](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6657 = arg2[115 * steps + ((cycle - 0) & mask)];
        assert(x6657 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6658 = x2508 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6659 = x3211 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6660 = x3967 * x78;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6661 = x4418 * x67;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6662 = x4782 * x66;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6663 = x5214 * x65;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6664 = x5567 * x64;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6665 = x5949 * x63;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6666 = x6632 * x73;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6667 = x6653 * x72;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6668 = x6654 * x71;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6669 = x6655 * x70;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6670 = x6656 * x69;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x6671 = x6657 * x68;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6672 = x1724 + x6658;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6673 = x6672 + x6659;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6674 = x6673 + x6660;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6675 = x6674 + x6661;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6676 = x6675 + x6662;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6677 = x6676 + x6663;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6678 = x6677 + x6664;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6679 = x6678 + x6665;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6680 = x6679 + x6666;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6681 = x6680 + x6667;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6682 = x6681 + x6668;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6683 = x6682 + x6669;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6684 = x6683 + x6670;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x6685 = x6684 + x6671;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":287:33)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6685);
          reg = x6685;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x6686 = x963 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x6687 = Fp(x6686.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6687);
          reg = x6687;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x6688 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x6688 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x6689 = x6686 - x6688;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x6690 = x6689 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x6691 = Fp(x6690.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6691);
          reg = x6691;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x6692 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x6692 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x6693 = x6690 - x6692;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x6694 = x6693 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x6695 = Fp(x6694.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6695);
          reg = x6695;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x6696 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x6696 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x6697 = x6694 - x6696;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x6698 = x6697 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x6699 = Fp(x6698.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6699);
          reg = x6699;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6700 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x6700 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x6701 = x6698 - x6700;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x6702 = x6701 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6702);
        reg = x6702;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6703 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x6703 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x6704 = x96 - x6703;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x6705 = x6703 * x6704;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6705);
        reg = x6705;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x6706 = x93 - x6703;
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x6707 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x6707 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x6708 = x6707 * x6706;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x6708 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":290:40))
      auto x6709 = arg2[139 * steps + ((cycle - 1) & mask)];
      assert(x6709 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":290:3)
      {
        auto& reg = arg2[139 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6709);
        reg = x6709;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":291:38))
      auto x6710 = arg2[140 * steps + ((cycle - 1) & mask)];
      assert(x6710 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":291:3)
      {
        auto& reg = arg2[140 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6710);
        reg = x6710;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":292:34))
      auto x6711 = arg2[141 * steps + ((cycle - 1) & mask)];
      assert(x6711 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":292:3)
      {
        auto& reg = arg2[141 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6711);
        reg = x6711;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":293:34))
      auto x6712 = arg2[142 * steps + ((cycle - 1) & mask)];
      assert(x6712 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":293:3)
      {
        auto& reg = arg2[142 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6712);
        reg = x6712;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":294:36))
      auto x6713 = arg2[146 * steps + ((cycle - 1) & mask)];
      assert(x6713 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":294:3)
      {
        auto& reg = arg2[146 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6713);
        reg = x6713;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6714 = arg2[151 * steps + ((cycle - 1) & mask)];
      assert(x6714 != Fp::invalid());
      // loc("./zirgen/components/bits.h":27:23)
      {
        auto& reg = arg2[151 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6714);
        reg = x6714;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":296:36))
      auto x6715 = arg2[152 * steps + ((cycle - 1) & mask)];
      assert(x6715 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":296:3)
      {
        auto& reg = arg2[152 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6715);
        reg = x6715;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6716 = arg2[146 * steps + ((cycle - 0) & mask)];
      assert(x6716 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x6717 = (x6716 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6717);
          reg = x6717;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x6718 = inv(x6716);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6718);
          reg = x6718;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6719 = arg2[147 * steps + ((cycle - 0) & mask)];
      assert(x6719 != Fp::invalid());
      if (x6719 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x6716 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x6720 = x96 - x6719;
      if (x6720 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x6721 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x6721 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x6722 = x6716 * x6721;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x6723 = x6722 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x6723 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("./zirgen/components/bits.h":27:23)
      {
        auto& reg = arg2[150 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x6724 = arg2[139 * steps + ((cycle - 0) & mask)];
      assert(x6724 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x6725 = arg2[141 * steps + ((cycle - 0) & mask)];
      assert(x6725 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x6726 = arg2[142 * steps + ((cycle - 0) & mask)];
      assert(x6726 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6727 = arg2[149 * steps + ((cycle - 0) & mask)];
      assert(x6727 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":304:8)
      auto x6728 = x6725 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":305:8)
      auto x6729 = x6726 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":306:8)
      auto x6730 = x6724 * x78;
      extern_args[0] = x73;
      extern_args[1] = x6727;
      extern_args[2] = x6643;
      extern_args[3] = x6728;
      extern_args[4] = x6729;
      extern_args[5] = x6730;
      extern_args[6] = x6716;
      extern_log(ctx, cycle, "SHA_LOAD: major = %u, minor = %u, count = %u, data0 = %10x, data1 = %10x, state = %10x, repeat: %u", extern_args, extern_outs);
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":310:15)
      auto x6731 = x96 - x6727;
      if (x6731 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":311:43))
        auto x6732 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x6732 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":311:24)
        auto x6733 = x6725 + x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":311:24)
        auto x6734 = x6733 - x6643;
        {
          extern_args[0] = x6734;
          extern_args[1] = x6732;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6735 = extern_outs[0];
          auto x6736 = extern_outs[1];
          auto x6737 = extern_outs[2];
          auto x6738 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6735);
            reg = x6735;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6736);
            reg = x6736;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6737);
            reg = x6737;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6738);
            reg = x6738;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6739 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x6739 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6740 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x6740 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6741 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x6741 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6742 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x6742 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6734);
          reg = x6734;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6732);
          reg = x6732;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6739);
          reg = x6739;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6740);
          reg = x6740;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6741);
          reg = x6741;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6742);
          reg = x6742;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":312:24)
        auto x6743 = x9 - x6643;
        {
          extern_args[0] = x6743;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6744 = extern_outs[0];
          auto x6745 = extern_outs[1];
          auto x6746 = extern_outs[2];
          auto x6747 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6744);
            reg = x6744;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6745);
            reg = x6745;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6746);
            reg = x6746;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6747);
            reg = x6747;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6748 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x6748 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6749 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x6749 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6750 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x6750 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6751 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x6751 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6743);
          reg = x6743;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6748);
          reg = x6748;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6749);
          reg = x6749;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6750);
          reg = x6750;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6751);
          reg = x6751;
        }
      }
      if (x6727 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":315:43))
        auto x6752 = arg2[152 * steps + ((cycle - 0) & mask)];
        assert(x6752 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":315:24)
        auto x6753 = x6726 + x65;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":315:24)
        auto x6754 = x6753 - x6643;
        {
          extern_args[0] = x6754;
          extern_args[1] = x6752;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6755 = extern_outs[0];
          auto x6756 = extern_outs[1];
          auto x6757 = extern_outs[2];
          auto x6758 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6755);
            reg = x6755;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6756);
            reg = x6756;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6757);
            reg = x6757;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6758);
            reg = x6758;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6759 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x6759 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6760 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x6760 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6761 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x6761 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6762 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x6762 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6754);
          reg = x6754;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6752);
          reg = x6752;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6759);
          reg = x6759;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6760);
          reg = x6760;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6761);
          reg = x6761;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6762);
          reg = x6762;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":316:24)
        auto x6763 = x8 - x6643;
        {
          extern_args[0] = x6763;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x6764 = extern_outs[0];
          auto x6765 = extern_outs[1];
          auto x6766 = extern_outs[2];
          auto x6767 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6764);
            reg = x6764;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6765);
            reg = x6765;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6766);
            reg = x6766;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x6767);
            reg = x6767;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6768 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x6768 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6769 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x6769 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6770 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x6770 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x6771 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x6771 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6763);
          reg = x6763;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6768);
          reg = x6768;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6769);
          reg = x6769;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6770);
          reg = x6770;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6771);
          reg = x6771;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6772 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x6772 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6773 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x6773 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6774 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x6774 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6775 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x6775 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:61)
      auto x6776 = x6772 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:26)
      auto x6777 = x6774 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:46)
      auto x6778 = x6773 + x6776;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":136:11)
      auto x6779 = x6775 + x6777;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6780 = Fp(x6779.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6780);
          reg = x6780;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6781 = Fp(x6779.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6782 = x6781 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6782);
          reg = x6782;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6783 = Fp(x6779.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6784 = x6783 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6784);
          reg = x6784;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6785 = Fp(x6779.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6786 = x6785 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6786);
          reg = x6786;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6787 = Fp(x6779.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6788 = x6787 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6788);
          reg = x6788;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6789 = Fp(x6779.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6790 = x6789 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6790);
          reg = x6790;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6791 = Fp(x6779.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6792 = x6791 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6792);
          reg = x6792;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6793 = Fp(x6779.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6794 = x6793 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6794);
          reg = x6794;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6795 = Fp(x6779.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6796 = x6795 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6796);
          reg = x6796;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6797 = Fp(x6779.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6798 = x6797 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6798);
          reg = x6798;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6799 = Fp(x6779.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6800 = x6799 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6800);
          reg = x6800;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6801 = Fp(x6779.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6802 = x6801 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6802);
          reg = x6802;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6803 = Fp(x6779.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6804 = x6803 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6804);
          reg = x6804;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6805 = Fp(x6779.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6806 = x6805 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6806);
          reg = x6806;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6807 = Fp(x6779.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6808 = x6807 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6808);
          reg = x6808;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6809 = Fp(x6779.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6810 = x6809 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6810);
          reg = x6810;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6811 = arg2[12 * steps + ((cycle - 0) & mask)];
      assert(x6811 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6812 = arg2[13 * steps + ((cycle - 0) & mask)];
      assert(x6812 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6813 = arg2[14 * steps + ((cycle - 0) & mask)];
      assert(x6813 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6814 = arg2[15 * steps + ((cycle - 0) & mask)];
      assert(x6814 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6815 = arg2[16 * steps + ((cycle - 0) & mask)];
      assert(x6815 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6816 = arg2[17 * steps + ((cycle - 0) & mask)];
      assert(x6816 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6817 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x6817 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6818 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x6818 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6819 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x6819 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6820 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x6820 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6821 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x6821 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6822 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x6822 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6823 = arg2[85 * steps + ((cycle - 0) & mask)];
      assert(x6823 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6824 = arg2[86 * steps + ((cycle - 0) & mask)];
      assert(x6824 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6825 = arg2[87 * steps + ((cycle - 0) & mask)];
      assert(x6825 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6826 = arg2[88 * steps + ((cycle - 0) & mask)];
      assert(x6826 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6827 = x6811 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6828 = x6812 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6829 = x6813 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6830 = x6814 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6831 = x6815 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6832 = x6816 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6833 = x6818 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6834 = x6819 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6835 = x6820 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6836 = x6821 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6837 = x6822 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6838 = x6823 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6839 = x6824 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6840 = x6825 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6841 = x6826 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6842 = x6817 + x6833;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6843 = x6842 + x6834;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6844 = x6843 + x6835;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6845 = x6844 + x6836;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6846 = x6845 + x6837;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6847 = x6846 + x6838;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6848 = x6847 + x6839;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6849 = x6848 + x6840;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6850 = x6849 + x6841;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6851 = x6850 + x6827;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6852 = x6851 + x6828;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6853 = x6852 + x6829;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6854 = x6853 + x6830;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6855 = x6854 + x6831;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6856 = x6855 + x6832;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x6857 = x6779 - x6856;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x6858 = x6857 * x10;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6858);
        reg = x6858;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6859 = arg2[77 * steps + ((cycle - 0) & mask)];
      assert(x6859 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":117:30)
      auto x6860 = x6778 + x6859;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6861 = Fp(x6860.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6861);
          reg = x6861;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6862 = Fp(x6860.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6863 = x6862 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6863);
          reg = x6863;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6864 = Fp(x6860.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6865 = x6864 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6865);
          reg = x6865;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6866 = Fp(x6860.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6867 = x6866 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6867);
          reg = x6867;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6868 = Fp(x6860.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6869 = x6868 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6869);
          reg = x6869;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6870 = Fp(x6860.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6871 = x6870 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6871);
          reg = x6871;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6872 = Fp(x6860.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6873 = x6872 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6873);
          reg = x6873;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6874 = Fp(x6860.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6875 = x6874 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6875);
          reg = x6875;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6876 = Fp(x6860.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6877 = x6876 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6877);
          reg = x6877;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6878 = Fp(x6860.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6879 = x6878 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6879);
          reg = x6879;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6880 = Fp(x6860.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6881 = x6880 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6881);
          reg = x6881;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6882 = Fp(x6860.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6883 = x6882 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6883);
          reg = x6883;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6884 = Fp(x6860.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6885 = x6884 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6885);
          reg = x6885;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6886 = Fp(x6860.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6887 = x6886 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6887);
          reg = x6887;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6888 = Fp(x6860.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6889 = x6888 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6889);
          reg = x6889;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x6890 = Fp(x6860.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x6891 = x6890 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x6891);
          reg = x6891;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6892 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x6892 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6893 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x6893 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6894 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x6894 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6895 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x6895 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6896 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x6896 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6897 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x6897 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6898 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x6898 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6899 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x6899 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6900 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x6900 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6901 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x6901 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6902 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x6902 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6903 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x6903 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6904 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x6904 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6905 = arg2[31 * steps + ((cycle - 0) & mask)];
      assert(x6905 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6906 = arg2[32 * steps + ((cycle - 0) & mask)];
      assert(x6906 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6907 = arg2[33 * steps + ((cycle - 0) & mask)];
      assert(x6907 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6908 = x6893 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6909 = x6894 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6910 = x6895 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6911 = x6896 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6912 = x6897 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6913 = x6898 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6914 = x6899 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6915 = x6900 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6916 = x6901 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6917 = x6902 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6918 = x6903 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6919 = x6904 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6920 = x6905 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6921 = x6906 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x6922 = x6907 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6923 = x6892 + x6908;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6924 = x6923 + x6909;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6925 = x6924 + x6910;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6926 = x6925 + x6911;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6927 = x6926 + x6912;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6928 = x6927 + x6913;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6929 = x6928 + x6914;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6930 = x6929 + x6915;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6931 = x6930 + x6916;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6932 = x6931 + x6917;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6933 = x6932 + x6918;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6934 = x6933 + x6919;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6935 = x6934 + x6920;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6936 = x6935 + x6921;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x6937 = x6936 + x6922;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x6938 = x6860 - x6937;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x6939 = x6938 * x10;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x6939);
        reg = x6939;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6940 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x6940 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6941 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x6941 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6942 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x6942 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6943 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x6943 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6944 = arg2[159 * steps + ((cycle - 1) & mask)];
      assert(x6944 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6945 = arg2[160 * steps + ((cycle - 1) & mask)];
      assert(x6945 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6946 = arg2[161 * steps + ((cycle - 1) & mask)];
      assert(x6946 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6947 = arg2[162 * steps + ((cycle - 1) & mask)];
      assert(x6947 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6948 = arg2[163 * steps + ((cycle - 1) & mask)];
      assert(x6948 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6949 = arg2[164 * steps + ((cycle - 1) & mask)];
      assert(x6949 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6950 = arg2[165 * steps + ((cycle - 1) & mask)];
      assert(x6950 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6951 = arg2[166 * steps + ((cycle - 1) & mask)];
      assert(x6951 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6952 = arg2[167 * steps + ((cycle - 1) & mask)];
      assert(x6952 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6953 = arg2[168 * steps + ((cycle - 1) & mask)];
      assert(x6953 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6954 = arg2[169 * steps + ((cycle - 1) & mask)];
      assert(x6954 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6955 = arg2[170 * steps + ((cycle - 1) & mask)];
      assert(x6955 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6956 = arg2[171 * steps + ((cycle - 1) & mask)];
      assert(x6956 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6957 = arg2[172 * steps + ((cycle - 1) & mask)];
      assert(x6957 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6958 = arg2[173 * steps + ((cycle - 1) & mask)];
      assert(x6958 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6959 = arg2[174 * steps + ((cycle - 1) & mask)];
      assert(x6959 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6960 = arg2[175 * steps + ((cycle - 1) & mask)];
      assert(x6960 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6961 = arg2[176 * steps + ((cycle - 1) & mask)];
      assert(x6961 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6962 = arg2[177 * steps + ((cycle - 1) & mask)];
      assert(x6962 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6963 = arg2[178 * steps + ((cycle - 1) & mask)];
      assert(x6963 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6964 = arg2[179 * steps + ((cycle - 1) & mask)];
      assert(x6964 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6965 = arg2[180 * steps + ((cycle - 1) & mask)];
      assert(x6965 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6966 = arg2[181 * steps + ((cycle - 1) & mask)];
      assert(x6966 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6967 = arg2[182 * steps + ((cycle - 1) & mask)];
      assert(x6967 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6968 = arg2[183 * steps + ((cycle - 1) & mask)];
      assert(x6968 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6969 = arg2[184 * steps + ((cycle - 1) & mask)];
      assert(x6969 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6970 = arg2[185 * steps + ((cycle - 1) & mask)];
      assert(x6970 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6971 = arg2[186 * steps + ((cycle - 1) & mask)];
      assert(x6971 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6972 = arg2[187 * steps + ((cycle - 1) & mask)];
      assert(x6972 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6973 = arg2[188 * steps + ((cycle - 1) & mask)];
      assert(x6973 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6974 = arg2[189 * steps + ((cycle - 1) & mask)];
      assert(x6974 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6975 = arg2[190 * steps + ((cycle - 1) & mask)];
      assert(x6975 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6976 = arg2[191 * steps + ((cycle - 1) & mask)];
      assert(x6976 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6977 = arg2[192 * steps + ((cycle - 1) & mask)];
      assert(x6977 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6978 = arg2[193 * steps + ((cycle - 1) & mask)];
      assert(x6978 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6979 = arg2[194 * steps + ((cycle - 1) & mask)];
      assert(x6979 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6980 = arg2[195 * steps + ((cycle - 1) & mask)];
      assert(x6980 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6981 = arg2[196 * steps + ((cycle - 1) & mask)];
      assert(x6981 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6982 = arg2[197 * steps + ((cycle - 1) & mask)];
      assert(x6982 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6983 = arg2[198 * steps + ((cycle - 1) & mask)];
      assert(x6983 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6984 = arg2[199 * steps + ((cycle - 1) & mask)];
      assert(x6984 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6985 = arg2[200 * steps + ((cycle - 1) & mask)];
      assert(x6985 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6986 = arg2[201 * steps + ((cycle - 1) & mask)];
      assert(x6986 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6987 = arg2[202 * steps + ((cycle - 1) & mask)];
      assert(x6987 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6988 = arg2[203 * steps + ((cycle - 1) & mask)];
      assert(x6988 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6989 = arg2[204 * steps + ((cycle - 1) & mask)];
      assert(x6989 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6990 = arg2[205 * steps + ((cycle - 1) & mask)];
      assert(x6990 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6991 = arg2[206 * steps + ((cycle - 1) & mask)];
      assert(x6991 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6992 = arg2[207 * steps + ((cycle - 1) & mask)];
      assert(x6992 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6993 = arg2[208 * steps + ((cycle - 1) & mask)];
      assert(x6993 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6994 = arg2[209 * steps + ((cycle - 1) & mask)];
      assert(x6994 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6995 = arg2[210 * steps + ((cycle - 1) & mask)];
      assert(x6995 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6996 = arg2[211 * steps + ((cycle - 1) & mask)];
      assert(x6996 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6997 = arg2[212 * steps + ((cycle - 1) & mask)];
      assert(x6997 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6998 = arg2[213 * steps + ((cycle - 1) & mask)];
      assert(x6998 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x6999 = arg2[214 * steps + ((cycle - 1) & mask)];
      assert(x6999 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7000 = arg2[215 * steps + ((cycle - 1) & mask)];
      assert(x7000 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7001 = arg2[216 * steps + ((cycle - 1) & mask)];
      assert(x7001 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7002 = arg2[217 * steps + ((cycle - 1) & mask)];
      assert(x7002 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7003 = arg2[218 * steps + ((cycle - 1) & mask)];
      assert(x7003 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7004 = arg2[219 * steps + ((cycle - 1) & mask)];
      assert(x7004 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7005 = arg2[220 * steps + ((cycle - 1) & mask)];
      assert(x7005 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7006 = arg2[221 * steps + ((cycle - 1) & mask)];
      assert(x7006 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7007 = arg2[222 * steps + ((cycle - 1) & mask)];
      assert(x7007 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7008 = arg2[191 * steps + ((cycle - 2) & mask)];
      assert(x7008 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7009 = arg2[192 * steps + ((cycle - 2) & mask)];
      assert(x7009 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7010 = arg2[193 * steps + ((cycle - 2) & mask)];
      assert(x7010 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7011 = arg2[194 * steps + ((cycle - 2) & mask)];
      assert(x7011 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7012 = arg2[195 * steps + ((cycle - 2) & mask)];
      assert(x7012 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7013 = arg2[196 * steps + ((cycle - 2) & mask)];
      assert(x7013 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7014 = arg2[197 * steps + ((cycle - 2) & mask)];
      assert(x7014 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7015 = arg2[198 * steps + ((cycle - 2) & mask)];
      assert(x7015 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7016 = arg2[199 * steps + ((cycle - 2) & mask)];
      assert(x7016 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7017 = arg2[200 * steps + ((cycle - 2) & mask)];
      assert(x7017 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7018 = arg2[201 * steps + ((cycle - 2) & mask)];
      assert(x7018 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7019 = arg2[202 * steps + ((cycle - 2) & mask)];
      assert(x7019 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7020 = arg2[203 * steps + ((cycle - 2) & mask)];
      assert(x7020 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7021 = arg2[204 * steps + ((cycle - 2) & mask)];
      assert(x7021 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7022 = arg2[205 * steps + ((cycle - 2) & mask)];
      assert(x7022 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7023 = arg2[206 * steps + ((cycle - 2) & mask)];
      assert(x7023 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7024 = arg2[207 * steps + ((cycle - 2) & mask)];
      assert(x7024 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7025 = arg2[208 * steps + ((cycle - 2) & mask)];
      assert(x7025 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7026 = arg2[209 * steps + ((cycle - 2) & mask)];
      assert(x7026 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7027 = arg2[210 * steps + ((cycle - 2) & mask)];
      assert(x7027 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7028 = arg2[211 * steps + ((cycle - 2) & mask)];
      assert(x7028 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7029 = arg2[212 * steps + ((cycle - 2) & mask)];
      assert(x7029 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7030 = arg2[213 * steps + ((cycle - 2) & mask)];
      assert(x7030 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7031 = arg2[214 * steps + ((cycle - 2) & mask)];
      assert(x7031 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7032 = arg2[215 * steps + ((cycle - 2) & mask)];
      assert(x7032 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7033 = arg2[216 * steps + ((cycle - 2) & mask)];
      assert(x7033 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7034 = arg2[217 * steps + ((cycle - 2) & mask)];
      assert(x7034 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7035 = arg2[218 * steps + ((cycle - 2) & mask)];
      assert(x7035 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7036 = arg2[219 * steps + ((cycle - 2) & mask)];
      assert(x7036 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7037 = arg2[220 * steps + ((cycle - 2) & mask)];
      assert(x7037 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7038 = arg2[221 * steps + ((cycle - 2) & mask)];
      assert(x7038 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7039 = arg2[222 * steps + ((cycle - 2) & mask)];
      assert(x7039 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7040 = arg2[159 * steps + ((cycle - 2) & mask)];
      assert(x7040 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7041 = arg2[160 * steps + ((cycle - 2) & mask)];
      assert(x7041 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7042 = arg2[161 * steps + ((cycle - 2) & mask)];
      assert(x7042 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7043 = arg2[162 * steps + ((cycle - 2) & mask)];
      assert(x7043 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7044 = arg2[163 * steps + ((cycle - 2) & mask)];
      assert(x7044 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7045 = arg2[164 * steps + ((cycle - 2) & mask)];
      assert(x7045 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7046 = arg2[165 * steps + ((cycle - 2) & mask)];
      assert(x7046 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7047 = arg2[166 * steps + ((cycle - 2) & mask)];
      assert(x7047 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7048 = arg2[167 * steps + ((cycle - 2) & mask)];
      assert(x7048 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7049 = arg2[168 * steps + ((cycle - 2) & mask)];
      assert(x7049 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7050 = arg2[169 * steps + ((cycle - 2) & mask)];
      assert(x7050 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7051 = arg2[170 * steps + ((cycle - 2) & mask)];
      assert(x7051 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7052 = arg2[171 * steps + ((cycle - 2) & mask)];
      assert(x7052 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7053 = arg2[172 * steps + ((cycle - 2) & mask)];
      assert(x7053 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7054 = arg2[173 * steps + ((cycle - 2) & mask)];
      assert(x7054 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7055 = arg2[174 * steps + ((cycle - 2) & mask)];
      assert(x7055 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7056 = arg2[175 * steps + ((cycle - 2) & mask)];
      assert(x7056 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7057 = arg2[176 * steps + ((cycle - 2) & mask)];
      assert(x7057 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7058 = arg2[177 * steps + ((cycle - 2) & mask)];
      assert(x7058 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7059 = arg2[178 * steps + ((cycle - 2) & mask)];
      assert(x7059 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7060 = arg2[179 * steps + ((cycle - 2) & mask)];
      assert(x7060 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7061 = arg2[180 * steps + ((cycle - 2) & mask)];
      assert(x7061 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7062 = arg2[181 * steps + ((cycle - 2) & mask)];
      assert(x7062 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7063 = arg2[182 * steps + ((cycle - 2) & mask)];
      assert(x7063 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7064 = arg2[183 * steps + ((cycle - 2) & mask)];
      assert(x7064 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7065 = arg2[184 * steps + ((cycle - 2) & mask)];
      assert(x7065 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7066 = arg2[185 * steps + ((cycle - 2) & mask)];
      assert(x7066 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7067 = arg2[186 * steps + ((cycle - 2) & mask)];
      assert(x7067 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7068 = arg2[187 * steps + ((cycle - 2) & mask)];
      assert(x7068 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7069 = arg2[188 * steps + ((cycle - 2) & mask)];
      assert(x7069 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7070 = arg2[189 * steps + ((cycle - 2) & mask)];
      assert(x7070 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7071 = arg2[190 * steps + ((cycle - 2) & mask)];
      assert(x7071 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7072 = arg2[191 * steps + ((cycle - 3) & mask)];
      assert(x7072 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7073 = arg2[192 * steps + ((cycle - 3) & mask)];
      assert(x7073 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7074 = arg2[193 * steps + ((cycle - 3) & mask)];
      assert(x7074 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7075 = arg2[194 * steps + ((cycle - 3) & mask)];
      assert(x7075 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7076 = arg2[195 * steps + ((cycle - 3) & mask)];
      assert(x7076 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7077 = arg2[196 * steps + ((cycle - 3) & mask)];
      assert(x7077 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7078 = arg2[197 * steps + ((cycle - 3) & mask)];
      assert(x7078 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7079 = arg2[198 * steps + ((cycle - 3) & mask)];
      assert(x7079 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7080 = arg2[199 * steps + ((cycle - 3) & mask)];
      assert(x7080 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7081 = arg2[200 * steps + ((cycle - 3) & mask)];
      assert(x7081 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7082 = arg2[201 * steps + ((cycle - 3) & mask)];
      assert(x7082 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7083 = arg2[202 * steps + ((cycle - 3) & mask)];
      assert(x7083 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7084 = arg2[203 * steps + ((cycle - 3) & mask)];
      assert(x7084 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7085 = arg2[204 * steps + ((cycle - 3) & mask)];
      assert(x7085 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7086 = arg2[205 * steps + ((cycle - 3) & mask)];
      assert(x7086 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7087 = arg2[206 * steps + ((cycle - 3) & mask)];
      assert(x7087 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7088 = arg2[207 * steps + ((cycle - 3) & mask)];
      assert(x7088 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7089 = arg2[208 * steps + ((cycle - 3) & mask)];
      assert(x7089 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7090 = arg2[209 * steps + ((cycle - 3) & mask)];
      assert(x7090 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7091 = arg2[210 * steps + ((cycle - 3) & mask)];
      assert(x7091 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7092 = arg2[211 * steps + ((cycle - 3) & mask)];
      assert(x7092 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7093 = arg2[212 * steps + ((cycle - 3) & mask)];
      assert(x7093 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7094 = arg2[213 * steps + ((cycle - 3) & mask)];
      assert(x7094 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7095 = arg2[214 * steps + ((cycle - 3) & mask)];
      assert(x7095 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7096 = arg2[215 * steps + ((cycle - 3) & mask)];
      assert(x7096 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7097 = arg2[216 * steps + ((cycle - 3) & mask)];
      assert(x7097 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7098 = arg2[217 * steps + ((cycle - 3) & mask)];
      assert(x7098 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7099 = arg2[218 * steps + ((cycle - 3) & mask)];
      assert(x7099 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7100 = arg2[219 * steps + ((cycle - 3) & mask)];
      assert(x7100 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7101 = arg2[220 * steps + ((cycle - 3) & mask)];
      assert(x7101 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7102 = arg2[221 * steps + ((cycle - 3) & mask)];
      assert(x7102 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7103 = arg2[222 * steps + ((cycle - 3) & mask)];
      assert(x7103 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7104 = arg2[159 * steps + ((cycle - 3) & mask)];
      assert(x7104 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7105 = arg2[160 * steps + ((cycle - 3) & mask)];
      assert(x7105 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7106 = arg2[161 * steps + ((cycle - 3) & mask)];
      assert(x7106 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7107 = arg2[162 * steps + ((cycle - 3) & mask)];
      assert(x7107 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7108 = arg2[163 * steps + ((cycle - 3) & mask)];
      assert(x7108 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7109 = arg2[164 * steps + ((cycle - 3) & mask)];
      assert(x7109 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7110 = arg2[165 * steps + ((cycle - 3) & mask)];
      assert(x7110 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7111 = arg2[166 * steps + ((cycle - 3) & mask)];
      assert(x7111 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7112 = arg2[167 * steps + ((cycle - 3) & mask)];
      assert(x7112 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7113 = arg2[168 * steps + ((cycle - 3) & mask)];
      assert(x7113 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7114 = arg2[169 * steps + ((cycle - 3) & mask)];
      assert(x7114 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7115 = arg2[170 * steps + ((cycle - 3) & mask)];
      assert(x7115 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7116 = arg2[171 * steps + ((cycle - 3) & mask)];
      assert(x7116 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7117 = arg2[172 * steps + ((cycle - 3) & mask)];
      assert(x7117 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7118 = arg2[173 * steps + ((cycle - 3) & mask)];
      assert(x7118 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7119 = arg2[174 * steps + ((cycle - 3) & mask)];
      assert(x7119 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7120 = arg2[175 * steps + ((cycle - 3) & mask)];
      assert(x7120 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7121 = arg2[176 * steps + ((cycle - 3) & mask)];
      assert(x7121 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7122 = arg2[177 * steps + ((cycle - 3) & mask)];
      assert(x7122 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7123 = arg2[178 * steps + ((cycle - 3) & mask)];
      assert(x7123 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7124 = arg2[179 * steps + ((cycle - 3) & mask)];
      assert(x7124 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7125 = arg2[180 * steps + ((cycle - 3) & mask)];
      assert(x7125 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7126 = arg2[181 * steps + ((cycle - 3) & mask)];
      assert(x7126 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7127 = arg2[182 * steps + ((cycle - 3) & mask)];
      assert(x7127 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7128 = arg2[183 * steps + ((cycle - 3) & mask)];
      assert(x7128 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7129 = arg2[184 * steps + ((cycle - 3) & mask)];
      assert(x7129 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7130 = arg2[185 * steps + ((cycle - 3) & mask)];
      assert(x7130 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7131 = arg2[186 * steps + ((cycle - 3) & mask)];
      assert(x7131 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7132 = arg2[187 * steps + ((cycle - 3) & mask)];
      assert(x7132 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7133 = arg2[188 * steps + ((cycle - 3) & mask)];
      assert(x7133 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7134 = arg2[189 * steps + ((cycle - 3) & mask)];
      assert(x7134 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7135 = arg2[190 * steps + ((cycle - 3) & mask)];
      assert(x7135 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7136 = arg2[159 * steps + ((cycle - 4) & mask)];
      assert(x7136 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7137 = arg2[160 * steps + ((cycle - 4) & mask)];
      assert(x7137 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7138 = arg2[161 * steps + ((cycle - 4) & mask)];
      assert(x7138 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7139 = arg2[162 * steps + ((cycle - 4) & mask)];
      assert(x7139 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7140 = arg2[163 * steps + ((cycle - 4) & mask)];
      assert(x7140 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7141 = arg2[164 * steps + ((cycle - 4) & mask)];
      assert(x7141 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7142 = arg2[165 * steps + ((cycle - 4) & mask)];
      assert(x7142 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7143 = arg2[166 * steps + ((cycle - 4) & mask)];
      assert(x7143 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7144 = arg2[167 * steps + ((cycle - 4) & mask)];
      assert(x7144 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7145 = arg2[168 * steps + ((cycle - 4) & mask)];
      assert(x7145 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7146 = arg2[169 * steps + ((cycle - 4) & mask)];
      assert(x7146 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7147 = arg2[170 * steps + ((cycle - 4) & mask)];
      assert(x7147 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7148 = arg2[171 * steps + ((cycle - 4) & mask)];
      assert(x7148 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7149 = arg2[172 * steps + ((cycle - 4) & mask)];
      assert(x7149 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7150 = arg2[173 * steps + ((cycle - 4) & mask)];
      assert(x7150 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7151 = arg2[174 * steps + ((cycle - 4) & mask)];
      assert(x7151 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7152 = arg2[175 * steps + ((cycle - 4) & mask)];
      assert(x7152 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7153 = arg2[176 * steps + ((cycle - 4) & mask)];
      assert(x7153 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7154 = arg2[177 * steps + ((cycle - 4) & mask)];
      assert(x7154 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7155 = arg2[178 * steps + ((cycle - 4) & mask)];
      assert(x7155 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7156 = arg2[179 * steps + ((cycle - 4) & mask)];
      assert(x7156 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7157 = arg2[180 * steps + ((cycle - 4) & mask)];
      assert(x7157 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7158 = arg2[181 * steps + ((cycle - 4) & mask)];
      assert(x7158 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7159 = arg2[182 * steps + ((cycle - 4) & mask)];
      assert(x7159 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7160 = arg2[183 * steps + ((cycle - 4) & mask)];
      assert(x7160 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7161 = arg2[184 * steps + ((cycle - 4) & mask)];
      assert(x7161 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7162 = arg2[185 * steps + ((cycle - 4) & mask)];
      assert(x7162 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7163 = arg2[186 * steps + ((cycle - 4) & mask)];
      assert(x7163 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7164 = arg2[187 * steps + ((cycle - 4) & mask)];
      assert(x7164 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7165 = arg2[188 * steps + ((cycle - 4) & mask)];
      assert(x7165 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7166 = arg2[189 * steps + ((cycle - 4) & mask)];
      assert(x7166 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7167 = arg2[190 * steps + ((cycle - 4) & mask)];
      assert(x7167 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7168 = arg2[191 * steps + ((cycle - 4) & mask)];
      assert(x7168 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7169 = arg2[192 * steps + ((cycle - 4) & mask)];
      assert(x7169 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7170 = arg2[193 * steps + ((cycle - 4) & mask)];
      assert(x7170 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7171 = arg2[194 * steps + ((cycle - 4) & mask)];
      assert(x7171 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7172 = arg2[195 * steps + ((cycle - 4) & mask)];
      assert(x7172 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7173 = arg2[196 * steps + ((cycle - 4) & mask)];
      assert(x7173 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7174 = arg2[197 * steps + ((cycle - 4) & mask)];
      assert(x7174 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7175 = arg2[198 * steps + ((cycle - 4) & mask)];
      assert(x7175 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7176 = arg2[199 * steps + ((cycle - 4) & mask)];
      assert(x7176 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7177 = arg2[200 * steps + ((cycle - 4) & mask)];
      assert(x7177 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7178 = arg2[201 * steps + ((cycle - 4) & mask)];
      assert(x7178 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7179 = arg2[202 * steps + ((cycle - 4) & mask)];
      assert(x7179 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7180 = arg2[203 * steps + ((cycle - 4) & mask)];
      assert(x7180 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7181 = arg2[204 * steps + ((cycle - 4) & mask)];
      assert(x7181 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7182 = arg2[205 * steps + ((cycle - 4) & mask)];
      assert(x7182 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7183 = arg2[206 * steps + ((cycle - 4) & mask)];
      assert(x7183 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7184 = arg2[207 * steps + ((cycle - 4) & mask)];
      assert(x7184 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7185 = arg2[208 * steps + ((cycle - 4) & mask)];
      assert(x7185 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7186 = arg2[209 * steps + ((cycle - 4) & mask)];
      assert(x7186 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7187 = arg2[210 * steps + ((cycle - 4) & mask)];
      assert(x7187 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7188 = arg2[211 * steps + ((cycle - 4) & mask)];
      assert(x7188 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7189 = arg2[212 * steps + ((cycle - 4) & mask)];
      assert(x7189 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7190 = arg2[213 * steps + ((cycle - 4) & mask)];
      assert(x7190 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7191 = arg2[214 * steps + ((cycle - 4) & mask)];
      assert(x7191 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7192 = arg2[215 * steps + ((cycle - 4) & mask)];
      assert(x7192 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7193 = arg2[216 * steps + ((cycle - 4) & mask)];
      assert(x7193 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7194 = arg2[217 * steps + ((cycle - 4) & mask)];
      assert(x7194 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7195 = arg2[218 * steps + ((cycle - 4) & mask)];
      assert(x7195 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7196 = arg2[219 * steps + ((cycle - 4) & mask)];
      assert(x7196 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7197 = arg2[220 * steps + ((cycle - 4) & mask)];
      assert(x7197 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7198 = arg2[221 * steps + ((cycle - 4) & mask)];
      assert(x7198 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x7199 = arg2[222 * steps + ((cycle - 4) & mask)];
      assert(x7199 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7200 = x6944 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7201 = x6944 * x7040;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7202 = x6945 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7203 = x6945 * x7041;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7204 = x6946 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7205 = x6946 * x7042;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7206 = x6947 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7207 = x6947 * x7043;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7208 = x6948 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7209 = x6948 * x7044;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7210 = x6949 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7211 = x6949 * x7045;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7212 = x6950 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7213 = x6950 * x7046;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7214 = x6951 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7215 = x6951 * x7047;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7216 = x6952 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7217 = x6952 * x7048;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7218 = x6953 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7219 = x6953 * x7049;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7220 = x6954 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7221 = x6954 * x7050;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7222 = x6955 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7223 = x6955 * x7051;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7224 = x6956 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7225 = x6956 * x7052;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7226 = x6957 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7227 = x6957 * x7053;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7228 = x6958 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7229 = x6958 * x7054;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7230 = x6959 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7231 = x6959 * x7055;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7232 = x6960 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7233 = x6960 * x7056;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7234 = x6961 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7235 = x6961 * x7057;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7236 = x6962 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7237 = x6962 * x7058;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7238 = x6963 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7239 = x6963 * x7059;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7240 = x6964 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7241 = x6964 * x7060;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7242 = x6965 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7243 = x6965 * x7061;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7244 = x6966 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7245 = x6966 * x7062;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7246 = x6967 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7247 = x6967 * x7063;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7248 = x6968 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7249 = x6968 * x7064;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7250 = x6969 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7251 = x6969 * x7065;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7252 = x6970 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7253 = x6970 * x7066;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7254 = x6971 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7255 = x6971 * x7067;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7256 = x6972 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7257 = x6972 * x7068;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7258 = x6973 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7259 = x6973 * x7069;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7260 = x6974 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7261 = x6974 * x7070;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7262 = x6975 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7263 = x6975 * x7071;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7264 = x6976 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7265 = x6976 * x7008;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7266 = x6977 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7267 = x6977 * x7009;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7268 = x6978 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7269 = x6978 * x7010;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7270 = x6979 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7271 = x6979 * x7011;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7272 = x6980 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7273 = x6980 * x7012;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7274 = x6981 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7275 = x6981 * x7013;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7276 = x6982 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7277 = x6982 * x7014;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7278 = x6983 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7279 = x6983 * x7015;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7280 = x6984 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7281 = x6984 * x7016;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7282 = x6985 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7283 = x6985 * x7017;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7284 = x6986 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7285 = x6986 * x7018;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7286 = x6987 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7287 = x6987 * x7019;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7288 = x6988 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7289 = x6988 * x7020;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7290 = x6989 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7291 = x6989 * x7021;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7292 = x6990 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7293 = x6990 * x7022;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7294 = x6991 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7295 = x6991 * x7023;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7296 = x6992 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7297 = x6992 * x7024;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7298 = x6993 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7299 = x6993 * x7025;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7300 = x6994 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7301 = x6994 * x7026;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7302 = x6995 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7303 = x6995 * x7027;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7304 = x6996 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7305 = x6996 * x7028;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7306 = x6997 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7307 = x6997 * x7029;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7308 = x6998 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7309 = x6998 * x7030;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7310 = x6999 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7311 = x6999 * x7031;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7312 = x7000 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7313 = x7000 * x7032;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7314 = x7001 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7315 = x7001 * x7033;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7316 = x7002 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7317 = x7002 * x7034;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7318 = x7003 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7319 = x7003 * x7035;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7320 = x7004 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7321 = x7004 * x7036;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7322 = x7005 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7323 = x7005 * x7037;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7324 = x7006 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7325 = x7006 * x7038;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7326 = x7007 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x7327 = x7007 * x7039;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:26)
      auto x7328 = x6941 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:61)
      auto x7329 = x6943 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7330 = x7137 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7331 = x7138 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7332 = x7139 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7333 = x7140 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7334 = x7141 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7335 = x7142 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7336 = x7143 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7337 = x7144 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7338 = x7145 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7339 = x7146 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7340 = x7147 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7341 = x7148 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7342 = x7149 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7343 = x7150 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7344 = x7151 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7345 = x7153 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7346 = x7154 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7347 = x7155 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7348 = x7156 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7349 = x7157 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7350 = x7158 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7351 = x7159 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7352 = x7160 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7353 = x7161 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7354 = x7162 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7355 = x7163 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7356 = x7164 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7357 = x7165 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7358 = x7166 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7359 = x7167 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7360 = x7169 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7361 = x7170 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7362 = x7171 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7363 = x7172 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7364 = x7173 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7365 = x7174 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7366 = x7175 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7367 = x7176 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7368 = x7177 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7369 = x7178 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7370 = x7179 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7371 = x7180 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7372 = x7181 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7373 = x7182 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7374 = x7183 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7375 = x7185 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7376 = x7186 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7377 = x7187 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7378 = x7188 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7379 = x7189 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7380 = x7190 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7381 = x7191 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7382 = x7192 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7383 = x7193 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7384 = x7194 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7385 = x7195 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7386 = x7196 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7387 = x7197 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7388 = x7198 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x7389 = x7199 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7390 = x7200 * x6953;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7391 = x7201 * x7104;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7392 = x7202 * x6954;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7393 = x7203 * x7105;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7394 = x7204 * x6955;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7395 = x7205 * x7106;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7396 = x7206 * x6956;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7397 = x7207 * x7107;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7398 = x7208 * x6957;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7399 = x7209 * x7108;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7400 = x7210 * x6958;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7401 = x7211 * x7109;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7402 = x7212 * x6959;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7403 = x7213 * x7110;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7404 = x7214 * x6960;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7405 = x7215 * x7111;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7406 = x7216 * x6961;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7407 = x7217 * x7112;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7408 = x7218 * x6962;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7409 = x7219 * x7113;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7410 = x7220 * x6963;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7411 = x7221 * x7114;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7412 = x7222 * x6964;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7413 = x7223 * x7115;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7414 = x7224 * x6965;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7415 = x7225 * x7116;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7416 = x7226 * x6966;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7417 = x7227 * x7117;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7418 = x7228 * x6967;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7419 = x7229 * x7118;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7420 = x7230 * x6968;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7421 = x7231 * x7119;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7422 = x7232 * x6969;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7423 = x7233 * x7120;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7424 = x7234 * x6970;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7425 = x7235 * x7121;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7426 = x7236 * x6971;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7427 = x7237 * x7122;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7428 = x7238 * x6972;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7429 = x7239 * x7123;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7430 = x7240 * x6973;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7431 = x7241 * x7124;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7432 = x7242 * x6974;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7433 = x7243 * x7125;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7434 = x7244 * x6975;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7435 = x7245 * x7126;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7436 = x7246 * x6944;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7437 = x7247 * x7127;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7438 = x7248 * x6945;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7439 = x7249 * x7128;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7440 = x7250 * x6946;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7441 = x7251 * x7129;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7442 = x7252 * x6947;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7443 = x7253 * x7130;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7444 = x7254 * x6948;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7445 = x7255 * x7131;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7446 = x7256 * x6949;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7447 = x7257 * x7132;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7448 = x7258 * x6950;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7449 = x7259 * x7133;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7450 = x7260 * x6951;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7451 = x7261 * x7134;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7452 = x7262 * x6952;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x7453 = x7263 * x7135;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7454 = x7264 * x6990;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7455 = x7266 * x6991;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7456 = x7268 * x6992;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7457 = x7270 * x6993;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7458 = x7272 * x6994;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7459 = x7274 * x6995;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7460 = x7276 * x6996;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7461 = x7278 * x6997;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7462 = x7280 * x6998;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7463 = x7282 * x6999;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7464 = x7284 * x7000;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7465 = x7286 * x7001;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7466 = x7288 * x7002;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7467 = x7290 * x7003;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7468 = x7292 * x7004;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7469 = x7294 * x7005;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7470 = x7296 * x7006;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7471 = x7298 * x7007;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7472 = x7300 * x6976;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7473 = x7302 * x6977;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7474 = x7304 * x6978;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7475 = x7306 * x6979;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7476 = x7308 * x6980;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7477 = x7310 * x6981;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7478 = x7312 * x6982;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7479 = x7314 * x6983;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7480 = x7316 * x6984;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7481 = x7318 * x6985;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7482 = x7320 * x6986;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7483 = x7322 * x6987;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7484 = x7324 * x6988;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x7485 = x7326 * x6989;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7486 = x96 - x6944;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7487 = x96 - x6945;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7488 = x96 - x6946;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7489 = x96 - x6947;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7490 = x96 - x6948;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7491 = x96 - x6949;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7492 = x96 - x6950;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7493 = x96 - x6951;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7494 = x96 - x6952;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7495 = x96 - x6953;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7496 = x96 - x6954;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7497 = x96 - x6955;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7498 = x96 - x6956;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7499 = x96 - x6957;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7500 = x96 - x6958;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7501 = x96 - x6959;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7502 = x96 - x6960;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7503 = x96 - x6961;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7504 = x96 - x6962;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7505 = x96 - x6963;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7506 = x96 - x6964;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7507 = x96 - x6965;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7508 = x96 - x6966;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7509 = x96 - x6967;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7510 = x96 - x6968;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7511 = x96 - x6969;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7512 = x96 - x6970;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7513 = x96 - x6971;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7514 = x96 - x6972;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7515 = x96 - x6973;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7516 = x96 - x6974;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x7517 = x96 - x6975;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7518 = x96 - x6976;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7519 = x96 - x6977;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7520 = x96 - x6978;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7521 = x96 - x6979;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7522 = x96 - x6980;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7523 = x96 - x6981;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7524 = x96 - x6982;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7525 = x96 - x6983;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7526 = x96 - x6984;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7527 = x96 - x6985;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7528 = x96 - x6986;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7529 = x96 - x6987;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7530 = x96 - x6988;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7531 = x96 - x6989;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7532 = x96 - x6990;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7533 = x96 - x6991;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7534 = x96 - x6992;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7535 = x96 - x6993;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7536 = x96 - x6994;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7537 = x96 - x6995;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7538 = x96 - x6996;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7539 = x96 - x6997;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7540 = x96 - x6998;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7541 = x96 - x6999;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7542 = x96 - x7000;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7543 = x96 - x7001;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7544 = x96 - x7002;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7545 = x96 - x7003;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7546 = x96 - x7004;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7547 = x96 - x7005;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7548 = x96 - x7006;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x7549 = x96 - x7007;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7550 = x96 - x7040;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7551 = x96 - x7041;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7552 = x96 - x7042;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7553 = x96 - x7043;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7554 = x96 - x7044;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7555 = x96 - x7045;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7556 = x96 - x7046;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7557 = x96 - x7047;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7558 = x96 - x7048;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7559 = x96 - x7049;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7560 = x96 - x7050;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7561 = x96 - x7051;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7562 = x96 - x7052;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7563 = x96 - x7053;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7564 = x96 - x7054;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7565 = x96 - x7055;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7566 = x96 - x7056;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7567 = x96 - x7057;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7568 = x96 - x7058;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7569 = x96 - x7059;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7570 = x96 - x7060;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7571 = x96 - x7061;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7572 = x96 - x7062;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7573 = x96 - x7063;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7574 = x96 - x7064;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7575 = x96 - x7065;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7576 = x96 - x7066;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7577 = x96 - x7067;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7578 = x96 - x7068;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7579 = x96 - x7069;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7580 = x96 - x7070;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x7581 = x96 - x7071;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7582 = x96 - x7104;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7583 = x96 - x7105;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7584 = x96 - x7106;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7585 = x96 - x7107;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7586 = x96 - x7108;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7587 = x96 - x7109;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7588 = x96 - x7110;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7589 = x96 - x7111;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7590 = x96 - x7112;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7591 = x96 - x7113;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7592 = x96 - x7114;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7593 = x96 - x7115;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7594 = x96 - x7116;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7595 = x96 - x7117;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7596 = x96 - x7118;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7597 = x96 - x7119;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7598 = x96 - x7120;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7599 = x96 - x7121;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7600 = x96 - x7122;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7601 = x96 - x7123;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7602 = x96 - x7124;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7603 = x96 - x7125;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7604 = x96 - x7126;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7605 = x96 - x7127;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7606 = x96 - x7128;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7607 = x96 - x7129;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7608 = x96 - x7130;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7609 = x96 - x7131;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7610 = x96 - x7132;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7611 = x96 - x7133;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7612 = x96 - x7134;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x7613 = x96 - x7135;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:11)
      auto x7614 = x6940 + x7328;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:46)
      auto x7615 = x6942 + x7329;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7616 = x6944 + x6953;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7617 = x6945 + x6954;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7618 = x6946 + x6955;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7619 = x6947 + x6956;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7620 = x6948 + x6957;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7621 = x6949 + x6958;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7622 = x6950 + x6959;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7623 = x6951 + x6960;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7624 = x6952 + x6961;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7625 = x6953 + x6962;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7626 = x6954 + x6963;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7627 = x6955 + x6964;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7628 = x6956 + x6965;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7629 = x6957 + x6966;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7630 = x6958 + x6967;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7631 = x6959 + x6968;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7632 = x6960 + x6969;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7633 = x6961 + x6970;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7634 = x6962 + x6971;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7635 = x6963 + x6972;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7636 = x6964 + x6973;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7637 = x6965 + x6974;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7638 = x6966 + x6975;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7639 = x6967 + x6944;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7640 = x6968 + x6945;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7641 = x6969 + x6946;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7642 = x6970 + x6947;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7643 = x6971 + x6948;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7644 = x6972 + x6949;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7645 = x6973 + x6950;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7646 = x6974 + x6951;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7647 = x6975 + x6952;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7648 = x6976 + x6990;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7649 = x6977 + x6991;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7650 = x6978 + x6992;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7651 = x6979 + x6993;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7652 = x6980 + x6994;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7653 = x6981 + x6995;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7654 = x6982 + x6996;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7655 = x6983 + x6997;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7656 = x6984 + x6998;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7657 = x6985 + x6999;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7658 = x6986 + x7000;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7659 = x6987 + x7001;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7660 = x6988 + x7002;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7661 = x6989 + x7003;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7662 = x6990 + x7004;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7663 = x6991 + x7005;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7664 = x6992 + x7006;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7665 = x6993 + x7007;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7666 = x6994 + x6976;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7667 = x6995 + x6977;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7668 = x6996 + x6978;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7669 = x6997 + x6979;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7670 = x6998 + x6980;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7671 = x6999 + x6981;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7672 = x7000 + x6982;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7673 = x7001 + x6983;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7674 = x7002 + x6984;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7675 = x7003 + x6985;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7676 = x7004 + x6986;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7677 = x7005 + x6987;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7678 = x7006 + x6988;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7679 = x7007 + x6989;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7680 = x6944 * x7550;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7681 = x6945 * x7551;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7682 = x6946 * x7552;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7683 = x6947 * x7553;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7684 = x6948 * x7554;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7685 = x6949 * x7555;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7686 = x6950 * x7556;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7687 = x6951 * x7557;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7688 = x6952 * x7558;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7689 = x6953 * x7559;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7690 = x6954 * x7560;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7691 = x6955 * x7561;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7692 = x6956 * x7562;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7693 = x6957 * x7563;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7694 = x6958 * x7564;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7695 = x6959 * x7565;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7696 = x6960 * x7566;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7697 = x6961 * x7567;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7698 = x6962 * x7568;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7699 = x6963 * x7569;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7700 = x6964 * x7570;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7701 = x6965 * x7571;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7702 = x6966 * x7572;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7703 = x6967 * x7573;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7704 = x6968 * x7574;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7705 = x6969 * x7575;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7706 = x6970 * x7576;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7707 = x6971 * x7577;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7708 = x6972 * x7578;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7709 = x6973 * x7579;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7710 = x6974 * x7580;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7711 = x6975 * x7581;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7712 = x7201 * x7582;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7713 = x7203 * x7583;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7714 = x7205 * x7584;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7715 = x7207 * x7585;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7716 = x7209 * x7586;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7717 = x7211 * x7587;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7718 = x7213 * x7588;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7719 = x7215 * x7589;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7720 = x7217 * x7590;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7721 = x7219 * x7591;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7722 = x7221 * x7592;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7723 = x7223 * x7593;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7724 = x7225 * x7594;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7725 = x7227 * x7595;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7726 = x7229 * x7596;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7727 = x7231 * x7597;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7728 = x7233 * x7598;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7729 = x7235 * x7599;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7730 = x7237 * x7600;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7731 = x7239 * x7601;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7732 = x7241 * x7602;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7733 = x7243 * x7603;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7734 = x7245 * x7604;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7735 = x7247 * x7605;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7736 = x7249 * x7606;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7737 = x7251 * x7607;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7738 = x7253 * x7608;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7739 = x7255 * x7609;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7740 = x7257 * x7610;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7741 = x7259 * x7611;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7742 = x7261 * x7612;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x7743 = x7263 * x7613;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7744 = x7486 * x7040;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7745 = x7487 * x7041;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7746 = x7488 * x7042;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7747 = x7489 * x7043;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7748 = x7490 * x7044;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7749 = x7491 * x7045;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7750 = x7492 * x7046;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7751 = x7493 * x7047;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7752 = x7494 * x7048;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7753 = x7495 * x7049;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7754 = x7496 * x7050;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7755 = x7497 * x7051;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7756 = x7498 * x7052;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7757 = x7499 * x7053;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7758 = x7500 * x7054;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7759 = x7501 * x7055;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7760 = x7502 * x7056;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7761 = x7503 * x7057;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7762 = x7504 * x7058;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7763 = x7505 * x7059;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7764 = x7506 * x7060;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7765 = x7507 * x7061;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7766 = x7508 * x7062;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7767 = x7509 * x7063;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7768 = x7510 * x7064;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7769 = x7511 * x7065;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7770 = x7512 * x7066;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7771 = x7513 * x7067;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7772 = x7514 * x7068;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7773 = x7515 * x7069;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7774 = x7516 * x7070;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7775 = x7517 * x7071;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7776 = x7680 * x7104;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7777 = x7681 * x7105;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7778 = x7682 * x7106;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7779 = x7683 * x7107;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7780 = x7684 * x7108;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7781 = x7685 * x7109;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7782 = x7686 * x7110;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7783 = x7687 * x7111;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7784 = x7688 * x7112;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7785 = x7689 * x7113;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7786 = x7690 * x7114;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7787 = x7691 * x7115;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7788 = x7692 * x7116;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7789 = x7693 * x7117;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7790 = x7694 * x7118;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7791 = x7695 * x7119;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7792 = x7696 * x7120;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7793 = x7697 * x7121;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7794 = x7698 * x7122;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7795 = x7699 * x7123;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7796 = x7700 * x7124;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7797 = x7701 * x7125;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7798 = x7702 * x7126;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7799 = x7703 * x7127;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7800 = x7704 * x7128;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7801 = x7705 * x7129;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7802 = x7706 * x7130;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7803 = x7707 * x7131;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7804 = x7708 * x7132;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7805 = x7709 * x7133;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7806 = x7710 * x7134;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x7807 = x7711 * x7135;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7808 = x7744 * x7104;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7809 = x7745 * x7105;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7810 = x7746 * x7106;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7811 = x7747 * x7107;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7812 = x7748 * x7108;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7813 = x7749 * x7109;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7814 = x7750 * x7110;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7815 = x7751 * x7111;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7816 = x7752 * x7112;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7817 = x7753 * x7113;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7818 = x7754 * x7114;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7819 = x7755 * x7115;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7820 = x7756 * x7116;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7821 = x7757 * x7117;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7822 = x7758 * x7118;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7823 = x7759 * x7119;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7824 = x7760 * x7120;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7825 = x7761 * x7121;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7826 = x7762 * x7122;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7827 = x7763 * x7123;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7828 = x7764 * x7124;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7829 = x7765 * x7125;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7830 = x7766 * x7126;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7831 = x7767 * x7127;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7832 = x7768 * x7128;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7833 = x7769 * x7129;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7834 = x7770 * x7130;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7835 = x7771 * x7131;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7836 = x7772 * x7132;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7837 = x7773 * x7133;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7838 = x7774 * x7134;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x7839 = x7775 * x7135;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7840 = x7518 * x7072;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7841 = x7519 * x7073;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7842 = x7520 * x7074;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7843 = x7521 * x7075;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7844 = x7522 * x7076;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7845 = x7523 * x7077;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7846 = x7524 * x7078;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7847 = x7525 * x7079;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7848 = x7526 * x7080;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7849 = x7527 * x7081;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7850 = x7528 * x7082;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7851 = x7529 * x7083;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7852 = x7530 * x7084;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7853 = x7531 * x7085;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7854 = x7532 * x7086;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7855 = x7533 * x7087;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7856 = x7534 * x7088;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7857 = x7535 * x7089;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7858 = x7536 * x7090;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7859 = x7537 * x7091;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7860 = x7538 * x7092;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7861 = x7539 * x7093;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7862 = x7540 * x7094;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7863 = x7541 * x7095;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7864 = x7542 * x7096;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7865 = x7543 * x7097;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7866 = x7544 * x7098;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7867 = x7545 * x7099;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7868 = x7546 * x7100;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7869 = x7547 * x7101;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7870 = x7548 * x7102;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x7871 = x7549 * x7103;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7872 = x7616 - x7390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7873 = x7617 - x7392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7874 = x7618 - x7394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7875 = x7619 - x7396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7876 = x7620 - x7398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7877 = x7621 - x7400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7878 = x7622 - x7402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7879 = x7623 - x7404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7880 = x7624 - x7406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7881 = x7625 - x7408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7882 = x7626 - x7410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7883 = x7627 - x7412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7884 = x7628 - x7414;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7885 = x7629 - x7416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7886 = x7630 - x7418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7887 = x7631 - x7420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7888 = x7632 - x7422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7889 = x7633 - x7424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7890 = x7634 - x7426;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7891 = x7635 - x7428;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7892 = x7636 - x7430;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7893 = x7637 - x7432;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7894 = x7638 - x7434;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7895 = x7639 - x7436;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7896 = x7640 - x7438;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7897 = x7641 - x7440;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7898 = x7642 - x7442;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7899 = x7643 - x7444;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7900 = x7644 - x7446;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7901 = x7645 - x7448;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7902 = x7646 - x7450;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7903 = x7647 - x7452;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7904 = x7648 - x7454;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7905 = x7649 - x7455;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7906 = x7650 - x7456;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7907 = x7651 - x7457;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7908 = x7652 - x7458;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7909 = x7653 - x7459;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7910 = x7654 - x7460;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7911 = x7655 - x7461;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7912 = x7656 - x7462;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7913 = x7657 - x7463;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7914 = x7658 - x7464;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7915 = x7659 - x7465;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7916 = x7660 - x7466;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7917 = x7661 - x7467;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7918 = x7662 - x7468;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7919 = x7663 - x7469;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7920 = x7664 - x7470;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7921 = x7665 - x7471;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7922 = x7666 - x7472;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7923 = x7667 - x7473;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7924 = x7668 - x7474;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7925 = x7669 - x7475;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7926 = x7670 - x7476;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7927 = x7671 - x7477;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7928 = x7672 - x7478;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7929 = x7673 - x7479;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7930 = x7674 - x7480;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7931 = x7675 - x7481;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7932 = x7676 - x7482;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7933 = x7677 - x7483;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7934 = x7678 - x7484;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7935 = x7679 - x7485;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x7936 = x7136 + x7330;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x7937 = x7152 + x7345;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x7938 = x7168 + x7360;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x7939 = x7184 + x7375;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7940 = x6944 + x7883;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7941 = x6945 + x7884;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7942 = x6946 + x7885;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7943 = x6947 + x7886;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7944 = x6948 + x7887;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7945 = x6949 + x7888;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7946 = x6950 + x7889;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7947 = x6951 + x7890;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7948 = x6952 + x7891;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7949 = x6953 + x7892;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7950 = x6954 + x7893;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7951 = x6955 + x7894;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7952 = x6956 + x7895;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7953 = x6957 + x7896;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7954 = x6958 + x7897;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7955 = x6959 + x7898;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7956 = x6960 + x7899;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7957 = x6961 + x7900;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7958 = x6962 + x7901;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7959 = x6963 + x7902;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7960 = x6964 + x7903;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7961 = x6965 + x7872;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7962 = x6966 + x7873;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7963 = x6967 + x7874;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7964 = x6968 + x7875;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7965 = x6969 + x7876;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7966 = x6970 + x7877;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7967 = x6971 + x7878;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7968 = x6972 + x7879;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7969 = x6973 + x7880;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7970 = x6974 + x7881;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7971 = x6975 + x7882;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7972 = x6976 + x7909;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7973 = x6977 + x7910;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7974 = x6978 + x7911;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7975 = x6979 + x7912;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7976 = x6980 + x7913;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7977 = x6981 + x7914;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7978 = x6982 + x7915;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7979 = x6983 + x7916;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7980 = x6984 + x7917;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7981 = x6985 + x7918;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7982 = x6986 + x7919;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7983 = x6987 + x7920;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7984 = x6988 + x7921;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7985 = x6989 + x7922;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7986 = x6990 + x7923;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7987 = x6991 + x7924;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7988 = x6992 + x7925;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7989 = x6993 + x7926;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7990 = x6994 + x7927;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7991 = x6995 + x7928;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7992 = x6996 + x7929;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7993 = x6997 + x7930;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7994 = x6998 + x7931;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7995 = x6999 + x7932;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7996 = x7000 + x7933;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7997 = x7001 + x7934;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7998 = x7002 + x7935;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x7999 = x7003 + x7904;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8000 = x7004 + x7905;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8001 = x7005 + x7906;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8002 = x7006 + x7907;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8003 = x7007 + x7908;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8004 = x7265 + x7840;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8005 = x7267 + x7841;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8006 = x7269 + x7842;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8007 = x7271 + x7843;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8008 = x7273 + x7844;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8009 = x7275 + x7845;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8010 = x7277 + x7846;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8011 = x7279 + x7847;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8012 = x7281 + x7848;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8013 = x7283 + x7849;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8014 = x7285 + x7850;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8015 = x7287 + x7851;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8016 = x7289 + x7852;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8017 = x7291 + x7853;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8018 = x7293 + x7854;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8019 = x7295 + x7855;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8020 = x7297 + x7856;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8021 = x7299 + x7857;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8022 = x7301 + x7858;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8023 = x7303 + x7859;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8024 = x7305 + x7860;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8025 = x7307 + x7861;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8026 = x7309 + x7862;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8027 = x7311 + x7863;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8028 = x7313 + x7864;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8029 = x7315 + x7865;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8030 = x7317 + x7866;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8031 = x7319 + x7867;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8032 = x7321 + x7868;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8033 = x7323 + x7869;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8034 = x7325 + x7870;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x8035 = x7327 + x7871;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8036 = x7712 + x7776;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8037 = x7713 + x7777;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8038 = x7714 + x7778;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8039 = x7715 + x7779;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8040 = x7716 + x7780;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8041 = x7717 + x7781;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8042 = x7718 + x7782;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8043 = x7719 + x7783;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8044 = x7720 + x7784;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8045 = x7721 + x7785;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8046 = x7722 + x7786;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8047 = x7723 + x7787;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8048 = x7724 + x7788;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8049 = x7725 + x7789;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8050 = x7726 + x7790;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8051 = x7727 + x7791;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8052 = x7728 + x7792;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8053 = x7729 + x7793;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8054 = x7730 + x7794;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8055 = x7731 + x7795;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8056 = x7732 + x7796;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8057 = x7733 + x7797;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8058 = x7734 + x7798;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8059 = x7735 + x7799;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8060 = x7736 + x7800;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8061 = x7737 + x7801;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8062 = x7738 + x7802;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8063 = x7739 + x7803;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8064 = x7740 + x7804;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8065 = x7741 + x7805;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8066 = x7742 + x7806;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8067 = x7743 + x7807;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8068 = x8005 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8069 = x8006 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8070 = x8007 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8071 = x8008 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8072 = x8009 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8073 = x8010 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8074 = x8011 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8075 = x8012 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8076 = x8013 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8077 = x8014 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8078 = x8015 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8079 = x8016 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8080 = x8017 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8081 = x8018 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8082 = x8019 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8083 = x8021 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8084 = x8022 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8085 = x8023 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8086 = x8024 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8087 = x8025 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8088 = x8026 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8089 = x8027 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8090 = x8028 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8091 = x8029 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8092 = x8030 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8093 = x8031 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8094 = x8032 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8095 = x8033 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8096 = x8034 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8097 = x8035 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8098 = x7200 * x7883;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8099 = x7202 * x7884;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8100 = x7204 * x7885;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8101 = x7206 * x7886;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8102 = x7208 * x7887;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8103 = x7210 * x7888;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8104 = x7212 * x7889;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8105 = x7214 * x7890;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8106 = x7216 * x7891;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8107 = x7218 * x7892;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8108 = x7220 * x7893;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8109 = x7222 * x7894;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8110 = x7224 * x7895;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8111 = x7226 * x7896;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8112 = x7228 * x7897;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8113 = x7230 * x7898;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8114 = x7232 * x7899;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8115 = x7234 * x7900;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8116 = x7236 * x7901;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8117 = x7238 * x7902;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8118 = x7240 * x7903;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8119 = x7242 * x7872;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8120 = x7244 * x7873;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8121 = x7246 * x7874;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8122 = x7248 * x7875;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8123 = x7250 * x7876;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8124 = x7252 * x7877;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8125 = x7254 * x7878;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8126 = x7256 * x7879;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8127 = x7258 * x7880;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8128 = x7260 * x7881;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8129 = x7262 * x7882;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8130 = x7264 * x7909;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8131 = x7266 * x7910;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8132 = x7268 * x7911;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8133 = x7270 * x7912;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8134 = x7272 * x7913;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8135 = x7274 * x7914;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8136 = x7276 * x7915;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8137 = x7278 * x7916;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8138 = x7280 * x7917;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8139 = x7282 * x7918;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8140 = x7284 * x7919;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8141 = x7286 * x7920;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8142 = x7288 * x7921;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8143 = x7290 * x7922;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8144 = x7292 * x7923;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8145 = x7294 * x7924;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8146 = x7296 * x7925;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8147 = x7298 * x7926;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8148 = x7300 * x7927;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8149 = x7302 * x7928;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8150 = x7304 * x7929;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8151 = x7306 * x7930;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8152 = x7308 * x7931;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8153 = x7310 * x7932;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8154 = x7312 * x7933;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8155 = x7314 * x7934;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8156 = x7316 * x7935;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8157 = x7318 * x7904;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8158 = x7320 * x7905;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8159 = x7322 * x7906;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8160 = x7324 * x7907;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x8161 = x7326 * x7908;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8162 = x7940 - x8098;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8163 = x7941 - x8099;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8164 = x7942 - x8100;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8165 = x7943 - x8101;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8166 = x7944 - x8102;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8167 = x7945 - x8103;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8168 = x7946 - x8104;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8169 = x7947 - x8105;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8170 = x7948 - x8106;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8171 = x7949 - x8107;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8172 = x7950 - x8108;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8173 = x7951 - x8109;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8174 = x7952 - x8110;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8175 = x7953 - x8111;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8176 = x7954 - x8112;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8177 = x7955 - x8113;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8178 = x7956 - x8114;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8179 = x7957 - x8115;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8180 = x7958 - x8116;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8181 = x7959 - x8117;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8182 = x7960 - x8118;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8183 = x7961 - x8119;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8184 = x7962 - x8120;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8185 = x7963 - x8121;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8186 = x7964 - x8122;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8187 = x7965 - x8123;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8188 = x7966 - x8124;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8189 = x7967 - x8125;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8190 = x7968 - x8126;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8191 = x7969 - x8127;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8192 = x7970 - x8128;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8193 = x7971 - x8129;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8194 = x7972 - x8130;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8195 = x7973 - x8131;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8196 = x7974 - x8132;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8197 = x7975 - x8133;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8198 = x7976 - x8134;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8199 = x7977 - x8135;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8200 = x7978 - x8136;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8201 = x7979 - x8137;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8202 = x7980 - x8138;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8203 = x7981 - x8139;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8204 = x7982 - x8140;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8205 = x7983 - x8141;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8206 = x7984 - x8142;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8207 = x7985 - x8143;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8208 = x7986 - x8144;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8209 = x7987 - x8145;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8210 = x7988 - x8146;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8211 = x7989 - x8147;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8212 = x7990 - x8148;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8213 = x7991 - x8149;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8214 = x7992 - x8150;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8215 = x7993 - x8151;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8216 = x7994 - x8152;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8217 = x7995 - x8153;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8218 = x7996 - x8154;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8219 = x7997 - x8155;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8220 = x7998 - x8156;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8221 = x7999 - x8157;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8222 = x8000 - x8158;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8223 = x8001 - x8159;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8224 = x8002 - x8160;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x8225 = x8003 - x8161;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8226 = x7936 + x7331;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8227 = x7937 + x7346;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8228 = x7938 + x7361;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8229 = x7939 + x7376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8230 = x8036 + x7808;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8231 = x8037 + x7809;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8232 = x8038 + x7810;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8233 = x8039 + x7811;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8234 = x8040 + x7812;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8235 = x8041 + x7813;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8236 = x8042 + x7814;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8237 = x8043 + x7815;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8238 = x8044 + x7816;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8239 = x8045 + x7817;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8240 = x8046 + x7818;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8241 = x8047 + x7819;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8242 = x8048 + x7820;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8243 = x8049 + x7821;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8244 = x8050 + x7822;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8245 = x8051 + x7823;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8246 = x8052 + x7824;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8247 = x8053 + x7825;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8248 = x8054 + x7826;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8249 = x8055 + x7827;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8250 = x8056 + x7828;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8251 = x8057 + x7829;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8252 = x8058 + x7830;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8253 = x8059 + x7831;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8254 = x8060 + x7832;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8255 = x8061 + x7833;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8256 = x8062 + x7834;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8257 = x8063 + x7835;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8258 = x8064 + x7836;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8259 = x8065 + x7837;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8260 = x8066 + x7838;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8261 = x8067 + x7839;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8262 = x8162 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8263 = x8163 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8264 = x8165 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8265 = x8166 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8266 = x8167 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8267 = x8168 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8268 = x8169 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8269 = x8170 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8270 = x8171 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8271 = x8172 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8272 = x8173 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8273 = x8174 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8274 = x8175 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8275 = x8176 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8276 = x8177 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8277 = x8178 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8278 = x8179 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8279 = x8181 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8280 = x8182 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8281 = x8183 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8282 = x8184 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8283 = x8185 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8284 = x8186 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8285 = x8187 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8286 = x8188 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8287 = x8189 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8288 = x8190 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8289 = x8191 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8290 = x8192 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8291 = x8193 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8292 = x8194 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8293 = x8195 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8294 = x8196 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8295 = x8197 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8296 = x8198 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8297 = x8199 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8298 = x8201 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8299 = x8202 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8300 = x8203 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8301 = x8204 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8302 = x8205 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8303 = x8206 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8304 = x8207 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8305 = x8208 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8306 = x8209 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8307 = x8210 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8308 = x8211 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8309 = x8212 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8310 = x8213 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8311 = x8214 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8312 = x8215 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8313 = x8217 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8314 = x8218 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8315 = x8219 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8316 = x8220 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8317 = x8221 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8318 = x8222 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8319 = x8223 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8320 = x8224 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8321 = x8225 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8322 = x8226 + x7332;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8323 = x8227 + x7347;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8324 = x8228 + x7362;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8325 = x8229 + x7377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8326 = x8230 + x7391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8327 = x8231 + x7393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8328 = x8232 + x7395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8329 = x8233 + x7397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8330 = x8234 + x7399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8331 = x8235 + x7401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8332 = x8236 + x7403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8333 = x8237 + x7405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8334 = x8238 + x7407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8335 = x8239 + x7409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8336 = x8240 + x7411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8337 = x8241 + x7413;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8338 = x8242 + x7415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8339 = x8243 + x7417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8340 = x8244 + x7419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8341 = x8245 + x7421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8342 = x8246 + x7423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8343 = x8247 + x7425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8344 = x8248 + x7427;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8345 = x8249 + x7429;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8346 = x8250 + x7431;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8347 = x8251 + x7433;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8348 = x8252 + x7435;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8349 = x8253 + x7437;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8350 = x8254 + x7439;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8351 = x8255 + x7441;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8352 = x8256 + x7443;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8353 = x8257 + x7445;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8354 = x8258 + x7447;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8355 = x8259 + x7449;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8356 = x8260 + x7451;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x8357 = x8261 + x7453;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8358 = x8004 + x8068;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8359 = x8020 + x8083;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8360 = x8327 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8361 = x8328 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8362 = x8329 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8363 = x8330 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8364 = x8331 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8365 = x8332 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8366 = x8333 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8367 = x8334 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8368 = x8335 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8369 = x8336 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8370 = x8337 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8371 = x8338 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8372 = x8339 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8373 = x8340 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8374 = x8341 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8375 = x8343 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8376 = x8344 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8377 = x8345 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8378 = x8346 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8379 = x8347 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8380 = x8348 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8381 = x8349 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8382 = x8350 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8383 = x8351 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8384 = x8352 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8385 = x8353 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8386 = x8354 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8387 = x8355 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8388 = x8356 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x8389 = x8357 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8390 = x8322 + x7333;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8391 = x8323 + x7348;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8392 = x8324 + x7363;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8393 = x8325 + x7378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8394 = x8358 + x8069;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8395 = x8359 + x8084;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8396 = x8164 + x8264;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8397 = x8180 + x8279;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8398 = x8200 + x8298;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8399 = x8216 + x8313;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8400 = x8390 + x7334;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8401 = x8391 + x7349;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8402 = x8392 + x7364;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8403 = x8393 + x7379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8404 = x8394 + x8070;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8405 = x8395 + x8085;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8406 = x8396 + x8265;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8407 = x8397 + x8280;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8408 = x8398 + x8299;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8409 = x8399 + x8314;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8410 = x8326 + x8360;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8411 = x8342 + x8375;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8412 = x8400 + x7335;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8413 = x8401 + x7350;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8414 = x8402 + x7365;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8415 = x8403 + x7380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8416 = x8404 + x8071;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8417 = x8405 + x8086;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8418 = x8406 + x8266;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8419 = x8407 + x8281;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8420 = x8408 + x8300;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8421 = x8409 + x8315;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8422 = x8410 + x8361;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8423 = x8411 + x8376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8424 = x8412 + x7336;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8425 = x8413 + x7351;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8426 = x8414 + x7366;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8427 = x8415 + x7381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8428 = x8416 + x8072;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8429 = x8417 + x8087;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8430 = x8418 + x8267;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8431 = x8419 + x8282;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8432 = x8420 + x8301;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8433 = x8421 + x8316;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8434 = x8422 + x8362;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8435 = x8423 + x8377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8436 = x8424 + x7337;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8437 = x8425 + x7352;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8438 = x8426 + x7367;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8439 = x8427 + x7382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8440 = x8428 + x8073;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8441 = x8429 + x8088;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8442 = x8430 + x8268;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8443 = x8431 + x8283;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8444 = x8432 + x8302;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8445 = x8433 + x8317;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8446 = x8434 + x8363;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8447 = x8435 + x8378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8448 = x8436 + x7338;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8449 = x8437 + x7353;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8450 = x8438 + x7368;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8451 = x8439 + x7383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8452 = x8440 + x8074;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8453 = x8441 + x8089;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8454 = x8442 + x8269;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8455 = x8443 + x8284;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8456 = x8444 + x8303;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8457 = x8445 + x8318;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8458 = x8446 + x8364;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8459 = x8447 + x8379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8460 = x8448 + x7339;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8461 = x8449 + x7354;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8462 = x8450 + x7369;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8463 = x8451 + x7384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8464 = x8452 + x8075;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8465 = x8453 + x8090;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8466 = x8454 + x8270;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8467 = x8455 + x8285;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8468 = x8456 + x8304;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8469 = x8457 + x8319;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8470 = x8458 + x8365;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8471 = x8459 + x8380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8472 = x8460 + x7340;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8473 = x8461 + x7355;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8474 = x8462 + x7370;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8475 = x8463 + x7385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8476 = x8464 + x8076;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8477 = x8465 + x8091;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8478 = x8466 + x8271;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8479 = x8467 + x8286;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8480 = x8468 + x8305;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8481 = x8469 + x8320;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8482 = x8470 + x8366;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8483 = x8471 + x8381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8484 = x8472 + x7341;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8485 = x8473 + x7356;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8486 = x8474 + x7371;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8487 = x8475 + x7386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8488 = x8476 + x8077;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8489 = x8477 + x8092;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8490 = x8478 + x8272;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8491 = x8479 + x8287;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8492 = x8480 + x8306;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8493 = x8481 + x8321;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8494 = x8482 + x8367;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8495 = x8483 + x8382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8496 = x8484 + x7342;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8497 = x8485 + x7357;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8498 = x8486 + x7372;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8499 = x8487 + x7387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8500 = x8488 + x8078;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8501 = x8489 + x8093;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8502 = x8490 + x8273;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8503 = x8491 + x8288;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8504 = x8492 + x8307;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8505 = x8493 + x8292;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8506 = x8494 + x8368;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8507 = x8495 + x8383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8508 = x8496 + x7343;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8509 = x8497 + x7358;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8510 = x8498 + x7373;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8511 = x8499 + x7388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8512 = x8500 + x8079;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8513 = x8501 + x8094;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8514 = x8502 + x8274;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8515 = x8503 + x8289;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8516 = x8504 + x8308;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8517 = x8505 + x8293;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8518 = x8506 + x8369;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8519 = x8507 + x8384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8520 = x8508 + x7344;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8521 = x8509 + x7359;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8522 = x8510 + x7374;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8523 = x8511 + x7389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8524 = x8512 + x8080;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8525 = x8513 + x8095;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8526 = x8514 + x8275;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8527 = x8515 + x8290;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8528 = x8516 + x8309;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8529 = x8517 + x8294;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8530 = x8518 + x8370;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8531 = x8519 + x8385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8532 = x8524 + x8081;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8533 = x8525 + x8096;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8534 = x8526 + x8276;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8535 = x8527 + x8291;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8536 = x8528 + x8310;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8537 = x8529 + x8295;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8538 = x8530 + x8371;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8539 = x8531 + x8386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8540 = x8532 + x8082;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8541 = x8533 + x8097;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8542 = x8534 + x8277;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8543 = x8535 + x8262;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8544 = x8536 + x8311;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8545 = x8537 + x8296;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8546 = x8538 + x8372;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8547 = x8539 + x8387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8548 = x8542 + x8278;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8549 = x8543 + x8263;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8550 = x8544 + x8312;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8551 = x8545 + x8297;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8552 = x8546 + x8373;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8553 = x8547 + x8388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8554 = x8540 + x8550;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8555 = x8541 + x8551;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8556 = x8522 + x8554;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8557 = x8523 + x8555;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8558 = x7614 + x8556;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8559 = x7615 + x8557;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8560 = x6937 + x8559;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8561 = x6856 + x8558;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8562 = x8552 + x8374;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x8563 = x8553 + x8389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8564 = x8560 + x8521;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8565 = x8561 + x8520;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8566 = x8562 + x8548;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8567 = x8563 + x8549;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8568 = x8560 + x8567;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x8569 = x8561 + x8566;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":489:5)
      {
        auto& reg = arg2[153 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8569);
        reg = x8569;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":490:5)
      {
        auto& reg = arg2[155 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8565);
        reg = x8565;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":489:5)
      {
        auto& reg = arg2[154 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8568);
        reg = x8568;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":490:5)
      {
        auto& reg = arg2[156 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8564);
        reg = x8564;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":140:11))
      auto x8570 = arg2[153 * steps + ((cycle - 0) & mask)];
      assert(x8570 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":140:26))
      auto x8571 = arg2[154 * steps + ((cycle - 0) & mask)];
      assert(x8571 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8572 = Fp(x8570.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[159 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8572);
          reg = x8572;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8573 = Fp(x8570.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8574 = x8573 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[160 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8574);
          reg = x8574;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8575 = Fp(x8570.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8576 = x8575 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[161 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8576);
          reg = x8576;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8577 = Fp(x8570.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8578 = x8577 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[162 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8578);
          reg = x8578;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8579 = Fp(x8570.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8580 = x8579 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[163 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8580);
          reg = x8580;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8581 = Fp(x8570.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8582 = x8581 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[164 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8582);
          reg = x8582;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8583 = Fp(x8570.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8584 = x8583 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[165 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8584);
          reg = x8584;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8585 = Fp(x8570.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8586 = x8585 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[166 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8586);
          reg = x8586;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8587 = Fp(x8570.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8588 = x8587 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[167 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8588);
          reg = x8588;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8589 = Fp(x8570.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8590 = x8589 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[168 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8590);
          reg = x8590;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8591 = Fp(x8570.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8592 = x8591 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[169 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8592);
          reg = x8592;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8593 = Fp(x8570.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8594 = x8593 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[170 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8594);
          reg = x8594;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8595 = Fp(x8570.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8596 = x8595 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8596);
          reg = x8596;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8597 = Fp(x8570.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8598 = x8597 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8598);
          reg = x8598;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8599 = Fp(x8570.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8600 = x8599 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[173 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8600);
          reg = x8600;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8601 = Fp(x8570.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8602 = x8601 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[174 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8602);
          reg = x8602;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8603 = arg2[159 * steps + ((cycle - 0) & mask)];
      assert(x8603 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8604 = arg2[160 * steps + ((cycle - 0) & mask)];
      assert(x8604 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8605 = arg2[161 * steps + ((cycle - 0) & mask)];
      assert(x8605 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8606 = arg2[162 * steps + ((cycle - 0) & mask)];
      assert(x8606 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8607 = arg2[163 * steps + ((cycle - 0) & mask)];
      assert(x8607 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8608 = arg2[164 * steps + ((cycle - 0) & mask)];
      assert(x8608 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8609 = arg2[165 * steps + ((cycle - 0) & mask)];
      assert(x8609 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8610 = arg2[166 * steps + ((cycle - 0) & mask)];
      assert(x8610 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8611 = arg2[167 * steps + ((cycle - 0) & mask)];
      assert(x8611 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8612 = arg2[168 * steps + ((cycle - 0) & mask)];
      assert(x8612 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8613 = arg2[169 * steps + ((cycle - 0) & mask)];
      assert(x8613 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8614 = arg2[170 * steps + ((cycle - 0) & mask)];
      assert(x8614 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8615 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x8615 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8616 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x8616 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8617 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x8617 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8618 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x8618 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8619 = x8604 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8620 = x8605 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8621 = x8606 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8622 = x8607 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8623 = x8608 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8624 = x8609 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8625 = x8610 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8626 = x8611 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8627 = x8612 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8628 = x8613 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8629 = x8614 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8630 = x8615 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8631 = x8616 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8632 = x8617 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8633 = x8618 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8634 = x8603 + x8619;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8635 = x8634 + x8620;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8636 = x8635 + x8621;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8637 = x8636 + x8622;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8638 = x8637 + x8623;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8639 = x8638 + x8624;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8640 = x8639 + x8625;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8641 = x8640 + x8626;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8642 = x8641 + x8627;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8643 = x8642 + x8628;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8644 = x8643 + x8629;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8645 = x8644 + x8630;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8646 = x8645 + x8631;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8647 = x8646 + x8632;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8648 = x8647 + x8633;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x8649 = x8570 - x8648;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x8650 = x8649 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":122:26)
        auto x8651 = Fp(x8650.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8651);
          reg = x8651;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8652 = arg2[73 * steps + ((cycle - 0) & mask)];
      assert(x8652 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:20)
      auto x8653 = x8650 - x8652;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:19)
      auto x8654 = x8653 * x75;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:20)
      auto x8655 = x96 - x8654;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
      auto x8656 = x8654 * x8655;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
      assert(x8656 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:124");
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":125:32)
      auto x8657 = x8571 + x8650;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8658 = Fp(x8657.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[175 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8658);
          reg = x8658;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8659 = Fp(x8657.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8660 = x8659 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[176 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8660);
          reg = x8660;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8661 = Fp(x8657.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8662 = x8661 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8662);
          reg = x8662;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8663 = Fp(x8657.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8664 = x8663 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8664);
          reg = x8664;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8665 = Fp(x8657.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8666 = x8665 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8666);
          reg = x8666;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8667 = Fp(x8657.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8668 = x8667 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8668);
          reg = x8668;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8669 = Fp(x8657.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8670 = x8669 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8670);
          reg = x8670;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8671 = Fp(x8657.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8672 = x8671 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8672);
          reg = x8672;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8673 = Fp(x8657.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8674 = x8673 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[183 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8674);
          reg = x8674;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8675 = Fp(x8657.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8676 = x8675 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[184 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8676);
          reg = x8676;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8677 = Fp(x8657.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8678 = x8677 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[185 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8678);
          reg = x8678;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8679 = Fp(x8657.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8680 = x8679 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[186 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8680);
          reg = x8680;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8681 = Fp(x8657.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8682 = x8681 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[187 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8682);
          reg = x8682;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8683 = Fp(x8657.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8684 = x8683 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[188 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8684);
          reg = x8684;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8685 = Fp(x8657.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8686 = x8685 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8686);
          reg = x8686;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8687 = Fp(x8657.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8688 = x8687 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8688);
          reg = x8688;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8689 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x8689 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8690 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x8690 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8691 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x8691 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8692 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x8692 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8693 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x8693 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8694 = arg2[180 * steps + ((cycle - 0) & mask)];
      assert(x8694 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8695 = arg2[181 * steps + ((cycle - 0) & mask)];
      assert(x8695 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8696 = arg2[182 * steps + ((cycle - 0) & mask)];
      assert(x8696 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8697 = arg2[183 * steps + ((cycle - 0) & mask)];
      assert(x8697 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8698 = arg2[184 * steps + ((cycle - 0) & mask)];
      assert(x8698 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8699 = arg2[185 * steps + ((cycle - 0) & mask)];
      assert(x8699 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8700 = arg2[186 * steps + ((cycle - 0) & mask)];
      assert(x8700 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8701 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x8701 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8702 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x8702 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8703 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x8703 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8704 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x8704 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8705 = x8690 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8706 = x8691 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8707 = x8692 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8708 = x8693 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8709 = x8694 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8710 = x8695 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8711 = x8696 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8712 = x8697 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8713 = x8698 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8714 = x8699 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8715 = x8700 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8716 = x8701 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8717 = x8702 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8718 = x8703 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8719 = x8704 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8720 = x8689 + x8705;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8721 = x8720 + x8706;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8722 = x8721 + x8707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8723 = x8722 + x8708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8724 = x8723 + x8709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8725 = x8724 + x8710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8726 = x8725 + x8711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8727 = x8726 + x8712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8728 = x8727 + x8713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8729 = x8728 + x8714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8730 = x8729 + x8715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8731 = x8730 + x8716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8732 = x8731 + x8717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8733 = x8732 + x8718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8734 = x8733 + x8719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x8735 = x8657 - x8734;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x8736 = x8735 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":126:27)
        auto x8737 = Fp(x8736.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8737);
          reg = x8737;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8738 = arg2[74 * steps + ((cycle - 0) & mask)];
      assert(x8738 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:21)
      auto x8739 = x8736 - x8738;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:20)
      auto x8740 = x8739 * x75;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:21)
      auto x8741 = x96 - x8740;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
      auto x8742 = x8740 * x8741;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
      assert(x8742 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:128");
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":140:11))
      auto x8743 = arg2[155 * steps + ((cycle - 0) & mask)];
      assert(x8743 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":140:26))
      auto x8744 = arg2[156 * steps + ((cycle - 0) & mask)];
      assert(x8744 != Fp::invalid());
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8745 = Fp(x8743.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8745);
          reg = x8745;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8746 = Fp(x8743.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8747 = x8746 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8747);
          reg = x8747;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8748 = Fp(x8743.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8749 = x8748 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8749);
          reg = x8749;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8750 = Fp(x8743.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8751 = x8750 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8751);
          reg = x8751;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8752 = Fp(x8743.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8753 = x8752 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8753);
          reg = x8753;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8754 = Fp(x8743.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8755 = x8754 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8755);
          reg = x8755;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8756 = Fp(x8743.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8757 = x8756 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8757);
          reg = x8757;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8758 = Fp(x8743.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8759 = x8758 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8759);
          reg = x8759;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8760 = Fp(x8743.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8761 = x8760 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8761);
          reg = x8761;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8762 = Fp(x8743.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8763 = x8762 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8763);
          reg = x8763;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8764 = Fp(x8743.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8765 = x8764 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8765);
          reg = x8765;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8766 = Fp(x8743.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8767 = x8766 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8767);
          reg = x8767;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8768 = Fp(x8743.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8769 = x8768 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[203 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8769);
          reg = x8769;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8770 = Fp(x8743.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8771 = x8770 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[204 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8771);
          reg = x8771;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8772 = Fp(x8743.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8773 = x8772 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[205 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8773);
          reg = x8773;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8774 = Fp(x8743.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8775 = x8774 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[206 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8775);
          reg = x8775;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8776 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x8776 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8777 = arg2[192 * steps + ((cycle - 0) & mask)];
      assert(x8777 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8778 = arg2[193 * steps + ((cycle - 0) & mask)];
      assert(x8778 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8779 = arg2[194 * steps + ((cycle - 0) & mask)];
      assert(x8779 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8780 = arg2[195 * steps + ((cycle - 0) & mask)];
      assert(x8780 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8781 = arg2[196 * steps + ((cycle - 0) & mask)];
      assert(x8781 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8782 = arg2[197 * steps + ((cycle - 0) & mask)];
      assert(x8782 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8783 = arg2[198 * steps + ((cycle - 0) & mask)];
      assert(x8783 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8784 = arg2[199 * steps + ((cycle - 0) & mask)];
      assert(x8784 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8785 = arg2[200 * steps + ((cycle - 0) & mask)];
      assert(x8785 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8786 = arg2[201 * steps + ((cycle - 0) & mask)];
      assert(x8786 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8787 = arg2[202 * steps + ((cycle - 0) & mask)];
      assert(x8787 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8788 = arg2[203 * steps + ((cycle - 0) & mask)];
      assert(x8788 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8789 = arg2[204 * steps + ((cycle - 0) & mask)];
      assert(x8789 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8790 = arg2[205 * steps + ((cycle - 0) & mask)];
      assert(x8790 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8791 = arg2[206 * steps + ((cycle - 0) & mask)];
      assert(x8791 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8792 = x8777 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8793 = x8778 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8794 = x8779 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8795 = x8780 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8796 = x8781 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8797 = x8782 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8798 = x8783 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8799 = x8784 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8800 = x8785 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8801 = x8786 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8802 = x8787 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8803 = x8788 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8804 = x8789 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8805 = x8790 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8806 = x8791 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8807 = x8776 + x8792;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8808 = x8807 + x8793;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8809 = x8808 + x8794;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8810 = x8809 + x8795;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8811 = x8810 + x8796;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8812 = x8811 + x8797;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8813 = x8812 + x8798;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8814 = x8813 + x8799;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8815 = x8814 + x8800;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8816 = x8815 + x8801;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8817 = x8816 + x8802;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8818 = x8817 + x8803;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8819 = x8818 + x8804;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8820 = x8819 + x8805;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8821 = x8820 + x8806;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x8822 = x8743 - x8821;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x8823 = x8822 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":122:26)
        auto x8824 = Fp(x8823.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8824);
          reg = x8824;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8825 = arg2[75 * steps + ((cycle - 0) & mask)];
      assert(x8825 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:20)
      auto x8826 = x8823 - x8825;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:19)
      auto x8827 = x8826 * x75;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:20)
      auto x8828 = x96 - x8827;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
      auto x8829 = x8827 * x8828;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
      assert(x8829 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:124");
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":125:32)
      auto x8830 = x8744 + x8823;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8831 = Fp(x8830.asUInt32() & x96.asUInt32());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8831);
          reg = x8831;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8832 = Fp(x8830.asUInt32() & x93.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8833 = x8832 * x54;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8833);
          reg = x8833;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8834 = Fp(x8830.asUInt32() & x78.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8835 = x8834 * x75;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8835);
          reg = x8835;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8836 = Fp(x8830.asUInt32() & x64.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8837 = x8836 * x55;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[210 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8837);
          reg = x8837;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8838 = Fp(x8830.asUInt32() & x62.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8839 = x8838 * x56;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[211 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8839);
          reg = x8839;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8840 = Fp(x8830.asUInt32() & x58.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8841 = x8840 * x59;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[212 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8841);
          reg = x8841;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8842 = Fp(x8830.asUInt32() & x52.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8843 = x8842 * x53;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[213 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8843);
          reg = x8843;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8844 = Fp(x8830.asUInt32() & x61.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8845 = x8844 * x60;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[214 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8845);
          reg = x8845;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8846 = Fp(x8830.asUInt32() & x90.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8847 = x8846 * x91;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[215 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8847);
          reg = x8847;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8848 = Fp(x8830.asUInt32() & x21.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8849 = x8848 * x22;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[216 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8849);
          reg = x8849;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8850 = Fp(x8830.asUInt32() & x23.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8851 = x8850 * x20;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[217 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8851);
          reg = x8851;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8852 = Fp(x8830.asUInt32() & x18.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8853 = x8852 * x19;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[218 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8853);
          reg = x8853;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8854 = Fp(x8830.asUInt32() & x16.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8855 = x8854 * x17;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[219 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8855);
          reg = x8855;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8856 = Fp(x8830.asUInt32() & x14.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8857 = x8856 * x15;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[220 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8857);
          reg = x8857;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8858 = Fp(x8830.asUInt32() & x37.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8859 = x8858 * x13;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[221 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8859);
          reg = x8859;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
        auto x8860 = Fp(x8830.asUInt32() & x11.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
        auto x8861 = x8860 * x12;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[222 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8861);
          reg = x8861;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8862 = arg2[207 * steps + ((cycle - 0) & mask)];
      assert(x8862 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8863 = arg2[208 * steps + ((cycle - 0) & mask)];
      assert(x8863 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8864 = arg2[209 * steps + ((cycle - 0) & mask)];
      assert(x8864 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8865 = arg2[210 * steps + ((cycle - 0) & mask)];
      assert(x8865 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8866 = arg2[211 * steps + ((cycle - 0) & mask)];
      assert(x8866 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8867 = arg2[212 * steps + ((cycle - 0) & mask)];
      assert(x8867 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8868 = arg2[213 * steps + ((cycle - 0) & mask)];
      assert(x8868 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8869 = arg2[214 * steps + ((cycle - 0) & mask)];
      assert(x8869 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8870 = arg2[215 * steps + ((cycle - 0) & mask)];
      assert(x8870 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8871 = arg2[216 * steps + ((cycle - 0) & mask)];
      assert(x8871 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8872 = arg2[217 * steps + ((cycle - 0) & mask)];
      assert(x8872 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8873 = arg2[218 * steps + ((cycle - 0) & mask)];
      assert(x8873 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8874 = arg2[219 * steps + ((cycle - 0) & mask)];
      assert(x8874 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8875 = arg2[220 * steps + ((cycle - 0) & mask)];
      assert(x8875 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8876 = arg2[221 * steps + ((cycle - 0) & mask)];
      assert(x8876 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8877 = arg2[222 * steps + ((cycle - 0) & mask)];
      assert(x8877 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8878 = x8863 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8879 = x8864 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8880 = x8865 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8881 = x8866 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8882 = x8867 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8883 = x8868 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8884 = x8869 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8885 = x8870 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8886 = x8871 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8887 = x8872 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8888 = x8873 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8889 = x8874 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8890 = x8875 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8891 = x8876 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
      auto x8892 = x8877 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8893 = x8862 + x8878;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8894 = x8893 + x8879;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8895 = x8894 + x8880;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8896 = x8895 + x8881;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8897 = x8896 + x8882;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8898 = x8897 + x8883;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8899 = x8898 + x8884;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8900 = x8899 + x8885;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8901 = x8900 + x8886;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8902 = x8901 + x8887;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8903 = x8902 + x8888;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8904 = x8903 + x8889;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8905 = x8904 + x8890;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8906 = x8905 + x8891;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
      auto x8907 = x8906 + x8892;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
      auto x8908 = x8830 - x8907;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
      auto x8909 = x8908 * x10;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":126:27)
        auto x8910 = Fp(x8909.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8910);
          reg = x8910;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8911 = arg2[76 * steps + ((cycle - 0) & mask)];
      assert(x8911 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:21)
      auto x8912 = x8909 - x8911;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:20)
      auto x8913 = x8912 * x75;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:21)
      auto x8914 = x96 - x8913;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
      auto x8915 = x8913 * x8914;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
      assert(x8915 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:128");
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[11](Reg)"("./zirgen/components/mux.h":49:25))
    auto x8916 = arg2[111 * steps + ((cycle - 0) & mask)];
    assert(x8916 != Fp::invalid());
    if (x8916 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8917 = arg2[144 * steps + ((cycle - 1) & mask)];
      assert(x8917 != Fp::invalid());
      if (x8917 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[10](Reg)"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":341:72))
        auto x8918 = arg2[110 * steps + ((cycle - 1) & mask)];
        assert(x8918 != Fp::invalid());
        if (x8918 != 0) {
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":344:7)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x7);
            reg = x7;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":345:40))
          auto x8919 = arg2[146 * steps + ((cycle - 1) & mask)];
          assert(x8919 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":345:7)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x8919);
            reg = x8919;
          }
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":347:22)
        auto x8920 = x96 - x8918;
        if (x8920 != 0) {
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":349:7)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x76);
            reg = x76;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":350:44))
          auto x8921 = arg2[146 * steps + ((cycle - 1) & mask)];
          assert(x8921 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":350:44)
          auto x8922 = x8921 - x96;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":350:7)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x8922);
            reg = x8922;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":353:18)
      auto x8923 = x96 - x8917;
      if (x8923 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x8924 = arg2[149 * steps + ((cycle - 1) & mask)];
        assert(x8924 != Fp::invalid());
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[149 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8924);
          reg = x8924;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":356:40))
        auto x8925 = arg2[143 * steps + ((cycle - 1) & mask)];
        assert(x8925 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":356:40)
        auto x8926 = x8925 - x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":356:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8926);
          reg = x8926;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":357:38))
        auto x8927 = arg2[146 * steps + ((cycle - 1) & mask)];
        assert(x8927 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":357:5)
        {
          auto& reg = arg2[146 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8927);
          reg = x8927;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8928 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x8928 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x8929 = (x8928 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[144 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8929);
          reg = x8929;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x8930 = inv(x8928);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[145 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8930);
          reg = x8930;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8931 = arg2[144 * steps + ((cycle - 0) & mask)];
      assert(x8931 != Fp::invalid());
      if (x8931 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x8928 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x8932 = x96 - x8931;
      if (x8932 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x8933 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x8933 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x8934 = x8928 * x8933;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x8935 = x8934 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x8935 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8936 = arg2[149 * steps + ((cycle - 0) & mask)];
      assert(x8936 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":361:15)
      auto x8937 = x96 - x8936;
      if (x8931 != 0) {
        if (x8937 != 0) {
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
        if (x8936 != 0) {
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
        }
      }
      if (x8932 != 0) {
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[150 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":371:38))
      auto x8938 = arg2[140 * steps + ((cycle - 1) & mask)];
      assert(x8938 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":371:3)
      {
        auto& reg = arg2[140 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8938);
        reg = x8938;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":372:40))
      auto x8939 = arg2[139 * steps + ((cycle - 1) & mask)];
      assert(x8939 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":372:3)
      {
        auto& reg = arg2[139 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8939);
        reg = x8939;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8940 = arg2[151 * steps + ((cycle - 1) & mask)];
      assert(x8940 != Fp::invalid());
      // loc("./zirgen/components/bits.h":27:23)
      {
        auto& reg = arg2[151 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8940);
        reg = x8940;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":374:36))
      auto x8941 = arg2[152 * steps + ((cycle - 1) & mask)];
      assert(x8941 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":374:3)
      {
        auto& reg = arg2[152 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8941);
        reg = x8941;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8942 = arg2[146 * steps + ((cycle - 0) & mask)];
      assert(x8942 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x8943 = (x8942 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[147 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8943);
          reg = x8943;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x8944 = inv(x8942);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[148 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8944);
          reg = x8944;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8945 = arg2[147 * steps + ((cycle - 0) & mask)];
      assert(x8945 != Fp::invalid());
      if (x8945 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x8942 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x8946 = x96 - x8945;
      if (x8946 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x8947 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x8947 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x8948 = x8942 * x8947;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x8949 = x8948 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x8949 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x8950 = x963 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x8951 = Fp(x8950.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8951);
          reg = x8951;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x8952 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x8952 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x8953 = x8950 - x8952;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x8954 = x8953 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x8955 = Fp(x8954.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8955);
          reg = x8955;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x8956 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x8956 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x8957 = x8954 - x8956;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x8958 = x8957 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x8959 = Fp(x8958.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8959);
          reg = x8959;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x8960 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x8960 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x8961 = x8958 - x8960;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x8962 = x8961 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x8963 = Fp(x8962.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8963);
          reg = x8963;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8964 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x8964 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x8965 = x8962 - x8964;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x8966 = x8965 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8966);
        reg = x8966;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8967 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x8967 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x8968 = x96 - x8967;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x8969 = x8967 * x8968;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x8969);
        reg = x8969;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x8970 = x93 - x8967;
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x8971 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x8971 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x8972 = x8971 * x8970;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x8972 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      extern_args[0] = x72;
      extern_args[1] = x8936;
      extern_args[2] = x8928;
      extern_args[3] = x8942;
      extern_log(ctx, cycle, "SHA_MAIN: major = %u, minor = %u, count = %u, repeat = %u", extern_args, extern_outs);
      if (x8937 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":384:24)
        auto x8973 = x6 - x8928;
        {
          extern_args[0] = x8973;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x8974 = extern_outs[0];
          auto x8975 = extern_outs[1];
          auto x8976 = extern_outs[2];
          auto x8977 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x8974);
            reg = x8974;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x8975);
            reg = x8975;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x8976);
            reg = x8976;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x8977);
            reg = x8977;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x8978 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x8978 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x8979 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x8979 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x8980 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x8980 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x8981 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x8981 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8973);
          reg = x8973;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8978);
          reg = x8978;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8979);
          reg = x8979;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8980);
          reg = x8980;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x8981);
          reg = x8981;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8982 = arg2[79 * steps + ((cycle - 15) & mask)];
      assert(x8982 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8983 = arg2[80 * steps + ((cycle - 15) & mask)];
      assert(x8983 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8984 = arg2[81 * steps + ((cycle - 15) & mask)];
      assert(x8984 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8985 = arg2[12 * steps + ((cycle - 15) & mask)];
      assert(x8985 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8986 = arg2[13 * steps + ((cycle - 15) & mask)];
      assert(x8986 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8987 = arg2[14 * steps + ((cycle - 15) & mask)];
      assert(x8987 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8988 = arg2[15 * steps + ((cycle - 15) & mask)];
      assert(x8988 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8989 = arg2[16 * steps + ((cycle - 15) & mask)];
      assert(x8989 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8990 = arg2[20 * steps + ((cycle - 15) & mask)];
      assert(x8990 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8991 = arg2[21 * steps + ((cycle - 15) & mask)];
      assert(x8991 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8992 = arg2[22 * steps + ((cycle - 15) & mask)];
      assert(x8992 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8993 = arg2[23 * steps + ((cycle - 15) & mask)];
      assert(x8993 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8994 = arg2[24 * steps + ((cycle - 15) & mask)];
      assert(x8994 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8995 = arg2[25 * steps + ((cycle - 15) & mask)];
      assert(x8995 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8996 = arg2[26 * steps + ((cycle - 15) & mask)];
      assert(x8996 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8997 = arg2[27 * steps + ((cycle - 15) & mask)];
      assert(x8997 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8998 = arg2[28 * steps + ((cycle - 15) & mask)];
      assert(x8998 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x8999 = arg2[29 * steps + ((cycle - 15) & mask)];
      assert(x8999 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9000 = arg2[30 * steps + ((cycle - 15) & mask)];
      assert(x9000 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9001 = arg2[31 * steps + ((cycle - 15) & mask)];
      assert(x9001 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9002 = arg2[32 * steps + ((cycle - 15) & mask)];
      assert(x9002 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9003 = arg2[33 * steps + ((cycle - 15) & mask)];
      assert(x9003 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9004 = arg2[82 * steps + ((cycle - 15) & mask)];
      assert(x9004 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9005 = arg2[83 * steps + ((cycle - 15) & mask)];
      assert(x9005 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9006 = arg2[84 * steps + ((cycle - 15) & mask)];
      assert(x9006 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9007 = arg2[85 * steps + ((cycle - 15) & mask)];
      assert(x9007 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9008 = arg2[86 * steps + ((cycle - 15) & mask)];
      assert(x9008 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9009 = arg2[87 * steps + ((cycle - 15) & mask)];
      assert(x9009 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9010 = arg2[88 * steps + ((cycle - 15) & mask)];
      assert(x9010 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9011 = arg2[17 * steps + ((cycle - 15) & mask)];
      assert(x9011 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9012 = arg2[18 * steps + ((cycle - 15) & mask)];
      assert(x9012 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9013 = arg2[19 * steps + ((cycle - 15) & mask)];
      assert(x9013 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9014 = arg2[12 * steps + ((cycle - 16) & mask)];
      assert(x9014 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9015 = arg2[13 * steps + ((cycle - 16) & mask)];
      assert(x9015 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9016 = arg2[14 * steps + ((cycle - 16) & mask)];
      assert(x9016 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9017 = arg2[15 * steps + ((cycle - 16) & mask)];
      assert(x9017 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9018 = arg2[16 * steps + ((cycle - 16) & mask)];
      assert(x9018 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9019 = arg2[17 * steps + ((cycle - 16) & mask)];
      assert(x9019 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9020 = arg2[18 * steps + ((cycle - 16) & mask)];
      assert(x9020 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9021 = arg2[19 * steps + ((cycle - 16) & mask)];
      assert(x9021 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9022 = arg2[20 * steps + ((cycle - 16) & mask)];
      assert(x9022 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9023 = arg2[21 * steps + ((cycle - 16) & mask)];
      assert(x9023 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9024 = arg2[22 * steps + ((cycle - 16) & mask)];
      assert(x9024 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9025 = arg2[23 * steps + ((cycle - 16) & mask)];
      assert(x9025 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9026 = arg2[24 * steps + ((cycle - 16) & mask)];
      assert(x9026 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9027 = arg2[25 * steps + ((cycle - 16) & mask)];
      assert(x9027 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9028 = arg2[26 * steps + ((cycle - 16) & mask)];
      assert(x9028 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9029 = arg2[27 * steps + ((cycle - 16) & mask)];
      assert(x9029 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9030 = arg2[28 * steps + ((cycle - 16) & mask)];
      assert(x9030 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9031 = arg2[29 * steps + ((cycle - 16) & mask)];
      assert(x9031 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9032 = arg2[30 * steps + ((cycle - 16) & mask)];
      assert(x9032 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9033 = arg2[31 * steps + ((cycle - 16) & mask)];
      assert(x9033 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9034 = arg2[32 * steps + ((cycle - 16) & mask)];
      assert(x9034 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9035 = arg2[33 * steps + ((cycle - 16) & mask)];
      assert(x9035 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9036 = arg2[79 * steps + ((cycle - 16) & mask)];
      assert(x9036 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9037 = arg2[80 * steps + ((cycle - 16) & mask)];
      assert(x9037 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9038 = arg2[81 * steps + ((cycle - 16) & mask)];
      assert(x9038 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9039 = arg2[82 * steps + ((cycle - 16) & mask)];
      assert(x9039 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9040 = arg2[83 * steps + ((cycle - 16) & mask)];
      assert(x9040 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9041 = arg2[84 * steps + ((cycle - 16) & mask)];
      assert(x9041 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9042 = arg2[85 * steps + ((cycle - 16) & mask)];
      assert(x9042 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9043 = arg2[86 * steps + ((cycle - 16) & mask)];
      assert(x9043 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9044 = arg2[87 * steps + ((cycle - 16) & mask)];
      assert(x9044 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9045 = arg2[88 * steps + ((cycle - 16) & mask)];
      assert(x9045 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9046 = arg2[79 * steps + ((cycle - 2) & mask)];
      assert(x9046 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9047 = arg2[80 * steps + ((cycle - 2) & mask)];
      assert(x9047 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9048 = arg2[81 * steps + ((cycle - 2) & mask)];
      assert(x9048 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9049 = arg2[82 * steps + ((cycle - 2) & mask)];
      assert(x9049 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9050 = arg2[83 * steps + ((cycle - 2) & mask)];
      assert(x9050 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9051 = arg2[84 * steps + ((cycle - 2) & mask)];
      assert(x9051 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9052 = arg2[85 * steps + ((cycle - 2) & mask)];
      assert(x9052 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9053 = arg2[86 * steps + ((cycle - 2) & mask)];
      assert(x9053 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9054 = arg2[87 * steps + ((cycle - 2) & mask)];
      assert(x9054 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9055 = arg2[21 * steps + ((cycle - 2) & mask)];
      assert(x9055 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9056 = arg2[22 * steps + ((cycle - 2) & mask)];
      assert(x9056 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9057 = arg2[23 * steps + ((cycle - 2) & mask)];
      assert(x9057 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9058 = arg2[24 * steps + ((cycle - 2) & mask)];
      assert(x9058 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9059 = arg2[25 * steps + ((cycle - 2) & mask)];
      assert(x9059 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9060 = arg2[26 * steps + ((cycle - 2) & mask)];
      assert(x9060 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9061 = arg2[27 * steps + ((cycle - 2) & mask)];
      assert(x9061 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9062 = arg2[28 * steps + ((cycle - 2) & mask)];
      assert(x9062 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9063 = arg2[29 * steps + ((cycle - 2) & mask)];
      assert(x9063 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9064 = arg2[30 * steps + ((cycle - 2) & mask)];
      assert(x9064 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9065 = arg2[31 * steps + ((cycle - 2) & mask)];
      assert(x9065 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9066 = arg2[32 * steps + ((cycle - 2) & mask)];
      assert(x9066 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9067 = arg2[33 * steps + ((cycle - 2) & mask)];
      assert(x9067 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9068 = arg2[88 * steps + ((cycle - 2) & mask)];
      assert(x9068 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9069 = arg2[12 * steps + ((cycle - 2) & mask)];
      assert(x9069 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9070 = arg2[13 * steps + ((cycle - 2) & mask)];
      assert(x9070 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9071 = arg2[14 * steps + ((cycle - 2) & mask)];
      assert(x9071 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9072 = arg2[15 * steps + ((cycle - 2) & mask)];
      assert(x9072 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9073 = arg2[16 * steps + ((cycle - 2) & mask)];
      assert(x9073 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9074 = arg2[17 * steps + ((cycle - 2) & mask)];
      assert(x9074 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9075 = arg2[18 * steps + ((cycle - 2) & mask)];
      assert(x9075 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9076 = arg2[19 * steps + ((cycle - 2) & mask)];
      assert(x9076 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9077 = arg2[20 * steps + ((cycle - 2) & mask)];
      assert(x9077 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9078 = arg2[12 * steps + ((cycle - 7) & mask)];
      assert(x9078 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9079 = arg2[13 * steps + ((cycle - 7) & mask)];
      assert(x9079 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9080 = arg2[14 * steps + ((cycle - 7) & mask)];
      assert(x9080 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9081 = arg2[15 * steps + ((cycle - 7) & mask)];
      assert(x9081 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9082 = arg2[16 * steps + ((cycle - 7) & mask)];
      assert(x9082 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9083 = arg2[17 * steps + ((cycle - 7) & mask)];
      assert(x9083 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9084 = arg2[18 * steps + ((cycle - 7) & mask)];
      assert(x9084 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9085 = arg2[19 * steps + ((cycle - 7) & mask)];
      assert(x9085 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9086 = arg2[20 * steps + ((cycle - 7) & mask)];
      assert(x9086 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9087 = arg2[21 * steps + ((cycle - 7) & mask)];
      assert(x9087 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9088 = arg2[22 * steps + ((cycle - 7) & mask)];
      assert(x9088 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9089 = arg2[23 * steps + ((cycle - 7) & mask)];
      assert(x9089 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9090 = arg2[24 * steps + ((cycle - 7) & mask)];
      assert(x9090 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9091 = arg2[25 * steps + ((cycle - 7) & mask)];
      assert(x9091 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9092 = arg2[26 * steps + ((cycle - 7) & mask)];
      assert(x9092 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9093 = arg2[27 * steps + ((cycle - 7) & mask)];
      assert(x9093 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9094 = arg2[28 * steps + ((cycle - 7) & mask)];
      assert(x9094 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9095 = arg2[29 * steps + ((cycle - 7) & mask)];
      assert(x9095 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9096 = arg2[30 * steps + ((cycle - 7) & mask)];
      assert(x9096 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9097 = arg2[31 * steps + ((cycle - 7) & mask)];
      assert(x9097 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9098 = arg2[32 * steps + ((cycle - 7) & mask)];
      assert(x9098 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9099 = arg2[33 * steps + ((cycle - 7) & mask)];
      assert(x9099 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9100 = arg2[79 * steps + ((cycle - 7) & mask)];
      assert(x9100 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9101 = arg2[80 * steps + ((cycle - 7) & mask)];
      assert(x9101 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9102 = arg2[81 * steps + ((cycle - 7) & mask)];
      assert(x9102 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9103 = arg2[82 * steps + ((cycle - 7) & mask)];
      assert(x9103 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9104 = arg2[83 * steps + ((cycle - 7) & mask)];
      assert(x9104 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9105 = arg2[84 * steps + ((cycle - 7) & mask)];
      assert(x9105 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9106 = arg2[85 * steps + ((cycle - 7) & mask)];
      assert(x9106 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9107 = arg2[86 * steps + ((cycle - 7) & mask)];
      assert(x9107 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9108 = arg2[87 * steps + ((cycle - 7) & mask)];
      assert(x9108 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x9109 = arg2[88 * steps + ((cycle - 7) & mask)];
      assert(x9109 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9110 = x8982 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9111 = x8983 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9112 = x8984 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9113 = x8985 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9114 = x8986 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9115 = x8987 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9116 = x8988 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9117 = x8989 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9118 = x8990 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9119 = x8991 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9120 = x8992 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9121 = x8993 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9122 = x8994 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9123 = x8995 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9124 = x8996 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9125 = x8997 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9126 = x8998 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9127 = x8999 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9128 = x9000 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9129 = x9001 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9130 = x9002 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9131 = x9003 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9132 = x9004 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9133 = x9005 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9134 = x9006 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9135 = x9007 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9136 = x9008 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9137 = x9009 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9138 = x9010 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9139 = x9011 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9140 = x9012 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9141 = x9013 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9142 = x9046 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9143 = x9047 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9144 = x9048 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9145 = x9049 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9146 = x9050 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9147 = x9051 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9148 = x9052 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9149 = x9053 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9150 = x9054 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9151 = x9055 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9152 = x9056 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9153 = x9057 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9154 = x9058 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9155 = x9059 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9156 = x9060 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9157 = x9061 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9158 = x9062 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9159 = x9063 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9160 = x9064 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9161 = x9065 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9162 = x9066 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9163 = x9067 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9164 = x9068 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9165 = x9069 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9166 = x9070 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9167 = x9071 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9168 = x9072 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9169 = x9073 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9170 = x9074 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9171 = x9075 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9172 = x9076 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9173 = x9077 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9174 = x9014 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9175 = x9015 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9176 = x9016 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9177 = x9017 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9178 = x9018 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9179 = x9019 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9180 = x9021 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9181 = x9022 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9182 = x9023 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9183 = x9024 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9184 = x9025 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9185 = x9026 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9186 = x9027 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9187 = x9028 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9188 = x9029 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9189 = x9030 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9190 = x9031 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9191 = x9032 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9192 = x9033 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9193 = x9034 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9194 = x9035 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9195 = x9037 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9196 = x9038 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9197 = x9039 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9198 = x9040 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9199 = x9041 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9200 = x9042 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9201 = x9043 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9202 = x9044 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9203 = x9045 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9204 = x9078 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9205 = x9079 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9206 = x9080 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9207 = x9081 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9208 = x9082 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9209 = x9083 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9210 = x9085 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9211 = x9086 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9212 = x9087 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9213 = x9088 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9214 = x9089 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9215 = x9090 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9216 = x9091 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9217 = x9092 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9218 = x9093 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9219 = x9094 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9220 = x9095 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9221 = x9096 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9222 = x9097 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9223 = x9098 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9224 = x9099 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9225 = x9101 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9226 = x9102 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9227 = x9103 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9228 = x9104 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9229 = x9105 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9230 = x9106 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9231 = x9107 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9232 = x9108 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9233 = x9109 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9234 = x9110 * x9013;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9235 = x9111 * x8990;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9236 = x9112 * x8991;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9237 = x9113 * x8999;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9238 = x9114 * x9000;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9239 = x9115 * x9001;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9240 = x9116 * x9002;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9241 = x9117 * x9003;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9242 = x9118 * x9004;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9243 = x9119 * x9005;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9244 = x9120 * x9006;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9245 = x9121 * x9007;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9246 = x9122 * x9008;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9247 = x9123 * x9009;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9248 = x9124 * x9010;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9249 = x9125 * x8985;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9250 = x9126 * x8986;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9251 = x9127 * x8987;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9252 = x9128 * x8988;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9253 = x9129 * x8989;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9254 = x9130 * x9011;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9255 = x9131 * x9012;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9256 = x9132 * x8992;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9257 = x9133 * x8993;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9258 = x9133 * x9011;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9259 = x9134 * x8994;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9260 = x9134 * x9012;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9261 = x9135 * x8995;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9262 = x9135 * x9013;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9263 = x9136 * x8996;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9264 = x9137 * x8997;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9265 = x9138 * x8998;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9266 = x9142 * x9059;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9267 = x9143 * x9060;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9268 = x9144 * x9061;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9269 = x9145 * x9062;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9270 = x9146 * x9063;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9271 = x9147 * x9064;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9272 = x9148 * x9065;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9273 = x9149 * x9066;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9274 = x9149 * x9068;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9275 = x9150 * x9067;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9276 = x9150 * x9069;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9277 = x9151 * x9069;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9278 = x9152 * x9070;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9279 = x9153 * x9071;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9280 = x9154 * x9072;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9281 = x9155 * x9073;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9282 = x9156 * x9074;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9283 = x9157 * x9075;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9284 = x9158 * x9076;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9285 = x9159 * x9077;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9286 = x9160 * x9055;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9287 = x9161 * x9056;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9288 = x9162 * x9057;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9289 = x9163 * x9058;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9290 = x9164 * x9070;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9291 = x9165 * x9071;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9292 = x9166 * x9072;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9293 = x9167 * x9073;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9294 = x9168 * x9074;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9295 = x9169 * x9075;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9296 = x9170 * x9076;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9297 = x9171 * x9077;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9298 = x8982 + x9013;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9299 = x8983 + x8990;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9300 = x8984 + x8991;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9301 = x8985 + x8999;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9302 = x8986 + x9000;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9303 = x8987 + x9001;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9304 = x8988 + x9002;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9305 = x8989 + x9003;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9306 = x8990 + x9004;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9307 = x8991 + x9005;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9308 = x8992 + x9006;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9309 = x8993 + x9007;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9310 = x8994 + x9008;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9311 = x8995 + x9009;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9312 = x8996 + x9010;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9313 = x8997 + x8985;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9314 = x8998 + x8986;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9315 = x8999 + x8987;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9316 = x9000 + x8988;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9317 = x9001 + x8989;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9318 = x9002 + x9011;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9319 = x9003 + x9012;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9320 = x9004 + x8992;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9321 = x9005 + x8993;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9322 = x9005 + x9011;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9323 = x9006 + x8994;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9324 = x9006 + x9012;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9325 = x9007 + x8995;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9326 = x9007 + x9013;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9327 = x9008 + x8996;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9328 = x9009 + x8997;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9329 = x9010 + x8998;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9330 = x9046 + x9059;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9331 = x9047 + x9060;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9332 = x9048 + x9061;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9333 = x9049 + x9062;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9334 = x9050 + x9063;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9335 = x9051 + x9064;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9336 = x9052 + x9065;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9337 = x9053 + x9066;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9338 = x9053 + x9068;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9339 = x9054 + x9067;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9340 = x9054 + x9069;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9341 = x9055 + x9069;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9342 = x9056 + x9070;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9343 = x9057 + x9071;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9344 = x9058 + x9072;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9345 = x9059 + x9073;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9346 = x9060 + x9074;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9347 = x9061 + x9075;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9348 = x9062 + x9076;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9349 = x9063 + x9077;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9350 = x9064 + x9055;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9351 = x9065 + x9056;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9352 = x9066 + x9057;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9353 = x9067 + x9058;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9354 = x9068 + x9070;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9355 = x9069 + x9071;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9356 = x9070 + x9072;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9357 = x9071 + x9073;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9358 = x9072 + x9074;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9359 = x9073 + x9075;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9360 = x9074 + x9076;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9361 = x9075 + x9077;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9362 = x9322 - x9258;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9363 = x9324 - x9260;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9364 = x9326 - x9262;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9365 = x9338 - x9274;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9366 = x9340 - x9276;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9367 = x9354 - x9290;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9368 = x9355 - x9291;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9369 = x9356 - x9292;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9370 = x9357 - x9293;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9371 = x9358 - x9294;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9372 = x9359 - x9295;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9373 = x9360 - x9296;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9374 = x9361 - x9297;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9375 = x9298 - x9234;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9376 = x9299 - x9235;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9377 = x9300 - x9236;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9378 = x9301 - x9237;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9379 = x9302 - x9238;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9380 = x9303 - x9239;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9381 = x9304 - x9240;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9382 = x9305 - x9241;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9383 = x9306 - x9242;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9384 = x9307 - x9243;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9385 = x9308 - x9244;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9386 = x9309 - x9245;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9387 = x9310 - x9246;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9388 = x9311 - x9247;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9389 = x9312 - x9248;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9390 = x9313 - x9249;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9391 = x9314 - x9250;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9392 = x9315 - x9251;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9393 = x9316 - x9252;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9394 = x9317 - x9253;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9395 = x9318 - x9254;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9396 = x9319 - x9255;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9397 = x9320 - x9256;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9398 = x9321 - x9257;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9399 = x9323 - x9259;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9400 = x9325 - x9261;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9401 = x9327 - x9263;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9402 = x9328 - x9264;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9403 = x9329 - x9265;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9404 = x9330 - x9266;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9405 = x9331 - x9267;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9406 = x9332 - x9268;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9407 = x9333 - x9269;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9408 = x9334 - x9270;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9409 = x9335 - x9271;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9410 = x9336 - x9272;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9411 = x9337 - x9273;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9412 = x9339 - x9275;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9413 = x9341 - x9277;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9414 = x9342 - x9278;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9415 = x9343 - x9279;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9416 = x9344 - x9280;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9417 = x9345 - x9281;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9418 = x9346 - x9282;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9419 = x9347 - x9283;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9420 = x9348 - x9284;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9421 = x9349 - x9285;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9422 = x9350 - x9286;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9423 = x9351 - x9287;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9424 = x9352 - x9288;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9425 = x9353 - x9289;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9426 = x9020 + x9180;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9427 = x9036 + x9195;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9428 = x9084 + x9210;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9429 = x9100 + x9225;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9430 = x8982 + x9379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9431 = x8983 + x9380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9432 = x8984 + x9381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9433 = x8985 + x9386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9434 = x8986 + x9387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9435 = x8987 + x9388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9436 = x8988 + x9389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9437 = x8989 + x9390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9438 = x8990 + x9394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9439 = x8991 + x9395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9440 = x8992 + x9396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9441 = x8993 + x9375;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9442 = x8994 + x9376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9443 = x8995 + x9377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9444 = x8996 + x9397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9445 = x8997 + x9398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9446 = x8998 + x9399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9447 = x8999 + x9400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9448 = x9000 + x9401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9449 = x9001 + x9402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9450 = x9002 + x9403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9451 = x9003 + x9378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9452 = x9004 + x9382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9453 = x9008 + x9383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9454 = x9009 + x9384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9455 = x9010 + x9385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9456 = x9011 + x9391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9457 = x9012 + x9392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9458 = x9013 + x9393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9459 = x9046 + x9406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9460 = x9047 + x9407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9461 = x9048 + x9408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9462 = x9049 + x9409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9463 = x9050 + x9410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9464 = x9051 + x9411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9465 = x9052 + x9412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9466 = x9055 + x9415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9467 = x9056 + x9416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9468 = x9057 + x9417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9469 = x9058 + x9418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9470 = x9059 + x9419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9471 = x9060 + x9420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9472 = x9061 + x9421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9473 = x9062 + x9422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9474 = x9063 + x9423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9475 = x9064 + x9424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9476 = x9065 + x9425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9477 = x9066 + x9404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9478 = x9067 + x9405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9479 = x9076 + x9413;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9480 = x9077 + x9414;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9481 = x9110 * x9379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9482 = x9111 * x9380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9483 = x9112 * x9381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9484 = x9113 * x9386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9485 = x9114 * x9387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9486 = x9115 * x9388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9487 = x9116 * x9389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9488 = x9117 * x9390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9489 = x9118 * x9394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9490 = x9119 * x9395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9491 = x9120 * x9396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9492 = x9121 * x9375;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9493 = x9122 * x9376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9494 = x9123 * x9377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9495 = x9124 * x9397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9496 = x9125 * x9398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9497 = x9126 * x9399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9498 = x9127 * x9400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9499 = x9128 * x9401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9500 = x9129 * x9402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9501 = x9130 * x9403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9502 = x9131 * x9378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9503 = x9132 * x9382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9504 = x9136 * x9383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9505 = x9137 * x9384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9506 = x9138 * x9385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9507 = x9139 * x9391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9508 = x9140 * x9392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9509 = x9141 * x9393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9510 = x9142 * x9406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9511 = x9143 * x9407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9512 = x9144 * x9408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9513 = x9145 * x9409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9514 = x9146 * x9410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9515 = x9147 * x9411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9516 = x9148 * x9412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9517 = x9151 * x9415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9518 = x9152 * x9416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9519 = x9153 * x9417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9520 = x9154 * x9418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9521 = x9155 * x9419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9522 = x9156 * x9420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9523 = x9157 * x9421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9524 = x9158 * x9422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9525 = x9159 * x9423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9526 = x9160 * x9424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9527 = x9161 * x9425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9528 = x9162 * x9404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9529 = x9163 * x9405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9530 = x9172 * x9413;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x9531 = x9173 * x9414;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9532 = x9362 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9533 = x9363 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9534 = x9364 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9535 = x9365 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9536 = x9366 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9537 = x9367 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9538 = x9368 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9539 = x9369 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9540 = x9370 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9541 = x9371 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9542 = x9372 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9543 = x9373 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9544 = x9374 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9545 = x9430 - x9481;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9546 = x9431 - x9482;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9547 = x9432 - x9483;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9548 = x9433 - x9484;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9549 = x9434 - x9485;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9550 = x9435 - x9486;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9551 = x9436 - x9487;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9552 = x9437 - x9488;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9553 = x9438 - x9489;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9554 = x9439 - x9490;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9555 = x9440 - x9491;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9556 = x9441 - x9492;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9557 = x9442 - x9493;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9558 = x9443 - x9494;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9559 = x9444 - x9495;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9560 = x9445 - x9496;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9561 = x9446 - x9497;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9562 = x9447 - x9498;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9563 = x9448 - x9499;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9564 = x9449 - x9500;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9565 = x9450 - x9501;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9566 = x9451 - x9502;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9567 = x9452 - x9503;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9568 = x9453 - x9504;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9569 = x9454 - x9505;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9570 = x9455 - x9506;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9571 = x9456 - x9507;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9572 = x9457 - x9508;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9573 = x9458 - x9509;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9574 = x9459 - x9510;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9575 = x9460 - x9511;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9576 = x9461 - x9512;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9577 = x9462 - x9513;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9578 = x9463 - x9514;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9579 = x9464 - x9515;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9580 = x9465 - x9516;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9581 = x9466 - x9517;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9582 = x9467 - x9518;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9583 = x9468 - x9519;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9584 = x9469 - x9520;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9585 = x9470 - x9521;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9586 = x9471 - x9522;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9587 = x9472 - x9523;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9588 = x9473 - x9524;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9589 = x9474 - x9525;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9590 = x9475 - x9526;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9591 = x9476 - x9527;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9592 = x9477 - x9528;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9593 = x9478 - x9529;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9594 = x9479 - x9530;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x9595 = x9480 - x9531;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9596 = x9426 + x9181;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9597 = x9427 + x9196;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9598 = x9428 + x9211;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9599 = x9429 + x9226;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9600 = x9545 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9601 = x9546 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9602 = x9547 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9603 = x9548 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9604 = x9549 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9605 = x9550 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9606 = x9551 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9607 = x9552 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9608 = x9553 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9609 = x9554 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9610 = x9555 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9611 = x9556 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9612 = x9557 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9613 = x9559 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9614 = x9560 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9615 = x9561 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9616 = x9562 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9617 = x9563 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9618 = x9564 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9619 = x9565 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9620 = x9566 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9621 = x9567 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9622 = x9569 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9623 = x9570 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9624 = x9571 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9625 = x9572 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9626 = x9573 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9627 = x9574 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9628 = x9576 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9629 = x9577 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9630 = x9578 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9631 = x9579 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9632 = x9580 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9633 = x9581 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9634 = x9582 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9635 = x9583 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9636 = x9584 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9637 = x9585 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9638 = x9586 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9639 = x9587 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9640 = x9588 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9641 = x9589 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9642 = x9590 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9643 = x9591 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9644 = x9592 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9645 = x9593 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x9646 = x9595 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9647 = x9596 + x9182;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9648 = x9597 + x9197;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9649 = x9598 + x9212;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9650 = x9599 + x9227;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9651 = x9647 + x9183;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9652 = x9648 + x9198;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9653 = x9649 + x9213;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9654 = x9650 + x9228;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9655 = x9558 + x9613;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9656 = x9568 + x9622;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9657 = x9575 + x9628;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9658 = x9594 + x9646;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9659 = x9651 + x9184;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9660 = x9652 + x9199;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9661 = x9653 + x9214;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9662 = x9654 + x9229;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9663 = x9655 + x9614;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9664 = x9656 + x9623;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9665 = x9657 + x9629;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9666 = x9658 + x9633;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9667 = x9659 + x9185;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9668 = x9660 + x9200;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9669 = x9661 + x9215;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9670 = x9662 + x9230;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9671 = x9663 + x9615;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9672 = x9664 + x9603;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9673 = x9665 + x9630;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9674 = x9666 + x9634;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9675 = x9667 + x9186;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9676 = x9668 + x9201;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9677 = x9669 + x9216;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9678 = x9670 + x9231;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9679 = x9671 + x9616;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9680 = x9672 + x9604;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9681 = x9673 + x9631;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9682 = x9674 + x9635;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9683 = x9675 + x9187;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9684 = x9676 + x9202;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9685 = x9677 + x9217;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9686 = x9678 + x9232;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9687 = x9679 + x9617;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9688 = x9680 + x9605;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9689 = x9681 + x9632;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9690 = x9682 + x9636;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9691 = x9683 + x9188;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9692 = x9684 + x9203;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9693 = x9685 + x9218;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9694 = x9686 + x9233;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9695 = x9687 + x9618;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9696 = x9688 + x9606;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9697 = x9689 + x9535;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9698 = x9690 + x9637;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9699 = x9691 + x9189;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9700 = x9692 + x9174;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9701 = x9693 + x9219;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9702 = x9694 + x9204;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9703 = x9695 + x9619;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9704 = x9696 + x9607;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9705 = x9697 + x9536;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9706 = x9698 + x9638;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9707 = x9699 + x9190;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9708 = x9700 + x9175;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9709 = x9701 + x9220;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9710 = x9702 + x9205;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9711 = x9703 + x9620;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9712 = x9704 + x9624;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9713 = x9705 + x9537;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9714 = x9706 + x9639;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9715 = x9707 + x9191;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9716 = x9708 + x9176;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9717 = x9709 + x9221;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9718 = x9710 + x9206;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9719 = x9711 + x9600;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9720 = x9712 + x9625;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9721 = x9713 + x9538;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9722 = x9714 + x9640;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9723 = x9715 + x9192;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9724 = x9716 + x9177;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9725 = x9717 + x9222;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9726 = x9718 + x9207;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9727 = x9719 + x9601;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9728 = x9720 + x9626;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9729 = x9721 + x9539;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9730 = x9722 + x9641;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9731 = x9723 + x9193;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9732 = x9724 + x9178;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9733 = x9725 + x9223;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9734 = x9726 + x9208;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9735 = x9727 + x9602;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9736 = x9728 + x9608;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9737 = x9729 + x9540;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9738 = x9730 + x9642;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9739 = x9731 + x9194;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9740 = x9732 + x9179;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9741 = x9733 + x9224;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9742 = x9734 + x9209;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9743 = x9735 + x9621;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9744 = x9736 + x9609;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9745 = x9737 + x9541;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9746 = x9738 + x9643;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9747 = x9743 + x9532;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9748 = x9744 + x9610;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9749 = x9745 + x9542;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9750 = x9746 + x9644;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9751 = x9747 + x9533;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9752 = x9748 + x9611;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9753 = x9749 + x9543;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9754 = x9750 + x9645;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9755 = x9753 + x9544;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9756 = x9754 + x9627;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9757 = x9751 + x9534;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x9758 = x9752 + x9612;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x9759 = x9741 + x9755;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x9760 = x9742 + x9756;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x9761 = x9757 + x9759;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x9762 = x9758 + x9760;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x9763 = x9739 + x9761;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x9764 = x9740 + x9762;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":460:5)
      {
        auto& reg = arg2[157 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x9764);
        reg = x9764;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":460:5)
      {
        auto& reg = arg2[158 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x9763);
        reg = x9763;
      }
      if (x8936 != 0) {
        {
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[12 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[13 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[14 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[15 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[16 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[17 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9765 = arg2[12 * steps + ((cycle - 0) & mask)];
        assert(x9765 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9766 = arg2[13 * steps + ((cycle - 0) & mask)];
        assert(x9766 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9767 = arg2[14 * steps + ((cycle - 0) & mask)];
        assert(x9767 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9768 = arg2[15 * steps + ((cycle - 0) & mask)];
        assert(x9768 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9769 = arg2[16 * steps + ((cycle - 0) & mask)];
        assert(x9769 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9770 = arg2[17 * steps + ((cycle - 0) & mask)];
        assert(x9770 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9771 = arg2[79 * steps + ((cycle - 0) & mask)];
        assert(x9771 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9772 = arg2[80 * steps + ((cycle - 0) & mask)];
        assert(x9772 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9773 = arg2[81 * steps + ((cycle - 0) & mask)];
        assert(x9773 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9774 = arg2[82 * steps + ((cycle - 0) & mask)];
        assert(x9774 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9775 = arg2[83 * steps + ((cycle - 0) & mask)];
        assert(x9775 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9776 = arg2[84 * steps + ((cycle - 0) & mask)];
        assert(x9776 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9777 = arg2[85 * steps + ((cycle - 0) & mask)];
        assert(x9777 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9778 = arg2[86 * steps + ((cycle - 0) & mask)];
        assert(x9778 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9779 = arg2[87 * steps + ((cycle - 0) & mask)];
        assert(x9779 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9780 = arg2[88 * steps + ((cycle - 0) & mask)];
        assert(x9780 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9781 = x9765 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9782 = x9766 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9783 = x9767 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9784 = x9768 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9785 = x9769 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9786 = x9770 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9787 = x9772 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9788 = x9773 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9789 = x9774 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9790 = x9775 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9791 = x9776 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9792 = x9777 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9793 = x9778 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9794 = x9779 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9795 = x9780 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9796 = x9771 + x9787;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9797 = x9796 + x9788;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9798 = x9797 + x9789;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9799 = x9798 + x9790;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9800 = x9799 + x9791;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9801 = x9800 + x9792;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9802 = x9801 + x9793;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9803 = x9802 + x9794;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9804 = x9803 + x9795;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9805 = x9804 + x9781;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9806 = x9805 + x9782;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9807 = x9806 + x9783;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9808 = x9807 + x9784;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9809 = x9808 + x9785;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9810 = x9809 + x9786;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x9811 = x95 - x9810;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x9812 = x9811 * x10;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9812);
          reg = x9812;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9813 = arg2[77 * steps + ((cycle - 0) & mask)];
        assert(x9813 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9814 = Fp(x9813.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[18 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9814);
            reg = x9814;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9815 = Fp(x9813.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9816 = x9815 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9816);
            reg = x9816;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9817 = Fp(x9813.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9818 = x9817 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[20 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9818);
            reg = x9818;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9819 = Fp(x9813.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9820 = x9819 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9820);
            reg = x9820;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9821 = Fp(x9813.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9822 = x9821 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9822);
            reg = x9822;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9823 = Fp(x9813.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9824 = x9823 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9824);
            reg = x9824;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9825 = Fp(x9813.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9826 = x9825 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9826);
            reg = x9826;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9827 = Fp(x9813.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9828 = x9827 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9828);
            reg = x9828;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9829 = Fp(x9813.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9830 = x9829 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9830);
            reg = x9830;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9831 = Fp(x9813.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9832 = x9831 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9832);
            reg = x9832;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9833 = Fp(x9813.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9834 = x9833 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9834);
            reg = x9834;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9835 = Fp(x9813.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9836 = x9835 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9836);
            reg = x9836;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9837 = Fp(x9813.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9838 = x9837 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9838);
            reg = x9838;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9839 = Fp(x9813.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9840 = x9839 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9840);
            reg = x9840;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9841 = Fp(x9813.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9842 = x9841 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9842);
            reg = x9842;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9843 = Fp(x9813.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9844 = x9843 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9844);
            reg = x9844;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9845 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x9845 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9846 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x9846 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9847 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x9847 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9848 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x9848 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9849 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x9849 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9850 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x9850 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9851 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x9851 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9852 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x9852 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9853 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x9853 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9854 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x9854 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9855 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x9855 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9856 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x9856 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9857 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x9857 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9858 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x9858 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9859 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x9859 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9860 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x9860 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9861 = x9846 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9862 = x9847 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9863 = x9848 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9864 = x9849 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9865 = x9850 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9866 = x9851 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9867 = x9852 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9868 = x9853 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9869 = x9854 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9870 = x9855 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9871 = x9856 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9872 = x9857 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9873 = x9858 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9874 = x9859 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9875 = x9860 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9876 = x9845 + x9861;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9877 = x9876 + x9862;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9878 = x9877 + x9863;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9879 = x9878 + x9864;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9880 = x9879 + x9865;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9881 = x9880 + x9866;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9882 = x9881 + x9867;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9883 = x9882 + x9868;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9884 = x9883 + x9869;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9885 = x9884 + x9870;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9886 = x9885 + x9871;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9887 = x9886 + x9872;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9888 = x9887 + x9873;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9889 = x9888 + x9874;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9890 = x9889 + x9875;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x9891 = x9813 - x9890;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x9892 = x9891 * x10;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9892);
          reg = x9892;
        }
      }
      if (x8937 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":140:11))
        auto x9893 = arg2[157 * steps + ((cycle - 0) & mask)];
        assert(x9893 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":140:26))
        auto x9894 = arg2[158 * steps + ((cycle - 0) & mask)];
        assert(x9894 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9895 = Fp(x9893.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9895);
            reg = x9895;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9896 = Fp(x9893.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9897 = x9896 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9897);
            reg = x9897;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9898 = Fp(x9893.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9899 = x9898 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9899);
            reg = x9899;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9900 = Fp(x9893.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9901 = x9900 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9901);
            reg = x9901;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9902 = Fp(x9893.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9903 = x9902 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9903);
            reg = x9903;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9904 = Fp(x9893.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9905 = x9904 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9905);
            reg = x9905;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9906 = Fp(x9893.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9907 = x9906 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9907);
            reg = x9907;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9908 = Fp(x9893.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9909 = x9908 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9909);
            reg = x9909;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9910 = Fp(x9893.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9911 = x9910 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9911);
            reg = x9911;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9912 = Fp(x9893.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9913 = x9912 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9913);
            reg = x9913;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9914 = Fp(x9893.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9915 = x9914 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[12 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9915);
            reg = x9915;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9916 = Fp(x9893.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9917 = x9916 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[13 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9917);
            reg = x9917;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9918 = Fp(x9893.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9919 = x9918 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[14 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9919);
            reg = x9919;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9920 = Fp(x9893.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9921 = x9920 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[15 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9921);
            reg = x9921;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9922 = Fp(x9893.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9923 = x9922 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[16 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9923);
            reg = x9923;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9924 = Fp(x9893.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9925 = x9924 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[17 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9925);
            reg = x9925;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9926 = arg2[12 * steps + ((cycle - 0) & mask)];
        assert(x9926 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9927 = arg2[13 * steps + ((cycle - 0) & mask)];
        assert(x9927 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9928 = arg2[14 * steps + ((cycle - 0) & mask)];
        assert(x9928 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9929 = arg2[15 * steps + ((cycle - 0) & mask)];
        assert(x9929 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9930 = arg2[16 * steps + ((cycle - 0) & mask)];
        assert(x9930 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9931 = arg2[17 * steps + ((cycle - 0) & mask)];
        assert(x9931 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9932 = arg2[79 * steps + ((cycle - 0) & mask)];
        assert(x9932 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9933 = arg2[80 * steps + ((cycle - 0) & mask)];
        assert(x9933 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9934 = arg2[81 * steps + ((cycle - 0) & mask)];
        assert(x9934 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9935 = arg2[82 * steps + ((cycle - 0) & mask)];
        assert(x9935 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9936 = arg2[83 * steps + ((cycle - 0) & mask)];
        assert(x9936 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9937 = arg2[84 * steps + ((cycle - 0) & mask)];
        assert(x9937 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9938 = arg2[85 * steps + ((cycle - 0) & mask)];
        assert(x9938 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9939 = arg2[86 * steps + ((cycle - 0) & mask)];
        assert(x9939 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9940 = arg2[87 * steps + ((cycle - 0) & mask)];
        assert(x9940 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9941 = arg2[88 * steps + ((cycle - 0) & mask)];
        assert(x9941 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9942 = x9926 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9943 = x9927 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9944 = x9928 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9945 = x9929 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9946 = x9930 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9947 = x9931 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9948 = x9933 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9949 = x9934 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9950 = x9935 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9951 = x9936 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9952 = x9937 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9953 = x9938 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9954 = x9939 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9955 = x9940 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x9956 = x9941 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9957 = x9932 + x9948;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9958 = x9957 + x9949;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9959 = x9958 + x9950;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9960 = x9959 + x9951;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9961 = x9960 + x9952;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9962 = x9961 + x9953;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9963 = x9962 + x9954;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9964 = x9963 + x9955;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9965 = x9964 + x9956;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9966 = x9965 + x9942;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9967 = x9966 + x9943;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9968 = x9967 + x9944;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9969 = x9968 + x9945;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9970 = x9969 + x9946;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x9971 = x9970 + x9947;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x9972 = x9893 - x9971;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x9973 = x9972 * x10;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x9973);
          reg = x9973;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x9974 = arg2[77 * steps + ((cycle - 0) & mask)];
        assert(x9974 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":117:30)
        auto x9975 = x9894 + x9974;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9976 = Fp(x9975.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[18 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9976);
            reg = x9976;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9977 = Fp(x9975.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9978 = x9977 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[19 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9978);
            reg = x9978;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9979 = Fp(x9975.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9980 = x9979 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[20 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9980);
            reg = x9980;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9981 = Fp(x9975.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9982 = x9981 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9982);
            reg = x9982;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9983 = Fp(x9975.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9984 = x9983 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9984);
            reg = x9984;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9985 = Fp(x9975.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9986 = x9985 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9986);
            reg = x9986;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9987 = Fp(x9975.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9988 = x9987 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9988);
            reg = x9988;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9989 = Fp(x9975.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9990 = x9989 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9990);
            reg = x9990;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9991 = Fp(x9975.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9992 = x9991 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9992);
            reg = x9992;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9993 = Fp(x9975.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9994 = x9993 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9994);
            reg = x9994;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9995 = Fp(x9975.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9996 = x9995 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9996);
            reg = x9996;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9997 = Fp(x9975.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x9998 = x9997 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x9998);
            reg = x9998;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x9999 = Fp(x9975.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10000 = x9999 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10000);
            reg = x10000;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10001 = Fp(x9975.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10002 = x10001 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10002);
            reg = x10002;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10003 = Fp(x9975.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10004 = x10003 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10004);
            reg = x10004;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10005 = Fp(x9975.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10006 = x10005 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10006);
            reg = x10006;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10007 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x10007 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10008 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x10008 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10009 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x10009 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10010 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x10010 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10011 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x10011 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10012 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x10012 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10013 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x10013 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10014 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x10014 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10015 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x10015 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10016 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x10016 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10017 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x10017 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10018 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x10018 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10019 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x10019 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10020 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x10020 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10021 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x10021 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10022 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x10022 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10023 = x10008 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10024 = x10009 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10025 = x10010 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10026 = x10011 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10027 = x10012 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10028 = x10013 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10029 = x10014 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10030 = x10015 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10031 = x10016 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10032 = x10017 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10033 = x10018 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10034 = x10019 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10035 = x10020 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10036 = x10021 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10037 = x10022 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10038 = x10007 + x10023;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10039 = x10038 + x10024;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10040 = x10039 + x10025;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10041 = x10040 + x10026;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10042 = x10041 + x10027;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10043 = x10042 + x10028;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10044 = x10043 + x10029;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10045 = x10044 + x10030;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10046 = x10045 + x10031;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10047 = x10046 + x10032;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10048 = x10047 + x10033;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10049 = x10048 + x10034;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10050 = x10049 + x10035;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10051 = x10050 + x10036;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10052 = x10051 + x10037;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x10053 = x9975 - x10052;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x10054 = x10053 * x10;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x10054);
          reg = x10054;
        }
      }
      if (x8936 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10055 = arg2[159 * steps + ((cycle - 4) & mask)];
        assert(x10055 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10056 = arg2[160 * steps + ((cycle - 4) & mask)];
        assert(x10056 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10057 = arg2[161 * steps + ((cycle - 4) & mask)];
        assert(x10057 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10058 = arg2[162 * steps + ((cycle - 4) & mask)];
        assert(x10058 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10059 = arg2[163 * steps + ((cycle - 4) & mask)];
        assert(x10059 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10060 = arg2[164 * steps + ((cycle - 4) & mask)];
        assert(x10060 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10061 = arg2[165 * steps + ((cycle - 4) & mask)];
        assert(x10061 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10062 = arg2[166 * steps + ((cycle - 4) & mask)];
        assert(x10062 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10063 = arg2[167 * steps + ((cycle - 4) & mask)];
        assert(x10063 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10064 = arg2[168 * steps + ((cycle - 4) & mask)];
        assert(x10064 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10065 = arg2[169 * steps + ((cycle - 4) & mask)];
        assert(x10065 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10066 = arg2[170 * steps + ((cycle - 4) & mask)];
        assert(x10066 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10067 = arg2[171 * steps + ((cycle - 4) & mask)];
        assert(x10067 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10068 = arg2[172 * steps + ((cycle - 4) & mask)];
        assert(x10068 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10069 = arg2[173 * steps + ((cycle - 4) & mask)];
        assert(x10069 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10070 = arg2[174 * steps + ((cycle - 4) & mask)];
        assert(x10070 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10071 = arg2[175 * steps + ((cycle - 4) & mask)];
        assert(x10071 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10072 = arg2[176 * steps + ((cycle - 4) & mask)];
        assert(x10072 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10073 = arg2[177 * steps + ((cycle - 4) & mask)];
        assert(x10073 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10074 = arg2[178 * steps + ((cycle - 4) & mask)];
        assert(x10074 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10075 = arg2[179 * steps + ((cycle - 4) & mask)];
        assert(x10075 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10076 = arg2[180 * steps + ((cycle - 4) & mask)];
        assert(x10076 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10077 = arg2[181 * steps + ((cycle - 4) & mask)];
        assert(x10077 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10078 = arg2[182 * steps + ((cycle - 4) & mask)];
        assert(x10078 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10079 = arg2[183 * steps + ((cycle - 4) & mask)];
        assert(x10079 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10080 = arg2[184 * steps + ((cycle - 4) & mask)];
        assert(x10080 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10081 = arg2[185 * steps + ((cycle - 4) & mask)];
        assert(x10081 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10082 = arg2[186 * steps + ((cycle - 4) & mask)];
        assert(x10082 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10083 = arg2[187 * steps + ((cycle - 4) & mask)];
        assert(x10083 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10084 = arg2[188 * steps + ((cycle - 4) & mask)];
        assert(x10084 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10085 = arg2[189 * steps + ((cycle - 4) & mask)];
        assert(x10085 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10086 = arg2[190 * steps + ((cycle - 4) & mask)];
        assert(x10086 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10087 = arg2[159 * steps + ((cycle - 68) & mask)];
        assert(x10087 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10088 = arg2[160 * steps + ((cycle - 68) & mask)];
        assert(x10088 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10089 = arg2[161 * steps + ((cycle - 68) & mask)];
        assert(x10089 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10090 = arg2[162 * steps + ((cycle - 68) & mask)];
        assert(x10090 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10091 = arg2[163 * steps + ((cycle - 68) & mask)];
        assert(x10091 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10092 = arg2[164 * steps + ((cycle - 68) & mask)];
        assert(x10092 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10093 = arg2[165 * steps + ((cycle - 68) & mask)];
        assert(x10093 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10094 = arg2[166 * steps + ((cycle - 68) & mask)];
        assert(x10094 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10095 = arg2[167 * steps + ((cycle - 68) & mask)];
        assert(x10095 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10096 = arg2[168 * steps + ((cycle - 68) & mask)];
        assert(x10096 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10097 = arg2[169 * steps + ((cycle - 68) & mask)];
        assert(x10097 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10098 = arg2[170 * steps + ((cycle - 68) & mask)];
        assert(x10098 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10099 = arg2[171 * steps + ((cycle - 68) & mask)];
        assert(x10099 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10100 = arg2[172 * steps + ((cycle - 68) & mask)];
        assert(x10100 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10101 = arg2[173 * steps + ((cycle - 68) & mask)];
        assert(x10101 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10102 = arg2[174 * steps + ((cycle - 68) & mask)];
        assert(x10102 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10103 = arg2[175 * steps + ((cycle - 68) & mask)];
        assert(x10103 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10104 = arg2[176 * steps + ((cycle - 68) & mask)];
        assert(x10104 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10105 = arg2[177 * steps + ((cycle - 68) & mask)];
        assert(x10105 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10106 = arg2[178 * steps + ((cycle - 68) & mask)];
        assert(x10106 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10107 = arg2[179 * steps + ((cycle - 68) & mask)];
        assert(x10107 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10108 = arg2[180 * steps + ((cycle - 68) & mask)];
        assert(x10108 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10109 = arg2[181 * steps + ((cycle - 68) & mask)];
        assert(x10109 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10110 = arg2[182 * steps + ((cycle - 68) & mask)];
        assert(x10110 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10111 = arg2[183 * steps + ((cycle - 68) & mask)];
        assert(x10111 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10112 = arg2[184 * steps + ((cycle - 68) & mask)];
        assert(x10112 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10113 = arg2[185 * steps + ((cycle - 68) & mask)];
        assert(x10113 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10114 = arg2[186 * steps + ((cycle - 68) & mask)];
        assert(x10114 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10115 = arg2[187 * steps + ((cycle - 68) & mask)];
        assert(x10115 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10116 = arg2[188 * steps + ((cycle - 68) & mask)];
        assert(x10116 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10117 = arg2[189 * steps + ((cycle - 68) & mask)];
        assert(x10117 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10118 = arg2[190 * steps + ((cycle - 68) & mask)];
        assert(x10118 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10119 = x10056 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10120 = x10057 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10121 = x10058 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10122 = x10059 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10123 = x10060 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10124 = x10061 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10125 = x10062 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10126 = x10063 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10127 = x10064 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10128 = x10065 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10129 = x10066 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10130 = x10067 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10131 = x10068 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10132 = x10069 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10133 = x10070 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10134 = x10072 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10135 = x10073 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10136 = x10074 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10137 = x10075 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10138 = x10076 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10139 = x10077 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10140 = x10078 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10141 = x10079 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10142 = x10080 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10143 = x10081 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10144 = x10082 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10145 = x10083 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10146 = x10084 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10147 = x10085 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10148 = x10086 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10149 = x10088 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10150 = x10089 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10151 = x10090 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10152 = x10091 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10153 = x10092 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10154 = x10093 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10155 = x10094 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10156 = x10095 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10157 = x10096 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10158 = x10097 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10159 = x10098 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10160 = x10099 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10161 = x10100 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10162 = x10101 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10163 = x10102 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10164 = x10104 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10165 = x10105 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10166 = x10106 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10167 = x10107 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10168 = x10108 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10169 = x10109 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10170 = x10110 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10171 = x10111 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10172 = x10112 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10173 = x10113 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10174 = x10114 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10175 = x10115 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10176 = x10116 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10177 = x10117 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10178 = x10118 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10179 = x10055 + x10119;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10180 = x10071 + x10134;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10181 = x10087 + x10149;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10182 = x10103 + x10164;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10183 = x10179 + x10120;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10184 = x10180 + x10135;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10185 = x10181 + x10150;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10186 = x10182 + x10165;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10187 = x10183 + x10121;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10188 = x10184 + x10136;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10189 = x10185 + x10151;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10190 = x10186 + x10166;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10191 = x10187 + x10122;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10192 = x10188 + x10137;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10193 = x10189 + x10152;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10194 = x10190 + x10167;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10195 = x10191 + x10123;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10196 = x10192 + x10138;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10197 = x10193 + x10153;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10198 = x10194 + x10168;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10199 = x10195 + x10124;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10200 = x10196 + x10139;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10201 = x10197 + x10154;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10202 = x10198 + x10169;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10203 = x10199 + x10125;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10204 = x10200 + x10140;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10205 = x10201 + x10155;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10206 = x10202 + x10170;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10207 = x10203 + x10126;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10208 = x10204 + x10141;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10209 = x10205 + x10156;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10210 = x10206 + x10171;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10211 = x10207 + x10127;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10212 = x10208 + x10142;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10213 = x10209 + x10157;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10214 = x10210 + x10172;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10215 = x10211 + x10128;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10216 = x10212 + x10143;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10217 = x10213 + x10158;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10218 = x10214 + x10173;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10219 = x10215 + x10129;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10220 = x10216 + x10144;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10221 = x10217 + x10159;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10222 = x10218 + x10174;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10223 = x10219 + x10130;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10224 = x10220 + x10145;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10225 = x10221 + x10160;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10226 = x10222 + x10175;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10227 = x10223 + x10131;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10228 = x10224 + x10146;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10229 = x10225 + x10161;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10230 = x10226 + x10176;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10231 = x10227 + x10132;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10232 = x10228 + x10147;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10233 = x10229 + x10162;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10234 = x10230 + x10177;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10235 = x10233 + x10163;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10236 = x10234 + x10178;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10237 = x10231 + x10133;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10238 = x10232 + x10148;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
        auto x10239 = x10237 + x10235;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
        auto x10240 = x10238 + x10236;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10241 = Fp(x10239.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[159 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10241);
            reg = x10241;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10242 = Fp(x10239.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10243 = x10242 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[160 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10243);
            reg = x10243;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10244 = Fp(x10239.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10245 = x10244 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[161 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10245);
            reg = x10245;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10246 = Fp(x10239.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10247 = x10246 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[162 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10247);
            reg = x10247;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10248 = Fp(x10239.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10249 = x10248 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[163 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10249);
            reg = x10249;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10250 = Fp(x10239.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10251 = x10250 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[164 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10251);
            reg = x10251;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10252 = Fp(x10239.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10253 = x10252 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[165 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10253);
            reg = x10253;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10254 = Fp(x10239.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10255 = x10254 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[166 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10255);
            reg = x10255;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10256 = Fp(x10239.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10257 = x10256 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[167 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10257);
            reg = x10257;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10258 = Fp(x10239.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10259 = x10258 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[168 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10259);
            reg = x10259;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10260 = Fp(x10239.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10261 = x10260 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[169 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10261);
            reg = x10261;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10262 = Fp(x10239.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10263 = x10262 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[170 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10263);
            reg = x10263;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10264 = Fp(x10239.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10265 = x10264 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[171 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10265);
            reg = x10265;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10266 = Fp(x10239.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10267 = x10266 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[172 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10267);
            reg = x10267;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10268 = Fp(x10239.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10269 = x10268 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10269);
            reg = x10269;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10270 = Fp(x10239.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10271 = x10270 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[174 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10271);
            reg = x10271;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10272 = arg2[159 * steps + ((cycle - 0) & mask)];
        assert(x10272 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10273 = arg2[160 * steps + ((cycle - 0) & mask)];
        assert(x10273 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10274 = arg2[161 * steps + ((cycle - 0) & mask)];
        assert(x10274 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10275 = arg2[162 * steps + ((cycle - 0) & mask)];
        assert(x10275 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10276 = arg2[163 * steps + ((cycle - 0) & mask)];
        assert(x10276 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10277 = arg2[164 * steps + ((cycle - 0) & mask)];
        assert(x10277 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10278 = arg2[165 * steps + ((cycle - 0) & mask)];
        assert(x10278 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10279 = arg2[166 * steps + ((cycle - 0) & mask)];
        assert(x10279 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10280 = arg2[167 * steps + ((cycle - 0) & mask)];
        assert(x10280 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10281 = arg2[168 * steps + ((cycle - 0) & mask)];
        assert(x10281 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10282 = arg2[169 * steps + ((cycle - 0) & mask)];
        assert(x10282 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10283 = arg2[170 * steps + ((cycle - 0) & mask)];
        assert(x10283 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10284 = arg2[171 * steps + ((cycle - 0) & mask)];
        assert(x10284 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10285 = arg2[172 * steps + ((cycle - 0) & mask)];
        assert(x10285 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10286 = arg2[173 * steps + ((cycle - 0) & mask)];
        assert(x10286 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10287 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x10287 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10288 = x10273 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10289 = x10274 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10290 = x10275 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10291 = x10276 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10292 = x10277 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10293 = x10278 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10294 = x10279 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10295 = x10280 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10296 = x10281 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10297 = x10282 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10298 = x10283 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10299 = x10284 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10300 = x10285 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10301 = x10286 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10302 = x10287 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10303 = x10272 + x10288;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10304 = x10303 + x10289;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10305 = x10304 + x10290;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10306 = x10305 + x10291;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10307 = x10306 + x10292;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10308 = x10307 + x10293;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10309 = x10308 + x10294;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10310 = x10309 + x10295;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10311 = x10310 + x10296;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10312 = x10311 + x10297;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10313 = x10312 + x10298;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10314 = x10313 + x10299;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10315 = x10314 + x10300;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10316 = x10315 + x10301;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10317 = x10316 + x10302;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x10318 = x10239 - x10317;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x10319 = x10318 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":122:26)
          auto x10320 = Fp(x10319.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[73 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10320);
            reg = x10320;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10321 = arg2[73 * steps + ((cycle - 0) & mask)];
        assert(x10321 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:20)
        auto x10322 = x10319 - x10321;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:19)
        auto x10323 = x10322 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:20)
        auto x10324 = x96 - x10323;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
        auto x10325 = x10323 * x10324;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
        assert(x10325 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:124");
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":125:32)
        auto x10326 = x10240 + x10319;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10327 = Fp(x10326.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10327);
            reg = x10327;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10328 = Fp(x10326.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10329 = x10328 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10329);
            reg = x10329;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10330 = Fp(x10326.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10331 = x10330 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[177 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10331);
            reg = x10331;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10332 = Fp(x10326.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10333 = x10332 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[178 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10333);
            reg = x10333;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10334 = Fp(x10326.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10335 = x10334 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[179 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10335);
            reg = x10335;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10336 = Fp(x10326.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10337 = x10336 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[180 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10337);
            reg = x10337;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10338 = Fp(x10326.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10339 = x10338 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[181 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10339);
            reg = x10339;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10340 = Fp(x10326.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10341 = x10340 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[182 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10341);
            reg = x10341;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10342 = Fp(x10326.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10343 = x10342 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10343);
            reg = x10343;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10344 = Fp(x10326.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10345 = x10344 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10345);
            reg = x10345;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10346 = Fp(x10326.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10347 = x10346 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10347);
            reg = x10347;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10348 = Fp(x10326.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10349 = x10348 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10349);
            reg = x10349;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10350 = Fp(x10326.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10351 = x10350 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10351);
            reg = x10351;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10352 = Fp(x10326.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10353 = x10352 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10353);
            reg = x10353;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10354 = Fp(x10326.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10355 = x10354 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10355);
            reg = x10355;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10356 = Fp(x10326.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10357 = x10356 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10357);
            reg = x10357;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10358 = arg2[175 * steps + ((cycle - 0) & mask)];
        assert(x10358 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10359 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x10359 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10360 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x10360 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10361 = arg2[178 * steps + ((cycle - 0) & mask)];
        assert(x10361 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10362 = arg2[179 * steps + ((cycle - 0) & mask)];
        assert(x10362 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10363 = arg2[180 * steps + ((cycle - 0) & mask)];
        assert(x10363 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10364 = arg2[181 * steps + ((cycle - 0) & mask)];
        assert(x10364 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10365 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x10365 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10366 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x10366 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10367 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x10367 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10368 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x10368 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10369 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x10369 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10370 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x10370 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10371 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x10371 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10372 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x10372 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10373 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x10373 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10374 = x10359 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10375 = x10360 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10376 = x10361 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10377 = x10362 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10378 = x10363 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10379 = x10364 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10380 = x10365 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10381 = x10366 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10382 = x10367 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10383 = x10368 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10384 = x10369 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10385 = x10370 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10386 = x10371 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10387 = x10372 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10388 = x10373 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10389 = x10358 + x10374;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10390 = x10389 + x10375;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10391 = x10390 + x10376;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10392 = x10391 + x10377;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10393 = x10392 + x10378;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10394 = x10393 + x10379;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10395 = x10394 + x10380;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10396 = x10395 + x10381;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10397 = x10396 + x10382;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10398 = x10397 + x10383;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10399 = x10398 + x10384;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10400 = x10399 + x10385;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10401 = x10400 + x10386;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10402 = x10401 + x10387;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10403 = x10402 + x10388;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x10404 = x10326 - x10403;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x10405 = x10404 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":126:27)
          auto x10406 = Fp(x10405.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[74 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10406);
            reg = x10406;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10407 = arg2[74 * steps + ((cycle - 0) & mask)];
        assert(x10407 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:21)
        auto x10408 = x10405 - x10407;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:20)
        auto x10409 = x10408 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:21)
        auto x10410 = x96 - x10409;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
        auto x10411 = x10409 * x10410;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
        assert(x10411 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:128");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10412 = arg2[191 * steps + ((cycle - 4) & mask)];
        assert(x10412 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10413 = arg2[192 * steps + ((cycle - 4) & mask)];
        assert(x10413 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10414 = arg2[193 * steps + ((cycle - 4) & mask)];
        assert(x10414 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10415 = arg2[194 * steps + ((cycle - 4) & mask)];
        assert(x10415 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10416 = arg2[195 * steps + ((cycle - 4) & mask)];
        assert(x10416 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10417 = arg2[196 * steps + ((cycle - 4) & mask)];
        assert(x10417 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10418 = arg2[197 * steps + ((cycle - 4) & mask)];
        assert(x10418 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10419 = arg2[198 * steps + ((cycle - 4) & mask)];
        assert(x10419 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10420 = arg2[199 * steps + ((cycle - 4) & mask)];
        assert(x10420 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10421 = arg2[200 * steps + ((cycle - 4) & mask)];
        assert(x10421 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10422 = arg2[201 * steps + ((cycle - 4) & mask)];
        assert(x10422 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10423 = arg2[202 * steps + ((cycle - 4) & mask)];
        assert(x10423 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10424 = arg2[203 * steps + ((cycle - 4) & mask)];
        assert(x10424 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10425 = arg2[204 * steps + ((cycle - 4) & mask)];
        assert(x10425 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10426 = arg2[205 * steps + ((cycle - 4) & mask)];
        assert(x10426 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10427 = arg2[206 * steps + ((cycle - 4) & mask)];
        assert(x10427 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10428 = arg2[207 * steps + ((cycle - 4) & mask)];
        assert(x10428 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10429 = arg2[208 * steps + ((cycle - 4) & mask)];
        assert(x10429 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10430 = arg2[209 * steps + ((cycle - 4) & mask)];
        assert(x10430 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10431 = arg2[210 * steps + ((cycle - 4) & mask)];
        assert(x10431 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10432 = arg2[211 * steps + ((cycle - 4) & mask)];
        assert(x10432 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10433 = arg2[212 * steps + ((cycle - 4) & mask)];
        assert(x10433 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10434 = arg2[213 * steps + ((cycle - 4) & mask)];
        assert(x10434 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10435 = arg2[214 * steps + ((cycle - 4) & mask)];
        assert(x10435 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10436 = arg2[215 * steps + ((cycle - 4) & mask)];
        assert(x10436 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10437 = arg2[216 * steps + ((cycle - 4) & mask)];
        assert(x10437 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10438 = arg2[217 * steps + ((cycle - 4) & mask)];
        assert(x10438 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10439 = arg2[218 * steps + ((cycle - 4) & mask)];
        assert(x10439 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10440 = arg2[219 * steps + ((cycle - 4) & mask)];
        assert(x10440 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10441 = arg2[220 * steps + ((cycle - 4) & mask)];
        assert(x10441 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10442 = arg2[221 * steps + ((cycle - 4) & mask)];
        assert(x10442 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10443 = arg2[222 * steps + ((cycle - 4) & mask)];
        assert(x10443 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10444 = arg2[191 * steps + ((cycle - 68) & mask)];
        assert(x10444 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10445 = arg2[192 * steps + ((cycle - 68) & mask)];
        assert(x10445 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10446 = arg2[193 * steps + ((cycle - 68) & mask)];
        assert(x10446 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10447 = arg2[194 * steps + ((cycle - 68) & mask)];
        assert(x10447 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10448 = arg2[195 * steps + ((cycle - 68) & mask)];
        assert(x10448 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10449 = arg2[196 * steps + ((cycle - 68) & mask)];
        assert(x10449 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10450 = arg2[197 * steps + ((cycle - 68) & mask)];
        assert(x10450 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10451 = arg2[198 * steps + ((cycle - 68) & mask)];
        assert(x10451 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10452 = arg2[199 * steps + ((cycle - 68) & mask)];
        assert(x10452 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10453 = arg2[200 * steps + ((cycle - 68) & mask)];
        assert(x10453 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10454 = arg2[201 * steps + ((cycle - 68) & mask)];
        assert(x10454 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10455 = arg2[202 * steps + ((cycle - 68) & mask)];
        assert(x10455 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10456 = arg2[203 * steps + ((cycle - 68) & mask)];
        assert(x10456 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10457 = arg2[204 * steps + ((cycle - 68) & mask)];
        assert(x10457 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10458 = arg2[205 * steps + ((cycle - 68) & mask)];
        assert(x10458 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10459 = arg2[206 * steps + ((cycle - 68) & mask)];
        assert(x10459 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10460 = arg2[207 * steps + ((cycle - 68) & mask)];
        assert(x10460 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10461 = arg2[208 * steps + ((cycle - 68) & mask)];
        assert(x10461 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10462 = arg2[209 * steps + ((cycle - 68) & mask)];
        assert(x10462 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10463 = arg2[210 * steps + ((cycle - 68) & mask)];
        assert(x10463 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10464 = arg2[211 * steps + ((cycle - 68) & mask)];
        assert(x10464 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10465 = arg2[212 * steps + ((cycle - 68) & mask)];
        assert(x10465 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10466 = arg2[213 * steps + ((cycle - 68) & mask)];
        assert(x10466 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10467 = arg2[214 * steps + ((cycle - 68) & mask)];
        assert(x10467 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10468 = arg2[215 * steps + ((cycle - 68) & mask)];
        assert(x10468 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10469 = arg2[216 * steps + ((cycle - 68) & mask)];
        assert(x10469 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10470 = arg2[217 * steps + ((cycle - 68) & mask)];
        assert(x10470 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10471 = arg2[218 * steps + ((cycle - 68) & mask)];
        assert(x10471 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10472 = arg2[219 * steps + ((cycle - 68) & mask)];
        assert(x10472 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10473 = arg2[220 * steps + ((cycle - 68) & mask)];
        assert(x10473 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10474 = arg2[221 * steps + ((cycle - 68) & mask)];
        assert(x10474 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10475 = arg2[222 * steps + ((cycle - 68) & mask)];
        assert(x10475 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10476 = x10413 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10477 = x10414 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10478 = x10415 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10479 = x10416 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10480 = x10417 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10481 = x10418 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10482 = x10419 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10483 = x10420 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10484 = x10421 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10485 = x10422 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10486 = x10423 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10487 = x10424 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10488 = x10425 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10489 = x10426 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10490 = x10427 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10491 = x10429 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10492 = x10430 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10493 = x10431 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10494 = x10432 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10495 = x10433 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10496 = x10434 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10497 = x10435 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10498 = x10436 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10499 = x10437 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10500 = x10438 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10501 = x10439 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10502 = x10440 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10503 = x10441 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10504 = x10442 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10505 = x10443 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10506 = x10445 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10507 = x10446 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10508 = x10447 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10509 = x10448 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10510 = x10449 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10511 = x10450 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10512 = x10451 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10513 = x10452 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10514 = x10453 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10515 = x10454 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10516 = x10455 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10517 = x10456 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10518 = x10457 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10519 = x10458 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10520 = x10459 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10521 = x10461 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10522 = x10462 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10523 = x10463 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10524 = x10464 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10525 = x10465 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10526 = x10466 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10527 = x10467 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10528 = x10468 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10529 = x10469 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10530 = x10470 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10531 = x10471 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10532 = x10472 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10533 = x10473 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10534 = x10474 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
        auto x10535 = x10475 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10536 = x10412 + x10476;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10537 = x10428 + x10491;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10538 = x10444 + x10506;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10539 = x10460 + x10521;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10540 = x10536 + x10477;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10541 = x10537 + x10492;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10542 = x10538 + x10507;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10543 = x10539 + x10522;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10544 = x10540 + x10478;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10545 = x10541 + x10493;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10546 = x10542 + x10508;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10547 = x10543 + x10523;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10548 = x10544 + x10479;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10549 = x10545 + x10494;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10550 = x10546 + x10509;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10551 = x10547 + x10524;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10552 = x10548 + x10480;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10553 = x10549 + x10495;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10554 = x10550 + x10510;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10555 = x10551 + x10525;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10556 = x10552 + x10481;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10557 = x10553 + x10496;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10558 = x10554 + x10511;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10559 = x10555 + x10526;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10560 = x10556 + x10482;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10561 = x10557 + x10497;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10562 = x10558 + x10512;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10563 = x10559 + x10527;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10564 = x10560 + x10483;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10565 = x10561 + x10498;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10566 = x10562 + x10513;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10567 = x10563 + x10528;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10568 = x10564 + x10484;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10569 = x10565 + x10499;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10570 = x10566 + x10514;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10571 = x10567 + x10529;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10572 = x10568 + x10485;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10573 = x10569 + x10500;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10574 = x10570 + x10515;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10575 = x10571 + x10530;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10576 = x10572 + x10486;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10577 = x10573 + x10501;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10578 = x10574 + x10516;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10579 = x10575 + x10531;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10580 = x10576 + x10487;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10581 = x10577 + x10502;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10582 = x10578 + x10517;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10583 = x10579 + x10532;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10584 = x10580 + x10488;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10585 = x10581 + x10503;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10586 = x10582 + x10518;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10587 = x10583 + x10533;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10588 = x10584 + x10489;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10589 = x10585 + x10504;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10590 = x10586 + x10519;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10591 = x10587 + x10534;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10592 = x10590 + x10520;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10593 = x10591 + x10535;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10594 = x10588 + x10490;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
        auto x10595 = x10589 + x10505;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
        auto x10596 = x10594 + x10592;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
        auto x10597 = x10595 + x10593;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10598 = Fp(x10596.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10598);
            reg = x10598;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10599 = Fp(x10596.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10600 = x10599 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10600);
            reg = x10600;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10601 = Fp(x10596.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10602 = x10601 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10602);
            reg = x10602;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10603 = Fp(x10596.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10604 = x10603 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10604);
            reg = x10604;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10605 = Fp(x10596.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10606 = x10605 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10606);
            reg = x10606;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10607 = Fp(x10596.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10608 = x10607 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10608);
            reg = x10608;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10609 = Fp(x10596.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10610 = x10609 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10610);
            reg = x10610;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10611 = Fp(x10596.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10612 = x10611 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10612);
            reg = x10612;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10613 = Fp(x10596.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10614 = x10613 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10614);
            reg = x10614;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10615 = Fp(x10596.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10616 = x10615 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10616);
            reg = x10616;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10617 = Fp(x10596.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10618 = x10617 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10618);
            reg = x10618;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10619 = Fp(x10596.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10620 = x10619 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10620);
            reg = x10620;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10621 = Fp(x10596.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10622 = x10621 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10622);
            reg = x10622;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10623 = Fp(x10596.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10624 = x10623 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[204 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10624);
            reg = x10624;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10625 = Fp(x10596.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10626 = x10625 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[205 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10626);
            reg = x10626;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10627 = Fp(x10596.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10628 = x10627 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10628);
            reg = x10628;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10629 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x10629 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10630 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x10630 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10631 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x10631 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10632 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x10632 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10633 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x10633 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10634 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x10634 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10635 = arg2[197 * steps + ((cycle - 0) & mask)];
        assert(x10635 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10636 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x10636 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10637 = arg2[199 * steps + ((cycle - 0) & mask)];
        assert(x10637 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10638 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x10638 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10639 = arg2[201 * steps + ((cycle - 0) & mask)];
        assert(x10639 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10640 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x10640 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10641 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x10641 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10642 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x10642 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10643 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x10643 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10644 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x10644 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10645 = x10630 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10646 = x10631 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10647 = x10632 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10648 = x10633 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10649 = x10634 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10650 = x10635 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10651 = x10636 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10652 = x10637 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10653 = x10638 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10654 = x10639 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10655 = x10640 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10656 = x10641 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10657 = x10642 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10658 = x10643 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10659 = x10644 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10660 = x10629 + x10645;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10661 = x10660 + x10646;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10662 = x10661 + x10647;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10663 = x10662 + x10648;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10664 = x10663 + x10649;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10665 = x10664 + x10650;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10666 = x10665 + x10651;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10667 = x10666 + x10652;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10668 = x10667 + x10653;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10669 = x10668 + x10654;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10670 = x10669 + x10655;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10671 = x10670 + x10656;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10672 = x10671 + x10657;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10673 = x10672 + x10658;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10674 = x10673 + x10659;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x10675 = x10596 - x10674;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x10676 = x10675 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":122:26)
          auto x10677 = Fp(x10676.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[75 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10677);
            reg = x10677;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10678 = arg2[75 * steps + ((cycle - 0) & mask)];
        assert(x10678 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:20)
        auto x10679 = x10676 - x10678;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:19)
        auto x10680 = x10679 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:20)
        auto x10681 = x96 - x10680;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
        auto x10682 = x10680 * x10681;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
        assert(x10682 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:124");
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":125:32)
        auto x10683 = x10597 + x10676;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10684 = Fp(x10683.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10684);
            reg = x10684;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10685 = Fp(x10683.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10686 = x10685 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10686);
            reg = x10686;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10687 = Fp(x10683.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10688 = x10687 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10688);
            reg = x10688;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10689 = Fp(x10683.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10690 = x10689 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[210 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10690);
            reg = x10690;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10691 = Fp(x10683.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10692 = x10691 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[211 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10692);
            reg = x10692;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10693 = Fp(x10683.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10694 = x10693 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[212 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10694);
            reg = x10694;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10695 = Fp(x10683.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10696 = x10695 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[213 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10696);
            reg = x10696;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10697 = Fp(x10683.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10698 = x10697 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[214 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10698);
            reg = x10698;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10699 = Fp(x10683.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10700 = x10699 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[215 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10700);
            reg = x10700;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10701 = Fp(x10683.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10702 = x10701 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[216 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10702);
            reg = x10702;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10703 = Fp(x10683.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10704 = x10703 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[217 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10704);
            reg = x10704;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10705 = Fp(x10683.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10706 = x10705 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[218 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10706);
            reg = x10706;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10707 = Fp(x10683.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10708 = x10707 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[219 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10708);
            reg = x10708;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10709 = Fp(x10683.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10710 = x10709 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[220 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10710);
            reg = x10710;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10711 = Fp(x10683.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10712 = x10711 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[221 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10712);
            reg = x10712;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x10713 = Fp(x10683.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x10714 = x10713 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[222 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10714);
            reg = x10714;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10715 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x10715 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10716 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x10716 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10717 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x10717 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10718 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x10718 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10719 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x10719 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10720 = arg2[212 * steps + ((cycle - 0) & mask)];
        assert(x10720 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10721 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x10721 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10722 = arg2[214 * steps + ((cycle - 0) & mask)];
        assert(x10722 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10723 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x10723 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10724 = arg2[216 * steps + ((cycle - 0) & mask)];
        assert(x10724 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10725 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x10725 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10726 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x10726 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10727 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x10727 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10728 = arg2[220 * steps + ((cycle - 0) & mask)];
        assert(x10728 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10729 = arg2[221 * steps + ((cycle - 0) & mask)];
        assert(x10729 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10730 = arg2[222 * steps + ((cycle - 0) & mask)];
        assert(x10730 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10731 = x10716 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10732 = x10717 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10733 = x10718 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10734 = x10719 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10735 = x10720 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10736 = x10721 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10737 = x10722 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10738 = x10723 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10739 = x10724 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10740 = x10725 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10741 = x10726 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10742 = x10727 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10743 = x10728 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10744 = x10729 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x10745 = x10730 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10746 = x10715 + x10731;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10747 = x10746 + x10732;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10748 = x10747 + x10733;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10749 = x10748 + x10734;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10750 = x10749 + x10735;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10751 = x10750 + x10736;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10752 = x10751 + x10737;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10753 = x10752 + x10738;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10754 = x10753 + x10739;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10755 = x10754 + x10740;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10756 = x10755 + x10741;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10757 = x10756 + x10742;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10758 = x10757 + x10743;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10759 = x10758 + x10744;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x10760 = x10759 + x10745;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x10761 = x10683 - x10760;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x10762 = x10761 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":126:27)
          auto x10763 = Fp(x10762.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10763);
            reg = x10763;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x10764 = arg2[76 * steps + ((cycle - 0) & mask)];
        assert(x10764 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:21)
        auto x10765 = x10762 - x10764;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:20)
        auto x10766 = x10765 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:21)
        auto x10767 = x96 - x10766;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
        auto x10768 = x10766 * x10767;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
        assert(x10768 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:128");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x10769 = arg2[151 * steps + ((cycle - 0) & mask)];
      assert(x10769 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":402:17)
      auto x10770 = x96 - x10769;
      if (x8945 != 0) {
        if (x10769 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
          auto x10771 = arg2[139 * steps + ((cycle - 0) & mask)];
          assert(x10771 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":406:26)
          auto x10772 = x10771 + x8928;
          {
            extern_args[0] = x10772;
            extern_args[1] = x96;
            extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
            auto x10773 = extern_outs[0];
            auto x10774 = extern_outs[1];
            auto x10775 = extern_outs[2];
            auto x10776 = extern_outs[3];
            // loc("zirgen/components/u32.cpp":88:5)
            {
              auto& reg = arg2[119 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x10773);
              reg = x10773;
            }
            // loc("zirgen/components/u32.cpp":88:5)
            {
              auto& reg = arg2[120 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x10774);
              reg = x10774;
            }
            // loc("zirgen/components/u32.cpp":88:5)
            {
              auto& reg = arg2[121 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x10775);
              reg = x10775;
            }
            // loc("zirgen/components/u32.cpp":88:5)
            {
              auto& reg = arg2[122 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x10776);
              reg = x10776;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10777 = arg2[119 * steps + ((cycle - 0) & mask)];
          assert(x10777 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10778 = arg2[120 * steps + ((cycle - 0) & mask)];
          assert(x10778 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10779 = arg2[121 * steps + ((cycle - 0) & mask)];
          assert(x10779 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10780 = arg2[122 * steps + ((cycle - 0) & mask)];
          assert(x10780 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[116 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10772);
            reg = x10772;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[117 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[118 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10777);
            reg = x10777;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10778);
            reg = x10778;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10779);
            reg = x10779;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10780);
            reg = x10780;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":407:26)
          auto x10781 = x10771 + x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":407:26)
          auto x10782 = x10781 + x8928;
          {
            extern_args[0] = x10782;
            extern_args[1] = x96;
            extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
            auto x10783 = extern_outs[0];
            auto x10784 = extern_outs[1];
            auto x10785 = extern_outs[2];
            auto x10786 = extern_outs[3];
            // loc("zirgen/components/u32.cpp":88:5)
            {
              auto& reg = arg2[126 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x10783);
              reg = x10783;
            }
            // loc("zirgen/components/u32.cpp":88:5)
            {
              auto& reg = arg2[127 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x10784);
              reg = x10784;
            }
            // loc("zirgen/components/u32.cpp":88:5)
            {
              auto& reg = arg2[128 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x10785);
              reg = x10785;
            }
            // loc("zirgen/components/u32.cpp":88:5)
            {
              auto& reg = arg2[129 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x10786);
              reg = x10786;
            }
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10787 = arg2[126 * steps + ((cycle - 0) & mask)];
          assert(x10787 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10788 = arg2[127 * steps + ((cycle - 0) & mask)];
          assert(x10788 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10789 = arg2[128 * steps + ((cycle - 0) & mask)];
          assert(x10789 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10790 = arg2[129 * steps + ((cycle - 0) & mask)];
          assert(x10790 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10782);
            reg = x10782;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10787);
            reg = x10787;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10788);
            reg = x10788;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10789);
            reg = x10789;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x10790);
            reg = x10790;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":175:10))
          auto x10791 = arg2[116 * steps + ((cycle - 0) & mask)];
          assert(x10791 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10792 = arg2[159 * steps + ((cycle - 0) & mask)];
          assert(x10792 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10793 = arg2[160 * steps + ((cycle - 0) & mask)];
          assert(x10793 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10794 = arg2[161 * steps + ((cycle - 0) & mask)];
          assert(x10794 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10795 = arg2[162 * steps + ((cycle - 0) & mask)];
          assert(x10795 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10796 = arg2[163 * steps + ((cycle - 0) & mask)];
          assert(x10796 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10797 = arg2[164 * steps + ((cycle - 0) & mask)];
          assert(x10797 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10798 = arg2[165 * steps + ((cycle - 0) & mask)];
          assert(x10798 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10799 = arg2[166 * steps + ((cycle - 0) & mask)];
          assert(x10799 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10800 = arg2[167 * steps + ((cycle - 0) & mask)];
          assert(x10800 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10801 = arg2[168 * steps + ((cycle - 0) & mask)];
          assert(x10801 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10802 = arg2[169 * steps + ((cycle - 0) & mask)];
          assert(x10802 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10803 = arg2[170 * steps + ((cycle - 0) & mask)];
          assert(x10803 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10804 = arg2[171 * steps + ((cycle - 0) & mask)];
          assert(x10804 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10805 = arg2[172 * steps + ((cycle - 0) & mask)];
          assert(x10805 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10806 = arg2[173 * steps + ((cycle - 0) & mask)];
          assert(x10806 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10807 = arg2[174 * steps + ((cycle - 0) & mask)];
          assert(x10807 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10808 = arg2[175 * steps + ((cycle - 0) & mask)];
          assert(x10808 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10809 = arg2[176 * steps + ((cycle - 0) & mask)];
          assert(x10809 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10810 = arg2[177 * steps + ((cycle - 0) & mask)];
          assert(x10810 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10811 = arg2[178 * steps + ((cycle - 0) & mask)];
          assert(x10811 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10812 = arg2[179 * steps + ((cycle - 0) & mask)];
          assert(x10812 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10813 = arg2[180 * steps + ((cycle - 0) & mask)];
          assert(x10813 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10814 = arg2[181 * steps + ((cycle - 0) & mask)];
          assert(x10814 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10815 = arg2[182 * steps + ((cycle - 0) & mask)];
          assert(x10815 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10816 = arg2[183 * steps + ((cycle - 0) & mask)];
          assert(x10816 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10817 = arg2[184 * steps + ((cycle - 0) & mask)];
          assert(x10817 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10818 = arg2[185 * steps + ((cycle - 0) & mask)];
          assert(x10818 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10819 = arg2[186 * steps + ((cycle - 0) & mask)];
          assert(x10819 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10820 = arg2[187 * steps + ((cycle - 0) & mask)];
          assert(x10820 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10821 = arg2[188 * steps + ((cycle - 0) & mask)];
          assert(x10821 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10822 = arg2[189 * steps + ((cycle - 0) & mask)];
          assert(x10822 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10823 = arg2[190 * steps + ((cycle - 0) & mask)];
          assert(x10823 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":408:39)
          auto x10824 = x10791 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10825 = x10793 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10826 = x10794 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10827 = x10795 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10828 = x10796 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10829 = x10797 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10830 = x10798 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10831 = x10799 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10832 = x10801 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10833 = x10802 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10834 = x10803 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10835 = x10804 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10836 = x10805 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10837 = x10806 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10838 = x10807 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10839 = x10809 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10840 = x10810 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10841 = x10811 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10842 = x10812 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10843 = x10813 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10844 = x10814 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10845 = x10815 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10846 = x10817 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10847 = x10818 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10848 = x10819 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10849 = x10820 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10850 = x10821 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10851 = x10822 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10852 = x10823 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10853 = x10792 + x10825;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10854 = x10800 + x10832;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10855 = x10808 + x10839;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10856 = x10816 + x10846;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10857 = x10853 + x10826;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10858 = x10854 + x10833;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10859 = x10855 + x10840;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10860 = x10856 + x10847;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10861 = x10857 + x10827;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10862 = x10858 + x10834;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10863 = x10859 + x10841;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10864 = x10860 + x10848;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10865 = x10861 + x10828;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10866 = x10862 + x10835;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10867 = x10863 + x10842;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10868 = x10864 + x10849;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10869 = x10865 + x10829;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10870 = x10866 + x10836;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10871 = x10867 + x10843;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10872 = x10868 + x10850;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10873 = x10869 + x10830;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10874 = x10870 + x10837;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10875 = x10871 + x10844;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10876 = x10872 + x10851;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10877 = x10876 + x10852;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10878 = x10875 + x10845;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10879 = x10874 + x10838;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10880 = x10873 + x10831;
          extern_args[0] = x10824;
          extern_args[1] = x10777;
          extern_args[2] = x10778;
          extern_args[3] = x10779;
          extern_args[4] = x10780;
          extern_args[5] = x10877;
          extern_args[6] = x10878;
          extern_args[7] = x10879;
          extern_args[8] = x10880;
          extern_log(ctx, cycle, "  io0: [%10x] %w, a: %w", extern_args, extern_outs);
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":175:10))
          auto x10881 = arg2[123 * steps + ((cycle - 0) & mask)];
          assert(x10881 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10882 = arg2[191 * steps + ((cycle - 0) & mask)];
          assert(x10882 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10883 = arg2[192 * steps + ((cycle - 0) & mask)];
          assert(x10883 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10884 = arg2[193 * steps + ((cycle - 0) & mask)];
          assert(x10884 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10885 = arg2[194 * steps + ((cycle - 0) & mask)];
          assert(x10885 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10886 = arg2[195 * steps + ((cycle - 0) & mask)];
          assert(x10886 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10887 = arg2[196 * steps + ((cycle - 0) & mask)];
          assert(x10887 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10888 = arg2[197 * steps + ((cycle - 0) & mask)];
          assert(x10888 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10889 = arg2[198 * steps + ((cycle - 0) & mask)];
          assert(x10889 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10890 = arg2[199 * steps + ((cycle - 0) & mask)];
          assert(x10890 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10891 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x10891 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10892 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x10892 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10893 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x10893 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10894 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x10894 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10895 = arg2[204 * steps + ((cycle - 0) & mask)];
          assert(x10895 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10896 = arg2[205 * steps + ((cycle - 0) & mask)];
          assert(x10896 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10897 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x10897 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10898 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x10898 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10899 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x10899 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10900 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x10900 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10901 = arg2[210 * steps + ((cycle - 0) & mask)];
          assert(x10901 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10902 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x10902 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10903 = arg2[212 * steps + ((cycle - 0) & mask)];
          assert(x10903 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10904 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x10904 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10905 = arg2[214 * steps + ((cycle - 0) & mask)];
          assert(x10905 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10906 = arg2[215 * steps + ((cycle - 0) & mask)];
          assert(x10906 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10907 = arg2[216 * steps + ((cycle - 0) & mask)];
          assert(x10907 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10908 = arg2[217 * steps + ((cycle - 0) & mask)];
          assert(x10908 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10909 = arg2[218 * steps + ((cycle - 0) & mask)];
          assert(x10909 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10910 = arg2[219 * steps + ((cycle - 0) & mask)];
          assert(x10910 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10911 = arg2[220 * steps + ((cycle - 0) & mask)];
          assert(x10911 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10912 = arg2[221 * steps + ((cycle - 0) & mask)];
          assert(x10912 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10913 = arg2[222 * steps + ((cycle - 0) & mask)];
          assert(x10913 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":409:39)
          auto x10914 = x10881 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10915 = x10883 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10916 = x10884 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10917 = x10885 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10918 = x10886 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10919 = x10887 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10920 = x10888 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10921 = x10889 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10922 = x10891 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10923 = x10892 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10924 = x10893 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10925 = x10894 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10926 = x10895 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10927 = x10896 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10928 = x10897 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10929 = x10899 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10930 = x10900 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10931 = x10901 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10932 = x10902 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10933 = x10903 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10934 = x10904 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10935 = x10905 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10936 = x10907 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10937 = x10908 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10938 = x10909 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10939 = x10910 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10940 = x10911 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10941 = x10912 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x10942 = x10913 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10943 = x10882 + x10915;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10944 = x10890 + x10922;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10945 = x10898 + x10929;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10946 = x10906 + x10936;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10947 = x10943 + x10916;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10948 = x10944 + x10923;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10949 = x10945 + x10930;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10950 = x10946 + x10937;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10951 = x10947 + x10917;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10952 = x10948 + x10924;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10953 = x10949 + x10931;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10954 = x10950 + x10938;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10955 = x10951 + x10918;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10956 = x10952 + x10925;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10957 = x10953 + x10932;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10958 = x10954 + x10939;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10959 = x10955 + x10919;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10960 = x10956 + x10926;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10961 = x10957 + x10933;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10962 = x10958 + x10940;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10963 = x10959 + x10920;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10964 = x10960 + x10927;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10965 = x10961 + x10934;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10966 = x10962 + x10941;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10967 = x10966 + x10942;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10968 = x10965 + x10935;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10969 = x10964 + x10928;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x10970 = x10963 + x10921;
          extern_args[0] = x10914;
          extern_args[1] = x10787;
          extern_args[2] = x10788;
          extern_args[3] = x10789;
          extern_args[4] = x10790;
          extern_args[5] = x10967;
          extern_args[6] = x10968;
          extern_args[7] = x10969;
          extern_args[8] = x10970;
          extern_log(ctx, cycle, "  io1: [%10x] %w, e: %w", extern_args, extern_outs);
          // loc("./zirgen/components/u32.h":25:12)
          auto x10971 = x10778 * x90;
          // loc("./zirgen/components/u32.h":26:12)
          auto x10972 = x10779 * x77;
          // loc("./zirgen/components/u32.h":27:12)
          auto x10973 = x10780 * x79;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10974 = x10777 + x10971;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10975 = x10974 + x10972;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10976 = x10975 + x10973;
          // loc("./zirgen/components/u32.h":27:12)
          auto x10977 = x10880 * x79;
          // loc("./zirgen/components/u32.h":26:12)
          auto x10978 = x10879 * x77;
          // loc("./zirgen/components/u32.h":25:12)
          auto x10979 = x10878 * x90;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10980 = x10877 + x10979;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10981 = x10980 + x10978;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10982 = x10981 + x10977;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":410:10)
          auto x10983 = x10976 - x10982;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":410:10)
          assert(x10983 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:410");
          // loc("./zirgen/components/u32.h":25:12)
          auto x10984 = x10788 * x90;
          // loc("./zirgen/components/u32.h":26:12)
          auto x10985 = x10789 * x77;
          // loc("./zirgen/components/u32.h":27:12)
          auto x10986 = x10790 * x79;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10987 = x10787 + x10984;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10988 = x10987 + x10985;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10989 = x10988 + x10986;
          // loc("./zirgen/components/u32.h":27:12)
          auto x10990 = x10970 * x79;
          // loc("./zirgen/components/u32.h":26:12)
          auto x10991 = x10969 * x77;
          // loc("./zirgen/components/u32.h":25:12)
          auto x10992 = x10968 * x90;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10993 = x10967 + x10992;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10994 = x10993 + x10991;
          // loc("./zirgen/components/u32.h":24:12)
          auto x10995 = x10994 + x10990;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":411:10)
          auto x10996 = x10989 - x10995;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":411:10)
          assert(x10996 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:411");
        }
        if (x10770 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
          auto x10997 = arg2[139 * steps + ((cycle - 0) & mask)];
          assert(x10997 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10998 = arg2[159 * steps + ((cycle - 0) & mask)];
          assert(x10998 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x10999 = arg2[160 * steps + ((cycle - 0) & mask)];
          assert(x10999 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11000 = arg2[161 * steps + ((cycle - 0) & mask)];
          assert(x11000 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11001 = arg2[162 * steps + ((cycle - 0) & mask)];
          assert(x11001 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11002 = arg2[163 * steps + ((cycle - 0) & mask)];
          assert(x11002 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11003 = arg2[164 * steps + ((cycle - 0) & mask)];
          assert(x11003 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11004 = arg2[165 * steps + ((cycle - 0) & mask)];
          assert(x11004 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11005 = arg2[166 * steps + ((cycle - 0) & mask)];
          assert(x11005 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11006 = arg2[167 * steps + ((cycle - 0) & mask)];
          assert(x11006 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11007 = arg2[168 * steps + ((cycle - 0) & mask)];
          assert(x11007 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11008 = arg2[169 * steps + ((cycle - 0) & mask)];
          assert(x11008 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11009 = arg2[170 * steps + ((cycle - 0) & mask)];
          assert(x11009 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11010 = arg2[171 * steps + ((cycle - 0) & mask)];
          assert(x11010 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11011 = arg2[172 * steps + ((cycle - 0) & mask)];
          assert(x11011 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11012 = arg2[173 * steps + ((cycle - 0) & mask)];
          assert(x11012 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11013 = arg2[174 * steps + ((cycle - 0) & mask)];
          assert(x11013 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11014 = arg2[175 * steps + ((cycle - 0) & mask)];
          assert(x11014 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11015 = arg2[176 * steps + ((cycle - 0) & mask)];
          assert(x11015 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11016 = arg2[177 * steps + ((cycle - 0) & mask)];
          assert(x11016 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11017 = arg2[178 * steps + ((cycle - 0) & mask)];
          assert(x11017 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11018 = arg2[179 * steps + ((cycle - 0) & mask)];
          assert(x11018 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11019 = arg2[180 * steps + ((cycle - 0) & mask)];
          assert(x11019 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11020 = arg2[181 * steps + ((cycle - 0) & mask)];
          assert(x11020 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11021 = arg2[182 * steps + ((cycle - 0) & mask)];
          assert(x11021 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11022 = arg2[183 * steps + ((cycle - 0) & mask)];
          assert(x11022 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11023 = arg2[184 * steps + ((cycle - 0) & mask)];
          assert(x11023 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11024 = arg2[185 * steps + ((cycle - 0) & mask)];
          assert(x11024 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11025 = arg2[186 * steps + ((cycle - 0) & mask)];
          assert(x11025 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11026 = arg2[187 * steps + ((cycle - 0) & mask)];
          assert(x11026 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11027 = arg2[188 * steps + ((cycle - 0) & mask)];
          assert(x11027 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11028 = arg2[189 * steps + ((cycle - 0) & mask)];
          assert(x11028 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11029 = arg2[190 * steps + ((cycle - 0) & mask)];
          assert(x11029 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11030 = x10999 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11031 = x11000 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11032 = x11001 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11033 = x11002 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11034 = x11003 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11035 = x11004 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11036 = x11005 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11037 = x11007 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11038 = x11008 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11039 = x11009 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11040 = x11010 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11041 = x11011 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11042 = x11012 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11043 = x11013 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11044 = x11015 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11045 = x11016 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11046 = x11017 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11047 = x11018 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11048 = x11019 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11049 = x11020 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11050 = x11021 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11051 = x11023 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11052 = x11024 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11053 = x11025 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11054 = x11026 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11055 = x11027 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11056 = x11028 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11057 = x11029 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":414:27)
          auto x11058 = x10997 + x8928;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11059 = x10998 + x11030;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11060 = x11006 + x11037;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11061 = x11014 + x11044;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11062 = x11022 + x11051;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11063 = x11059 + x11031;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11064 = x11060 + x11038;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11065 = x11061 + x11045;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11066 = x11062 + x11052;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11067 = x11063 + x11032;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11068 = x11064 + x11039;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11069 = x11065 + x11046;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11070 = x11066 + x11053;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11071 = x11067 + x11033;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11072 = x11068 + x11040;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11073 = x11069 + x11047;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11074 = x11070 + x11054;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11075 = x11071 + x11034;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11076 = x11072 + x11041;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11077 = x11073 + x11048;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11078 = x11074 + x11055;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11079 = x11075 + x11035;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11080 = x11076 + x11042;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11081 = x11077 + x11049;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11082 = x11078 + x11056;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11083 = x11082 + x11057;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11084 = x11081 + x11050;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11085 = x11080 + x11043;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11086 = x11079 + x11036;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11083);
            reg = x11083;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11084);
            reg = x11084;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11085);
            reg = x11085;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11086);
            reg = x11086;
          }
          {
            extern_args[0] = x11058;
            extern_args[1] = x11083;
            extern_args[2] = x11084;
            extern_args[3] = x11085;
            extern_args[4] = x11086;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11087 = arg2[119 * steps + ((cycle - 0) & mask)];
          assert(x11087 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11088 = arg2[120 * steps + ((cycle - 0) & mask)];
          assert(x11088 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11089 = arg2[121 * steps + ((cycle - 0) & mask)];
          assert(x11089 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11090 = arg2[122 * steps + ((cycle - 0) & mask)];
          assert(x11090 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[116 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11058);
            reg = x11058;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[117 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[118 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11087);
            reg = x11087;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11088);
            reg = x11088;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11089);
            reg = x11089;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11090);
            reg = x11090;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11091 = arg2[191 * steps + ((cycle - 0) & mask)];
          assert(x11091 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11092 = arg2[192 * steps + ((cycle - 0) & mask)];
          assert(x11092 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11093 = arg2[193 * steps + ((cycle - 0) & mask)];
          assert(x11093 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11094 = arg2[194 * steps + ((cycle - 0) & mask)];
          assert(x11094 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11095 = arg2[195 * steps + ((cycle - 0) & mask)];
          assert(x11095 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11096 = arg2[196 * steps + ((cycle - 0) & mask)];
          assert(x11096 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11097 = arg2[197 * steps + ((cycle - 0) & mask)];
          assert(x11097 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11098 = arg2[198 * steps + ((cycle - 0) & mask)];
          assert(x11098 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11099 = arg2[199 * steps + ((cycle - 0) & mask)];
          assert(x11099 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11100 = arg2[200 * steps + ((cycle - 0) & mask)];
          assert(x11100 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11101 = arg2[201 * steps + ((cycle - 0) & mask)];
          assert(x11101 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11102 = arg2[202 * steps + ((cycle - 0) & mask)];
          assert(x11102 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11103 = arg2[203 * steps + ((cycle - 0) & mask)];
          assert(x11103 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11104 = arg2[204 * steps + ((cycle - 0) & mask)];
          assert(x11104 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11105 = arg2[205 * steps + ((cycle - 0) & mask)];
          assert(x11105 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11106 = arg2[206 * steps + ((cycle - 0) & mask)];
          assert(x11106 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11107 = arg2[207 * steps + ((cycle - 0) & mask)];
          assert(x11107 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11108 = arg2[208 * steps + ((cycle - 0) & mask)];
          assert(x11108 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11109 = arg2[209 * steps + ((cycle - 0) & mask)];
          assert(x11109 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11110 = arg2[210 * steps + ((cycle - 0) & mask)];
          assert(x11110 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11111 = arg2[211 * steps + ((cycle - 0) & mask)];
          assert(x11111 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11112 = arg2[212 * steps + ((cycle - 0) & mask)];
          assert(x11112 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11113 = arg2[213 * steps + ((cycle - 0) & mask)];
          assert(x11113 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11114 = arg2[214 * steps + ((cycle - 0) & mask)];
          assert(x11114 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11115 = arg2[215 * steps + ((cycle - 0) & mask)];
          assert(x11115 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11116 = arg2[216 * steps + ((cycle - 0) & mask)];
          assert(x11116 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11117 = arg2[217 * steps + ((cycle - 0) & mask)];
          assert(x11117 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11118 = arg2[218 * steps + ((cycle - 0) & mask)];
          assert(x11118 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11119 = arg2[219 * steps + ((cycle - 0) & mask)];
          assert(x11119 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11120 = arg2[220 * steps + ((cycle - 0) & mask)];
          assert(x11120 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11121 = arg2[221 * steps + ((cycle - 0) & mask)];
          assert(x11121 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11122 = arg2[222 * steps + ((cycle - 0) & mask)];
          assert(x11122 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11123 = x11092 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11124 = x11093 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11125 = x11094 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11126 = x11095 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11127 = x11096 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11128 = x11097 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11129 = x11098 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11130 = x11100 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11131 = x11101 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11132 = x11102 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11133 = x11103 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11134 = x11104 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11135 = x11105 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11136 = x11106 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11137 = x11108 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11138 = x11109 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11139 = x11110 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11140 = x11111 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11141 = x11112 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11142 = x11113 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11143 = x11114 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11144 = x11116 * x93;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11145 = x11117 * x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11146 = x11118 * x64;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11147 = x11119 * x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11148 = x11120 * x58;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11149 = x11121 * x52;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:53)
          auto x11150 = x11122 * x61;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":415:27)
          auto x11151 = x10997 + x78;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":415:27)
          auto x11152 = x11151 + x8928;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11153 = x11091 + x11123;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11154 = x11099 + x11130;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11155 = x11107 + x11137;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11156 = x11115 + x11144;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11157 = x11153 + x11124;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11158 = x11154 + x11131;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11159 = x11155 + x11138;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11160 = x11156 + x11145;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11161 = x11157 + x11125;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11162 = x11158 + x11132;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11163 = x11159 + x11139;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11164 = x11160 + x11146;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11165 = x11161 + x11126;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11166 = x11162 + x11133;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11167 = x11163 + x11140;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11168 = x11164 + x11147;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11169 = x11165 + x11127;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11170 = x11166 + x11134;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11171 = x11167 + x11141;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11172 = x11168 + x11148;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11173 = x11169 + x11128;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11174 = x11170 + x11135;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11175 = x11171 + x11142;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11176 = x11172 + x11149;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11177 = x11176 + x11150;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11178 = x11175 + x11143;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11179 = x11174 + x11136;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":147:30)
          auto x11180 = x11173 + x11129;
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11177);
            reg = x11177;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11178);
            reg = x11178;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11179);
            reg = x11179;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11180);
            reg = x11180;
          }
          {
            extern_args[0] = x11152;
            extern_args[1] = x11177;
            extern_args[2] = x11178;
            extern_args[3] = x11179;
            extern_args[4] = x11180;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11181 = arg2[126 * steps + ((cycle - 0) & mask)];
          assert(x11181 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11182 = arg2[127 * steps + ((cycle - 0) & mask)];
          assert(x11182 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11183 = arg2[128 * steps + ((cycle - 0) & mask)];
          assert(x11183 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x11184 = arg2[129 * steps + ((cycle - 0) & mask)];
          assert(x11184 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11152);
            reg = x11152;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11181);
            reg = x11181;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11182);
            reg = x11182;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11183);
            reg = x11183;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x11184);
            reg = x11184;
          }
        }
      }
      if (x8946 != 0) {
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        if (x8936 != 0) {
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11185 = arg2[12 * steps + ((cycle - 0) & mask)];
      assert(x11185 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11186 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x11186 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11187 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x11187 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11188 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x11188 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11189 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x11189 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11190 = arg2[13 * steps + ((cycle - 0) & mask)];
      assert(x11190 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11191 = arg2[14 * steps + ((cycle - 0) & mask)];
      assert(x11191 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11192 = arg2[15 * steps + ((cycle - 0) & mask)];
      assert(x11192 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11193 = arg2[16 * steps + ((cycle - 0) & mask)];
      assert(x11193 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11194 = arg2[17 * steps + ((cycle - 0) & mask)];
      assert(x11194 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11195 = arg2[18 * steps + ((cycle - 0) & mask)];
      assert(x11195 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11196 = arg2[19 * steps + ((cycle - 0) & mask)];
      assert(x11196 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11197 = arg2[20 * steps + ((cycle - 0) & mask)];
      assert(x11197 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11198 = arg2[21 * steps + ((cycle - 0) & mask)];
      assert(x11198 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11199 = arg2[22 * steps + ((cycle - 0) & mask)];
      assert(x11199 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11200 = arg2[23 * steps + ((cycle - 0) & mask)];
      assert(x11200 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11201 = arg2[24 * steps + ((cycle - 0) & mask)];
      assert(x11201 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11202 = arg2[25 * steps + ((cycle - 0) & mask)];
      assert(x11202 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11203 = arg2[26 * steps + ((cycle - 0) & mask)];
      assert(x11203 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11204 = arg2[27 * steps + ((cycle - 0) & mask)];
      assert(x11204 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11205 = arg2[28 * steps + ((cycle - 0) & mask)];
      assert(x11205 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11206 = arg2[29 * steps + ((cycle - 0) & mask)];
      assert(x11206 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11207 = arg2[30 * steps + ((cycle - 0) & mask)];
      assert(x11207 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11208 = arg2[31 * steps + ((cycle - 0) & mask)];
      assert(x11208 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11209 = arg2[32 * steps + ((cycle - 0) & mask)];
      assert(x11209 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11210 = arg2[33 * steps + ((cycle - 0) & mask)];
      assert(x11210 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11211 = arg2[79 * steps + ((cycle - 0) & mask)];
      assert(x11211 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11212 = arg2[80 * steps + ((cycle - 0) & mask)];
      assert(x11212 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11213 = arg2[81 * steps + ((cycle - 0) & mask)];
      assert(x11213 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11214 = arg2[82 * steps + ((cycle - 0) & mask)];
      assert(x11214 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11215 = arg2[83 * steps + ((cycle - 0) & mask)];
      assert(x11215 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11216 = arg2[84 * steps + ((cycle - 0) & mask)];
      assert(x11216 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11217 = arg2[85 * steps + ((cycle - 0) & mask)];
      assert(x11217 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11218 = arg2[86 * steps + ((cycle - 0) & mask)];
      assert(x11218 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11219 = arg2[87 * steps + ((cycle - 0) & mask)];
      assert(x11219 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11220 = arg2[88 * steps + ((cycle - 0) & mask)];
      assert(x11220 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11221 = arg2[159 * steps + ((cycle - 1) & mask)];
      assert(x11221 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11222 = arg2[160 * steps + ((cycle - 1) & mask)];
      assert(x11222 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11223 = arg2[161 * steps + ((cycle - 1) & mask)];
      assert(x11223 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11224 = arg2[162 * steps + ((cycle - 1) & mask)];
      assert(x11224 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11225 = arg2[163 * steps + ((cycle - 1) & mask)];
      assert(x11225 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11226 = arg2[164 * steps + ((cycle - 1) & mask)];
      assert(x11226 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11227 = arg2[165 * steps + ((cycle - 1) & mask)];
      assert(x11227 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11228 = arg2[166 * steps + ((cycle - 1) & mask)];
      assert(x11228 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11229 = arg2[167 * steps + ((cycle - 1) & mask)];
      assert(x11229 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11230 = arg2[168 * steps + ((cycle - 1) & mask)];
      assert(x11230 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11231 = arg2[169 * steps + ((cycle - 1) & mask)];
      assert(x11231 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11232 = arg2[170 * steps + ((cycle - 1) & mask)];
      assert(x11232 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11233 = arg2[171 * steps + ((cycle - 1) & mask)];
      assert(x11233 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11234 = arg2[172 * steps + ((cycle - 1) & mask)];
      assert(x11234 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11235 = arg2[173 * steps + ((cycle - 1) & mask)];
      assert(x11235 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11236 = arg2[174 * steps + ((cycle - 1) & mask)];
      assert(x11236 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11237 = arg2[175 * steps + ((cycle - 1) & mask)];
      assert(x11237 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11238 = arg2[176 * steps + ((cycle - 1) & mask)];
      assert(x11238 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11239 = arg2[177 * steps + ((cycle - 1) & mask)];
      assert(x11239 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11240 = arg2[178 * steps + ((cycle - 1) & mask)];
      assert(x11240 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11241 = arg2[179 * steps + ((cycle - 1) & mask)];
      assert(x11241 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11242 = arg2[180 * steps + ((cycle - 1) & mask)];
      assert(x11242 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11243 = arg2[181 * steps + ((cycle - 1) & mask)];
      assert(x11243 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11244 = arg2[182 * steps + ((cycle - 1) & mask)];
      assert(x11244 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11245 = arg2[183 * steps + ((cycle - 1) & mask)];
      assert(x11245 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11246 = arg2[184 * steps + ((cycle - 1) & mask)];
      assert(x11246 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11247 = arg2[185 * steps + ((cycle - 1) & mask)];
      assert(x11247 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11248 = arg2[186 * steps + ((cycle - 1) & mask)];
      assert(x11248 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11249 = arg2[187 * steps + ((cycle - 1) & mask)];
      assert(x11249 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11250 = arg2[188 * steps + ((cycle - 1) & mask)];
      assert(x11250 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11251 = arg2[189 * steps + ((cycle - 1) & mask)];
      assert(x11251 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11252 = arg2[190 * steps + ((cycle - 1) & mask)];
      assert(x11252 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11253 = arg2[191 * steps + ((cycle - 1) & mask)];
      assert(x11253 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11254 = arg2[192 * steps + ((cycle - 1) & mask)];
      assert(x11254 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11255 = arg2[193 * steps + ((cycle - 1) & mask)];
      assert(x11255 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11256 = arg2[194 * steps + ((cycle - 1) & mask)];
      assert(x11256 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11257 = arg2[195 * steps + ((cycle - 1) & mask)];
      assert(x11257 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11258 = arg2[196 * steps + ((cycle - 1) & mask)];
      assert(x11258 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11259 = arg2[197 * steps + ((cycle - 1) & mask)];
      assert(x11259 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11260 = arg2[198 * steps + ((cycle - 1) & mask)];
      assert(x11260 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11261 = arg2[199 * steps + ((cycle - 1) & mask)];
      assert(x11261 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11262 = arg2[200 * steps + ((cycle - 1) & mask)];
      assert(x11262 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11263 = arg2[201 * steps + ((cycle - 1) & mask)];
      assert(x11263 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11264 = arg2[202 * steps + ((cycle - 1) & mask)];
      assert(x11264 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11265 = arg2[203 * steps + ((cycle - 1) & mask)];
      assert(x11265 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11266 = arg2[204 * steps + ((cycle - 1) & mask)];
      assert(x11266 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11267 = arg2[205 * steps + ((cycle - 1) & mask)];
      assert(x11267 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11268 = arg2[206 * steps + ((cycle - 1) & mask)];
      assert(x11268 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11269 = arg2[207 * steps + ((cycle - 1) & mask)];
      assert(x11269 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11270 = arg2[208 * steps + ((cycle - 1) & mask)];
      assert(x11270 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11271 = arg2[209 * steps + ((cycle - 1) & mask)];
      assert(x11271 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11272 = arg2[210 * steps + ((cycle - 1) & mask)];
      assert(x11272 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11273 = arg2[211 * steps + ((cycle - 1) & mask)];
      assert(x11273 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11274 = arg2[212 * steps + ((cycle - 1) & mask)];
      assert(x11274 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11275 = arg2[213 * steps + ((cycle - 1) & mask)];
      assert(x11275 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11276 = arg2[214 * steps + ((cycle - 1) & mask)];
      assert(x11276 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11277 = arg2[215 * steps + ((cycle - 1) & mask)];
      assert(x11277 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11278 = arg2[216 * steps + ((cycle - 1) & mask)];
      assert(x11278 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11279 = arg2[217 * steps + ((cycle - 1) & mask)];
      assert(x11279 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11280 = arg2[218 * steps + ((cycle - 1) & mask)];
      assert(x11280 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11281 = arg2[219 * steps + ((cycle - 1) & mask)];
      assert(x11281 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11282 = arg2[220 * steps + ((cycle - 1) & mask)];
      assert(x11282 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11283 = arg2[221 * steps + ((cycle - 1) & mask)];
      assert(x11283 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11284 = arg2[222 * steps + ((cycle - 1) & mask)];
      assert(x11284 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11285 = arg2[191 * steps + ((cycle - 2) & mask)];
      assert(x11285 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11286 = arg2[192 * steps + ((cycle - 2) & mask)];
      assert(x11286 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11287 = arg2[193 * steps + ((cycle - 2) & mask)];
      assert(x11287 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11288 = arg2[194 * steps + ((cycle - 2) & mask)];
      assert(x11288 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11289 = arg2[195 * steps + ((cycle - 2) & mask)];
      assert(x11289 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11290 = arg2[196 * steps + ((cycle - 2) & mask)];
      assert(x11290 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11291 = arg2[197 * steps + ((cycle - 2) & mask)];
      assert(x11291 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11292 = arg2[198 * steps + ((cycle - 2) & mask)];
      assert(x11292 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11293 = arg2[199 * steps + ((cycle - 2) & mask)];
      assert(x11293 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11294 = arg2[200 * steps + ((cycle - 2) & mask)];
      assert(x11294 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11295 = arg2[201 * steps + ((cycle - 2) & mask)];
      assert(x11295 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11296 = arg2[202 * steps + ((cycle - 2) & mask)];
      assert(x11296 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11297 = arg2[203 * steps + ((cycle - 2) & mask)];
      assert(x11297 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11298 = arg2[204 * steps + ((cycle - 2) & mask)];
      assert(x11298 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11299 = arg2[205 * steps + ((cycle - 2) & mask)];
      assert(x11299 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11300 = arg2[206 * steps + ((cycle - 2) & mask)];
      assert(x11300 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11301 = arg2[207 * steps + ((cycle - 2) & mask)];
      assert(x11301 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11302 = arg2[208 * steps + ((cycle - 2) & mask)];
      assert(x11302 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11303 = arg2[209 * steps + ((cycle - 2) & mask)];
      assert(x11303 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11304 = arg2[210 * steps + ((cycle - 2) & mask)];
      assert(x11304 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11305 = arg2[211 * steps + ((cycle - 2) & mask)];
      assert(x11305 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11306 = arg2[212 * steps + ((cycle - 2) & mask)];
      assert(x11306 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11307 = arg2[213 * steps + ((cycle - 2) & mask)];
      assert(x11307 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11308 = arg2[214 * steps + ((cycle - 2) & mask)];
      assert(x11308 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11309 = arg2[215 * steps + ((cycle - 2) & mask)];
      assert(x11309 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11310 = arg2[216 * steps + ((cycle - 2) & mask)];
      assert(x11310 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11311 = arg2[217 * steps + ((cycle - 2) & mask)];
      assert(x11311 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11312 = arg2[218 * steps + ((cycle - 2) & mask)];
      assert(x11312 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11313 = arg2[219 * steps + ((cycle - 2) & mask)];
      assert(x11313 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11314 = arg2[220 * steps + ((cycle - 2) & mask)];
      assert(x11314 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11315 = arg2[221 * steps + ((cycle - 2) & mask)];
      assert(x11315 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11316 = arg2[222 * steps + ((cycle - 2) & mask)];
      assert(x11316 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11317 = arg2[159 * steps + ((cycle - 2) & mask)];
      assert(x11317 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11318 = arg2[160 * steps + ((cycle - 2) & mask)];
      assert(x11318 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11319 = arg2[161 * steps + ((cycle - 2) & mask)];
      assert(x11319 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11320 = arg2[162 * steps + ((cycle - 2) & mask)];
      assert(x11320 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11321 = arg2[163 * steps + ((cycle - 2) & mask)];
      assert(x11321 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11322 = arg2[164 * steps + ((cycle - 2) & mask)];
      assert(x11322 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11323 = arg2[165 * steps + ((cycle - 2) & mask)];
      assert(x11323 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11324 = arg2[166 * steps + ((cycle - 2) & mask)];
      assert(x11324 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11325 = arg2[167 * steps + ((cycle - 2) & mask)];
      assert(x11325 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11326 = arg2[168 * steps + ((cycle - 2) & mask)];
      assert(x11326 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11327 = arg2[169 * steps + ((cycle - 2) & mask)];
      assert(x11327 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11328 = arg2[170 * steps + ((cycle - 2) & mask)];
      assert(x11328 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11329 = arg2[171 * steps + ((cycle - 2) & mask)];
      assert(x11329 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11330 = arg2[172 * steps + ((cycle - 2) & mask)];
      assert(x11330 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11331 = arg2[173 * steps + ((cycle - 2) & mask)];
      assert(x11331 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11332 = arg2[174 * steps + ((cycle - 2) & mask)];
      assert(x11332 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11333 = arg2[175 * steps + ((cycle - 2) & mask)];
      assert(x11333 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11334 = arg2[176 * steps + ((cycle - 2) & mask)];
      assert(x11334 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11335 = arg2[177 * steps + ((cycle - 2) & mask)];
      assert(x11335 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11336 = arg2[178 * steps + ((cycle - 2) & mask)];
      assert(x11336 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11337 = arg2[179 * steps + ((cycle - 2) & mask)];
      assert(x11337 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11338 = arg2[180 * steps + ((cycle - 2) & mask)];
      assert(x11338 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11339 = arg2[181 * steps + ((cycle - 2) & mask)];
      assert(x11339 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11340 = arg2[182 * steps + ((cycle - 2) & mask)];
      assert(x11340 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11341 = arg2[183 * steps + ((cycle - 2) & mask)];
      assert(x11341 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11342 = arg2[184 * steps + ((cycle - 2) & mask)];
      assert(x11342 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11343 = arg2[185 * steps + ((cycle - 2) & mask)];
      assert(x11343 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11344 = arg2[186 * steps + ((cycle - 2) & mask)];
      assert(x11344 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11345 = arg2[187 * steps + ((cycle - 2) & mask)];
      assert(x11345 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11346 = arg2[188 * steps + ((cycle - 2) & mask)];
      assert(x11346 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11347 = arg2[189 * steps + ((cycle - 2) & mask)];
      assert(x11347 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11348 = arg2[190 * steps + ((cycle - 2) & mask)];
      assert(x11348 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11349 = arg2[191 * steps + ((cycle - 3) & mask)];
      assert(x11349 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11350 = arg2[192 * steps + ((cycle - 3) & mask)];
      assert(x11350 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11351 = arg2[193 * steps + ((cycle - 3) & mask)];
      assert(x11351 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11352 = arg2[194 * steps + ((cycle - 3) & mask)];
      assert(x11352 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11353 = arg2[195 * steps + ((cycle - 3) & mask)];
      assert(x11353 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11354 = arg2[196 * steps + ((cycle - 3) & mask)];
      assert(x11354 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11355 = arg2[197 * steps + ((cycle - 3) & mask)];
      assert(x11355 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11356 = arg2[198 * steps + ((cycle - 3) & mask)];
      assert(x11356 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11357 = arg2[199 * steps + ((cycle - 3) & mask)];
      assert(x11357 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11358 = arg2[200 * steps + ((cycle - 3) & mask)];
      assert(x11358 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11359 = arg2[201 * steps + ((cycle - 3) & mask)];
      assert(x11359 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11360 = arg2[202 * steps + ((cycle - 3) & mask)];
      assert(x11360 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11361 = arg2[203 * steps + ((cycle - 3) & mask)];
      assert(x11361 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11362 = arg2[204 * steps + ((cycle - 3) & mask)];
      assert(x11362 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11363 = arg2[205 * steps + ((cycle - 3) & mask)];
      assert(x11363 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11364 = arg2[206 * steps + ((cycle - 3) & mask)];
      assert(x11364 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11365 = arg2[207 * steps + ((cycle - 3) & mask)];
      assert(x11365 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11366 = arg2[208 * steps + ((cycle - 3) & mask)];
      assert(x11366 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11367 = arg2[209 * steps + ((cycle - 3) & mask)];
      assert(x11367 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11368 = arg2[210 * steps + ((cycle - 3) & mask)];
      assert(x11368 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11369 = arg2[211 * steps + ((cycle - 3) & mask)];
      assert(x11369 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11370 = arg2[212 * steps + ((cycle - 3) & mask)];
      assert(x11370 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11371 = arg2[213 * steps + ((cycle - 3) & mask)];
      assert(x11371 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11372 = arg2[214 * steps + ((cycle - 3) & mask)];
      assert(x11372 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11373 = arg2[215 * steps + ((cycle - 3) & mask)];
      assert(x11373 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11374 = arg2[216 * steps + ((cycle - 3) & mask)];
      assert(x11374 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11375 = arg2[217 * steps + ((cycle - 3) & mask)];
      assert(x11375 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11376 = arg2[218 * steps + ((cycle - 3) & mask)];
      assert(x11376 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11377 = arg2[219 * steps + ((cycle - 3) & mask)];
      assert(x11377 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11378 = arg2[220 * steps + ((cycle - 3) & mask)];
      assert(x11378 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11379 = arg2[221 * steps + ((cycle - 3) & mask)];
      assert(x11379 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11380 = arg2[222 * steps + ((cycle - 3) & mask)];
      assert(x11380 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11381 = arg2[159 * steps + ((cycle - 3) & mask)];
      assert(x11381 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11382 = arg2[160 * steps + ((cycle - 3) & mask)];
      assert(x11382 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11383 = arg2[161 * steps + ((cycle - 3) & mask)];
      assert(x11383 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11384 = arg2[162 * steps + ((cycle - 3) & mask)];
      assert(x11384 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11385 = arg2[163 * steps + ((cycle - 3) & mask)];
      assert(x11385 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11386 = arg2[164 * steps + ((cycle - 3) & mask)];
      assert(x11386 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11387 = arg2[165 * steps + ((cycle - 3) & mask)];
      assert(x11387 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11388 = arg2[166 * steps + ((cycle - 3) & mask)];
      assert(x11388 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11389 = arg2[167 * steps + ((cycle - 3) & mask)];
      assert(x11389 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11390 = arg2[168 * steps + ((cycle - 3) & mask)];
      assert(x11390 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11391 = arg2[169 * steps + ((cycle - 3) & mask)];
      assert(x11391 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11392 = arg2[170 * steps + ((cycle - 3) & mask)];
      assert(x11392 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11393 = arg2[171 * steps + ((cycle - 3) & mask)];
      assert(x11393 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11394 = arg2[172 * steps + ((cycle - 3) & mask)];
      assert(x11394 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11395 = arg2[173 * steps + ((cycle - 3) & mask)];
      assert(x11395 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11396 = arg2[174 * steps + ((cycle - 3) & mask)];
      assert(x11396 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11397 = arg2[175 * steps + ((cycle - 3) & mask)];
      assert(x11397 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11398 = arg2[176 * steps + ((cycle - 3) & mask)];
      assert(x11398 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11399 = arg2[177 * steps + ((cycle - 3) & mask)];
      assert(x11399 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11400 = arg2[178 * steps + ((cycle - 3) & mask)];
      assert(x11400 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11401 = arg2[179 * steps + ((cycle - 3) & mask)];
      assert(x11401 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11402 = arg2[180 * steps + ((cycle - 3) & mask)];
      assert(x11402 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11403 = arg2[181 * steps + ((cycle - 3) & mask)];
      assert(x11403 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11404 = arg2[182 * steps + ((cycle - 3) & mask)];
      assert(x11404 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11405 = arg2[183 * steps + ((cycle - 3) & mask)];
      assert(x11405 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11406 = arg2[184 * steps + ((cycle - 3) & mask)];
      assert(x11406 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11407 = arg2[185 * steps + ((cycle - 3) & mask)];
      assert(x11407 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11408 = arg2[186 * steps + ((cycle - 3) & mask)];
      assert(x11408 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11409 = arg2[187 * steps + ((cycle - 3) & mask)];
      assert(x11409 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11410 = arg2[188 * steps + ((cycle - 3) & mask)];
      assert(x11410 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11411 = arg2[189 * steps + ((cycle - 3) & mask)];
      assert(x11411 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11412 = arg2[190 * steps + ((cycle - 3) & mask)];
      assert(x11412 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11413 = arg2[159 * steps + ((cycle - 4) & mask)];
      assert(x11413 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11414 = arg2[160 * steps + ((cycle - 4) & mask)];
      assert(x11414 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11415 = arg2[161 * steps + ((cycle - 4) & mask)];
      assert(x11415 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11416 = arg2[162 * steps + ((cycle - 4) & mask)];
      assert(x11416 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11417 = arg2[163 * steps + ((cycle - 4) & mask)];
      assert(x11417 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11418 = arg2[164 * steps + ((cycle - 4) & mask)];
      assert(x11418 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11419 = arg2[165 * steps + ((cycle - 4) & mask)];
      assert(x11419 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11420 = arg2[166 * steps + ((cycle - 4) & mask)];
      assert(x11420 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11421 = arg2[167 * steps + ((cycle - 4) & mask)];
      assert(x11421 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11422 = arg2[168 * steps + ((cycle - 4) & mask)];
      assert(x11422 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11423 = arg2[169 * steps + ((cycle - 4) & mask)];
      assert(x11423 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11424 = arg2[170 * steps + ((cycle - 4) & mask)];
      assert(x11424 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11425 = arg2[171 * steps + ((cycle - 4) & mask)];
      assert(x11425 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11426 = arg2[172 * steps + ((cycle - 4) & mask)];
      assert(x11426 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11427 = arg2[173 * steps + ((cycle - 4) & mask)];
      assert(x11427 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11428 = arg2[174 * steps + ((cycle - 4) & mask)];
      assert(x11428 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11429 = arg2[175 * steps + ((cycle - 4) & mask)];
      assert(x11429 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11430 = arg2[176 * steps + ((cycle - 4) & mask)];
      assert(x11430 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11431 = arg2[177 * steps + ((cycle - 4) & mask)];
      assert(x11431 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11432 = arg2[178 * steps + ((cycle - 4) & mask)];
      assert(x11432 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11433 = arg2[179 * steps + ((cycle - 4) & mask)];
      assert(x11433 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11434 = arg2[180 * steps + ((cycle - 4) & mask)];
      assert(x11434 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11435 = arg2[181 * steps + ((cycle - 4) & mask)];
      assert(x11435 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11436 = arg2[182 * steps + ((cycle - 4) & mask)];
      assert(x11436 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11437 = arg2[183 * steps + ((cycle - 4) & mask)];
      assert(x11437 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11438 = arg2[184 * steps + ((cycle - 4) & mask)];
      assert(x11438 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11439 = arg2[185 * steps + ((cycle - 4) & mask)];
      assert(x11439 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11440 = arg2[186 * steps + ((cycle - 4) & mask)];
      assert(x11440 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11441 = arg2[187 * steps + ((cycle - 4) & mask)];
      assert(x11441 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11442 = arg2[188 * steps + ((cycle - 4) & mask)];
      assert(x11442 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11443 = arg2[189 * steps + ((cycle - 4) & mask)];
      assert(x11443 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11444 = arg2[190 * steps + ((cycle - 4) & mask)];
      assert(x11444 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11445 = arg2[191 * steps + ((cycle - 4) & mask)];
      assert(x11445 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11446 = arg2[192 * steps + ((cycle - 4) & mask)];
      assert(x11446 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11447 = arg2[193 * steps + ((cycle - 4) & mask)];
      assert(x11447 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11448 = arg2[194 * steps + ((cycle - 4) & mask)];
      assert(x11448 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11449 = arg2[195 * steps + ((cycle - 4) & mask)];
      assert(x11449 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11450 = arg2[196 * steps + ((cycle - 4) & mask)];
      assert(x11450 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11451 = arg2[197 * steps + ((cycle - 4) & mask)];
      assert(x11451 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11452 = arg2[198 * steps + ((cycle - 4) & mask)];
      assert(x11452 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11453 = arg2[199 * steps + ((cycle - 4) & mask)];
      assert(x11453 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11454 = arg2[200 * steps + ((cycle - 4) & mask)];
      assert(x11454 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11455 = arg2[201 * steps + ((cycle - 4) & mask)];
      assert(x11455 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11456 = arg2[202 * steps + ((cycle - 4) & mask)];
      assert(x11456 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11457 = arg2[203 * steps + ((cycle - 4) & mask)];
      assert(x11457 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11458 = arg2[204 * steps + ((cycle - 4) & mask)];
      assert(x11458 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11459 = arg2[205 * steps + ((cycle - 4) & mask)];
      assert(x11459 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11460 = arg2[206 * steps + ((cycle - 4) & mask)];
      assert(x11460 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11461 = arg2[207 * steps + ((cycle - 4) & mask)];
      assert(x11461 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11462 = arg2[208 * steps + ((cycle - 4) & mask)];
      assert(x11462 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11463 = arg2[209 * steps + ((cycle - 4) & mask)];
      assert(x11463 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11464 = arg2[210 * steps + ((cycle - 4) & mask)];
      assert(x11464 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11465 = arg2[211 * steps + ((cycle - 4) & mask)];
      assert(x11465 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11466 = arg2[212 * steps + ((cycle - 4) & mask)];
      assert(x11466 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11467 = arg2[213 * steps + ((cycle - 4) & mask)];
      assert(x11467 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11468 = arg2[214 * steps + ((cycle - 4) & mask)];
      assert(x11468 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11469 = arg2[215 * steps + ((cycle - 4) & mask)];
      assert(x11469 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11470 = arg2[216 * steps + ((cycle - 4) & mask)];
      assert(x11470 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11471 = arg2[217 * steps + ((cycle - 4) & mask)];
      assert(x11471 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11472 = arg2[218 * steps + ((cycle - 4) & mask)];
      assert(x11472 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11473 = arg2[219 * steps + ((cycle - 4) & mask)];
      assert(x11473 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11474 = arg2[220 * steps + ((cycle - 4) & mask)];
      assert(x11474 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11475 = arg2[221 * steps + ((cycle - 4) & mask)];
      assert(x11475 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x11476 = arg2[222 * steps + ((cycle - 4) & mask)];
      assert(x11476 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11477 = x11221 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11478 = x11221 * x11317;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11479 = x11222 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11480 = x11222 * x11318;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11481 = x11223 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11482 = x11223 * x11319;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11483 = x11224 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11484 = x11224 * x11320;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11485 = x11225 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11486 = x11225 * x11321;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11487 = x11226 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11488 = x11226 * x11322;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11489 = x11227 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11490 = x11227 * x11323;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11491 = x11228 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11492 = x11228 * x11324;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11493 = x11229 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11494 = x11229 * x11325;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11495 = x11230 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11496 = x11230 * x11326;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11497 = x11231 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11498 = x11231 * x11327;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11499 = x11232 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11500 = x11232 * x11328;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11501 = x11233 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11502 = x11233 * x11329;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11503 = x11234 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11504 = x11234 * x11330;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11505 = x11235 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11506 = x11235 * x11331;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11507 = x11236 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11508 = x11236 * x11332;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11509 = x11237 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11510 = x11237 * x11333;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11511 = x11238 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11512 = x11238 * x11334;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11513 = x11239 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11514 = x11239 * x11335;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11515 = x11240 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11516 = x11240 * x11336;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11517 = x11241 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11518 = x11241 * x11337;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11519 = x11242 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11520 = x11242 * x11338;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11521 = x11243 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11522 = x11243 * x11339;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11523 = x11244 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11524 = x11244 * x11340;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11525 = x11245 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11526 = x11245 * x11341;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11527 = x11246 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11528 = x11246 * x11342;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11529 = x11247 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11530 = x11247 * x11343;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11531 = x11248 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11532 = x11248 * x11344;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11533 = x11249 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11534 = x11249 * x11345;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11535 = x11250 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11536 = x11250 * x11346;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11537 = x11251 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11538 = x11251 * x11347;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11539 = x11252 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x11540 = x11252 * x11348;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11541 = x11253 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11542 = x11253 * x11285;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11543 = x11254 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11544 = x11254 * x11286;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11545 = x11255 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11546 = x11255 * x11287;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11547 = x11256 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11548 = x11256 * x11288;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11549 = x11257 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11550 = x11257 * x11289;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11551 = x11258 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11552 = x11258 * x11290;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11553 = x11259 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11554 = x11259 * x11291;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11555 = x11260 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11556 = x11260 * x11292;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11557 = x11261 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11558 = x11261 * x11293;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11559 = x11262 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11560 = x11262 * x11294;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11561 = x11263 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11562 = x11263 * x11295;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11563 = x11264 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11564 = x11264 * x11296;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11565 = x11265 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11566 = x11265 * x11297;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11567 = x11266 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11568 = x11266 * x11298;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11569 = x11267 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11570 = x11267 * x11299;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11571 = x11268 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11572 = x11268 * x11300;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11573 = x11269 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11574 = x11269 * x11301;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11575 = x11270 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11576 = x11270 * x11302;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11577 = x11271 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11578 = x11271 * x11303;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11579 = x11272 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11580 = x11272 * x11304;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11581 = x11273 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11582 = x11273 * x11305;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11583 = x11274 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11584 = x11274 * x11306;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11585 = x11275 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11586 = x11275 * x11307;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11587 = x11276 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11588 = x11276 * x11308;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11589 = x11277 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11590 = x11277 * x11309;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11591 = x11278 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11592 = x11278 * x11310;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11593 = x11279 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11594 = x11279 * x11311;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11595 = x11280 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11596 = x11280 * x11312;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11597 = x11281 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11598 = x11281 * x11313;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11599 = x11282 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11600 = x11282 * x11314;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11601 = x11283 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11602 = x11283 * x11315;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11603 = x11284 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x11604 = x11284 * x11316;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11605 = x11185 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:26)
      auto x11606 = x11187 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:61)
      auto x11607 = x11189 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11608 = x11190 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11609 = x11191 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11610 = x11192 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11611 = x11193 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11612 = x11194 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11613 = x11196 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11614 = x11197 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11615 = x11198 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11616 = x11199 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11617 = x11200 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11618 = x11201 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11619 = x11202 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11620 = x11203 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11621 = x11204 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11622 = x11205 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11623 = x11206 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11624 = x11207 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11625 = x11208 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11626 = x11209 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11627 = x11210 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11628 = x11212 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11629 = x11213 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11630 = x11214 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11631 = x11215 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11632 = x11216 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11633 = x11217 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11634 = x11218 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11635 = x11219 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11636 = x11220 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11637 = x11414 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11638 = x11415 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11639 = x11416 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11640 = x11417 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11641 = x11418 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11642 = x11419 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11643 = x11420 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11644 = x11421 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11645 = x11422 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11646 = x11423 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11647 = x11424 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11648 = x11425 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11649 = x11426 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11650 = x11427 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11651 = x11428 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11652 = x11430 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11653 = x11431 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11654 = x11432 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11655 = x11433 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11656 = x11434 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11657 = x11435 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11658 = x11436 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11659 = x11437 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11660 = x11438 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11661 = x11439 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11662 = x11440 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11663 = x11441 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11664 = x11442 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11665 = x11443 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11666 = x11444 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11667 = x11446 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11668 = x11447 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11669 = x11448 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11670 = x11449 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11671 = x11450 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11672 = x11451 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11673 = x11452 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11674 = x11453 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11675 = x11454 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11676 = x11455 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11677 = x11456 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11678 = x11457 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11679 = x11458 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11680 = x11459 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11681 = x11460 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11682 = x11462 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11683 = x11463 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11684 = x11464 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11685 = x11465 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11686 = x11466 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11687 = x11467 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11688 = x11468 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11689 = x11469 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11690 = x11470 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11691 = x11471 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11692 = x11472 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11693 = x11473 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11694 = x11474 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11695 = x11475 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x11696 = x11476 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11697 = x11477 * x11230;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11698 = x11478 * x11381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11699 = x11479 * x11231;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11700 = x11480 * x11382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11701 = x11481 * x11232;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11702 = x11482 * x11383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11703 = x11483 * x11233;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11704 = x11484 * x11384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11705 = x11485 * x11234;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11706 = x11486 * x11385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11707 = x11487 * x11235;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11708 = x11488 * x11386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11709 = x11489 * x11236;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11710 = x11490 * x11387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11711 = x11491 * x11237;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11712 = x11492 * x11388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11713 = x11493 * x11238;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11714 = x11494 * x11389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11715 = x11495 * x11239;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11716 = x11496 * x11390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11717 = x11497 * x11240;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11718 = x11498 * x11391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11719 = x11499 * x11241;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11720 = x11500 * x11392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11721 = x11501 * x11242;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11722 = x11502 * x11393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11723 = x11503 * x11243;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11724 = x11504 * x11394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11725 = x11505 * x11244;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11726 = x11506 * x11395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11727 = x11507 * x11245;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11728 = x11508 * x11396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11729 = x11509 * x11246;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11730 = x11510 * x11397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11731 = x11511 * x11247;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11732 = x11512 * x11398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11733 = x11513 * x11248;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11734 = x11514 * x11399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11735 = x11515 * x11249;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11736 = x11516 * x11400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11737 = x11517 * x11250;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11738 = x11518 * x11401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11739 = x11519 * x11251;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11740 = x11520 * x11402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11741 = x11521 * x11252;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11742 = x11522 * x11403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11743 = x11523 * x11221;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11744 = x11524 * x11404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11745 = x11525 * x11222;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11746 = x11526 * x11405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11747 = x11527 * x11223;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11748 = x11528 * x11406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11749 = x11529 * x11224;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11750 = x11530 * x11407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11751 = x11531 * x11225;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11752 = x11532 * x11408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11753 = x11533 * x11226;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11754 = x11534 * x11409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11755 = x11535 * x11227;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11756 = x11536 * x11410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11757 = x11537 * x11228;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11758 = x11538 * x11411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11759 = x11539 * x11229;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":56:14)
      auto x11760 = x11540 * x11412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11761 = x11541 * x11267;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11762 = x11543 * x11268;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11763 = x11545 * x11269;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11764 = x11547 * x11270;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11765 = x11549 * x11271;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11766 = x11551 * x11272;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11767 = x11553 * x11273;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11768 = x11555 * x11274;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11769 = x11557 * x11275;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11770 = x11559 * x11276;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11771 = x11561 * x11277;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11772 = x11563 * x11278;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11773 = x11565 * x11279;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11774 = x11567 * x11280;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11775 = x11569 * x11281;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11776 = x11571 * x11282;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11777 = x11573 * x11283;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11778 = x11575 * x11284;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11779 = x11577 * x11253;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11780 = x11579 * x11254;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11781 = x11581 * x11255;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11782 = x11583 * x11256;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11783 = x11585 * x11257;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11784 = x11587 * x11258;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11785 = x11589 * x11259;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11786 = x11591 * x11260;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11787 = x11593 * x11261;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11788 = x11595 * x11262;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11789 = x11597 * x11263;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11790 = x11599 * x11264;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11791 = x11601 * x11265;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x11792 = x11603 * x11266;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11793 = x96 - x11221;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11794 = x96 - x11222;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11795 = x96 - x11223;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11796 = x96 - x11224;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11797 = x96 - x11225;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11798 = x96 - x11226;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11799 = x96 - x11227;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11800 = x96 - x11228;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11801 = x96 - x11229;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11802 = x96 - x11230;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11803 = x96 - x11231;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11804 = x96 - x11232;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11805 = x96 - x11233;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11806 = x96 - x11234;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11807 = x96 - x11235;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11808 = x96 - x11236;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11809 = x96 - x11237;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11810 = x96 - x11238;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11811 = x96 - x11239;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11812 = x96 - x11240;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11813 = x96 - x11241;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11814 = x96 - x11242;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11815 = x96 - x11243;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11816 = x96 - x11244;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11817 = x96 - x11245;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11818 = x96 - x11246;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11819 = x96 - x11247;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11820 = x96 - x11248;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11821 = x96 - x11249;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11822 = x96 - x11250;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11823 = x96 - x11251;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:69)
      auto x11824 = x96 - x11252;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11825 = x96 - x11253;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11826 = x96 - x11254;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11827 = x96 - x11255;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11828 = x96 - x11256;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11829 = x96 - x11257;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11830 = x96 - x11258;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11831 = x96 - x11259;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11832 = x96 - x11260;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11833 = x96 - x11261;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11834 = x96 - x11262;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11835 = x96 - x11263;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11836 = x96 - x11264;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11837 = x96 - x11265;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11838 = x96 - x11266;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11839 = x96 - x11267;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11840 = x96 - x11268;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11841 = x96 - x11269;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11842 = x96 - x11270;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11843 = x96 - x11271;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11844 = x96 - x11272;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11845 = x96 - x11273;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11846 = x96 - x11274;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11847 = x96 - x11275;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11848 = x96 - x11276;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11849 = x96 - x11277;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11850 = x96 - x11278;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11851 = x96 - x11279;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11852 = x96 - x11280;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11853 = x96 - x11281;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11854 = x96 - x11282;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11855 = x96 - x11283;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:29)
      auto x11856 = x96 - x11284;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11857 = x96 - x11317;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11858 = x96 - x11318;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11859 = x96 - x11319;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11860 = x96 - x11320;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11861 = x96 - x11321;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11862 = x96 - x11322;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11863 = x96 - x11323;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11864 = x96 - x11324;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11865 = x96 - x11325;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11866 = x96 - x11326;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11867 = x96 - x11327;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11868 = x96 - x11328;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11869 = x96 - x11329;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11870 = x96 - x11330;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11871 = x96 - x11331;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11872 = x96 - x11332;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11873 = x96 - x11333;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11874 = x96 - x11334;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11875 = x96 - x11335;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11876 = x96 - x11336;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11877 = x96 - x11337;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11878 = x96 - x11338;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11879 = x96 - x11339;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11880 = x96 - x11340;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11881 = x96 - x11341;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11882 = x96 - x11342;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11883 = x96 - x11343;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11884 = x96 - x11344;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11885 = x96 - x11345;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11886 = x96 - x11346;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11887 = x96 - x11347;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:49)
      auto x11888 = x96 - x11348;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11889 = x96 - x11381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11890 = x96 - x11382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11891 = x96 - x11383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11892 = x96 - x11384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11893 = x96 - x11385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11894 = x96 - x11386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11895 = x96 - x11387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11896 = x96 - x11388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11897 = x96 - x11389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11898 = x96 - x11390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11899 = x96 - x11391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11900 = x96 - x11392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11901 = x96 - x11393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11902 = x96 - x11394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11903 = x96 - x11395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11904 = x96 - x11396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11905 = x96 - x11397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11906 = x96 - x11398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11907 = x96 - x11399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11908 = x96 - x11400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11909 = x96 - x11401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11910 = x96 - x11402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11911 = x96 - x11403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11912 = x96 - x11404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11913 = x96 - x11405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11914 = x96 - x11406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11915 = x96 - x11407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11916 = x96 - x11408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11917 = x96 - x11409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11918 = x96 - x11410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11919 = x96 - x11411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:29)
      auto x11920 = x96 - x11412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:11)
      auto x11921 = x11186 + x11606;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":132:46)
      auto x11922 = x11188 + x11607;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11923 = x11221 + x11230;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11924 = x11222 + x11231;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11925 = x11223 + x11232;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11926 = x11224 + x11233;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11927 = x11225 + x11234;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11928 = x11226 + x11235;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11929 = x11227 + x11236;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11930 = x11228 + x11237;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11931 = x11229 + x11238;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11932 = x11230 + x11239;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11933 = x11231 + x11240;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11934 = x11232 + x11241;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11935 = x11233 + x11242;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11936 = x11234 + x11243;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11937 = x11235 + x11244;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11938 = x11236 + x11245;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11939 = x11237 + x11246;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11940 = x11238 + x11247;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11941 = x11239 + x11248;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11942 = x11240 + x11249;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11943 = x11241 + x11250;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11944 = x11242 + x11251;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11945 = x11243 + x11252;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11946 = x11244 + x11221;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11947 = x11245 + x11222;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11948 = x11246 + x11223;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11949 = x11247 + x11224;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11950 = x11248 + x11225;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11951 = x11249 + x11226;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11952 = x11250 + x11227;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11953 = x11251 + x11228;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11954 = x11252 + x11229;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11955 = x11253 + x11267;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11956 = x11254 + x11268;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11957 = x11255 + x11269;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11958 = x11256 + x11270;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11959 = x11257 + x11271;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11960 = x11258 + x11272;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11961 = x11259 + x11273;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11962 = x11260 + x11274;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11963 = x11261 + x11275;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11964 = x11262 + x11276;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11965 = x11263 + x11277;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11966 = x11264 + x11278;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11967 = x11265 + x11279;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11968 = x11266 + x11280;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11969 = x11267 + x11281;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11970 = x11268 + x11282;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11971 = x11269 + x11283;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11972 = x11270 + x11284;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11973 = x11271 + x11253;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11974 = x11272 + x11254;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11975 = x11273 + x11255;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11976 = x11274 + x11256;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11977 = x11275 + x11257;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11978 = x11276 + x11258;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11979 = x11277 + x11259;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11980 = x11278 + x11260;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11981 = x11279 + x11261;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11982 = x11280 + x11262;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11983 = x11281 + x11263;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11984 = x11282 + x11264;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11985 = x11283 + x11265;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x11986 = x11284 + x11266;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11987 = x11221 * x11857;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11988 = x11222 * x11858;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11989 = x11223 * x11859;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11990 = x11224 * x11860;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11991 = x11225 * x11861;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11992 = x11226 * x11862;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11993 = x11227 * x11863;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11994 = x11228 * x11864;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11995 = x11229 * x11865;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11996 = x11230 * x11866;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11997 = x11231 * x11867;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11998 = x11232 * x11868;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x11999 = x11233 * x11869;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12000 = x11234 * x11870;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12001 = x11235 * x11871;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12002 = x11236 * x11872;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12003 = x11237 * x11873;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12004 = x11238 * x11874;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12005 = x11239 * x11875;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12006 = x11240 * x11876;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12007 = x11241 * x11877;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12008 = x11242 * x11878;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12009 = x11243 * x11879;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12010 = x11244 * x11880;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12011 = x11245 * x11881;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12012 = x11246 * x11882;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12013 = x11247 * x11883;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12014 = x11248 * x11884;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12015 = x11249 * x11885;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12016 = x11250 * x11886;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12017 = x11251 * x11887;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12018 = x11252 * x11888;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12019 = x11478 * x11889;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12020 = x11480 * x11890;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12021 = x11482 * x11891;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12022 = x11484 * x11892;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12023 = x11486 * x11893;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12024 = x11488 * x11894;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12025 = x11490 * x11895;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12026 = x11492 * x11896;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12027 = x11494 * x11897;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12028 = x11496 * x11898;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12029 = x11498 * x11899;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12030 = x11500 * x11900;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12031 = x11502 * x11901;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12032 = x11504 * x11902;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12033 = x11506 * x11903;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12034 = x11508 * x11904;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12035 = x11510 * x11905;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12036 = x11512 * x11906;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12037 = x11514 * x11907;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12038 = x11516 * x11908;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12039 = x11518 * x11909;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12040 = x11520 * x11910;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12041 = x11522 * x11911;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12042 = x11524 * x11912;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12043 = x11526 * x11913;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12044 = x11528 * x11914;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12045 = x11530 * x11915;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12046 = x11532 * x11916;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12047 = x11534 * x11917;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12048 = x11536 * x11918;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12049 = x11538 * x11919;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12050 = x11540 * x11920;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12051 = x11793 * x11317;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12052 = x11794 * x11318;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12053 = x11795 * x11319;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12054 = x11796 * x11320;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12055 = x11797 * x11321;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12056 = x11798 * x11322;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12057 = x11799 * x11323;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12058 = x11800 * x11324;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12059 = x11801 * x11325;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12060 = x11802 * x11326;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12061 = x11803 * x11327;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12062 = x11804 * x11328;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12063 = x11805 * x11329;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12064 = x11806 * x11330;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12065 = x11807 * x11331;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12066 = x11808 * x11332;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12067 = x11809 * x11333;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12068 = x11810 * x11334;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12069 = x11811 * x11335;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12070 = x11812 * x11336;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12071 = x11813 * x11337;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12072 = x11814 * x11338;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12073 = x11815 * x11339;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12074 = x11816 * x11340;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12075 = x11817 * x11341;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12076 = x11818 * x11342;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12077 = x11819 * x11343;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12078 = x11820 * x11344;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12079 = x11821 * x11345;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12080 = x11822 * x11346;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12081 = x11823 * x11347;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12082 = x11824 * x11348;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12083 = x11987 * x11381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12084 = x11988 * x11382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12085 = x11989 * x11383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12086 = x11990 * x11384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12087 = x11991 * x11385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12088 = x11992 * x11386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12089 = x11993 * x11387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12090 = x11994 * x11388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12091 = x11995 * x11389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12092 = x11996 * x11390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12093 = x11997 * x11391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12094 = x11998 * x11392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12095 = x11999 * x11393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12096 = x12000 * x11394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12097 = x12001 * x11395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12098 = x12002 * x11396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12099 = x12003 * x11397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12100 = x12004 * x11398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12101 = x12005 * x11399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12102 = x12006 * x11400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12103 = x12007 * x11401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12104 = x12008 * x11402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12105 = x12009 * x11403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12106 = x12010 * x11404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12107 = x12011 * x11405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12108 = x12012 * x11406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12109 = x12013 * x11407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12110 = x12014 * x11408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12111 = x12015 * x11409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12112 = x12016 * x11410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12113 = x12017 * x11411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:41)
      auto x12114 = x12018 * x11412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12115 = x12051 * x11381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12116 = x12052 * x11382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12117 = x12053 * x11383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12118 = x12054 * x11384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12119 = x12055 * x11385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12120 = x12056 * x11386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12121 = x12057 * x11387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12122 = x12058 * x11388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12123 = x12059 * x11389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12124 = x12060 * x11390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12125 = x12061 * x11391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12126 = x12062 * x11392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12127 = x12063 * x11393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12128 = x12064 * x11394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12129 = x12065 * x11395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12130 = x12066 * x11396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12131 = x12067 * x11397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12132 = x12068 * x11398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12133 = x12069 * x11399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12134 = x12070 * x11400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12135 = x12071 * x11401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12136 = x12072 * x11402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12137 = x12073 * x11403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12138 = x12074 * x11404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12139 = x12075 * x11405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12140 = x12076 * x11406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12141 = x12077 * x11407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12142 = x12078 * x11408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12143 = x12079 * x11409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12144 = x12080 * x11410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12145 = x12081 * x11411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:68)
      auto x12146 = x12082 * x11412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12147 = x11825 * x11349;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12148 = x11826 * x11350;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12149 = x11827 * x11351;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12150 = x11828 * x11352;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12151 = x11829 * x11353;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12152 = x11830 * x11354;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12153 = x11831 * x11355;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12154 = x11832 * x11356;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12155 = x11833 * x11357;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12156 = x11834 * x11358;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12157 = x11835 * x11359;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12158 = x11836 * x11360;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12159 = x11837 * x11361;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12160 = x11838 * x11362;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12161 = x11839 * x11363;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12162 = x11840 * x11364;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12163 = x11841 * x11365;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12164 = x11842 * x11366;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12165 = x11843 * x11367;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12166 = x11844 * x11368;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12167 = x11845 * x11369;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12168 = x11846 * x11370;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12169 = x11847 * x11371;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12170 = x11848 * x11372;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12171 = x11849 * x11373;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12172 = x11850 * x11374;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12173 = x11851 * x11375;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12174 = x11852 * x11376;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12175 = x11853 * x11377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12176 = x11854 * x11378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12177 = x11855 * x11379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:28)
      auto x12178 = x11856 * x11380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12179 = x11923 - x11697;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12180 = x11924 - x11699;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12181 = x11925 - x11701;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12182 = x11926 - x11703;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12183 = x11927 - x11705;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12184 = x11928 - x11707;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12185 = x11929 - x11709;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12186 = x11930 - x11711;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12187 = x11931 - x11713;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12188 = x11932 - x11715;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12189 = x11933 - x11717;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12190 = x11934 - x11719;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12191 = x11935 - x11721;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12192 = x11936 - x11723;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12193 = x11937 - x11725;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12194 = x11938 - x11727;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12195 = x11939 - x11729;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12196 = x11940 - x11731;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12197 = x11941 - x11733;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12198 = x11942 - x11735;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12199 = x11943 - x11737;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12200 = x11944 - x11739;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12201 = x11945 - x11741;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12202 = x11946 - x11743;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12203 = x11947 - x11745;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12204 = x11948 - x11747;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12205 = x11949 - x11749;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12206 = x11950 - x11751;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12207 = x11951 - x11753;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12208 = x11952 - x11755;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12209 = x11953 - x11757;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12210 = x11954 - x11759;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12211 = x11955 - x11761;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12212 = x11956 - x11762;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12213 = x11957 - x11763;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12214 = x11958 - x11764;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12215 = x11959 - x11765;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12216 = x11960 - x11766;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12217 = x11961 - x11767;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12218 = x11962 - x11768;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12219 = x11963 - x11769;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12220 = x11964 - x11770;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12221 = x11965 - x11771;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12222 = x11966 - x11772;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12223 = x11967 - x11773;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12224 = x11968 - x11774;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12225 = x11969 - x11775;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12226 = x11970 - x11776;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12227 = x11971 - x11777;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12228 = x11972 - x11778;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12229 = x11973 - x11779;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12230 = x11974 - x11780;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12231 = x11975 - x11781;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12232 = x11976 - x11782;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12233 = x11977 - x11783;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12234 = x11978 - x11784;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12235 = x11979 - x11785;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12236 = x11980 - x11786;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12237 = x11981 - x11787;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12238 = x11982 - x11788;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12239 = x11983 - x11789;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12240 = x11984 - x11790;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12241 = x11985 - x11791;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12242 = x11986 - x11792;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12243 = x11195 + x11613;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12244 = x11211 + x11628;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12245 = x11413 + x11637;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12246 = x11429 + x11652;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12247 = x11445 + x11667;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12248 = x11461 + x11682;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12249 = x11221 + x12190;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12250 = x11222 + x12191;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12251 = x11223 + x12192;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12252 = x11224 + x12193;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12253 = x11225 + x12194;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12254 = x11226 + x12195;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12255 = x11227 + x12196;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12256 = x11228 + x12197;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12257 = x11229 + x12198;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12258 = x11230 + x12199;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12259 = x11231 + x12200;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12260 = x11232 + x12201;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12261 = x11233 + x12202;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12262 = x11234 + x12203;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12263 = x11235 + x12204;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12264 = x11236 + x12205;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12265 = x11237 + x12206;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12266 = x11238 + x12207;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12267 = x11239 + x12208;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12268 = x11240 + x12209;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12269 = x11241 + x12210;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12270 = x11242 + x12179;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12271 = x11243 + x12180;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12272 = x11244 + x12181;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12273 = x11245 + x12182;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12274 = x11246 + x12183;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12275 = x11247 + x12184;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12276 = x11248 + x12185;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12277 = x11249 + x12186;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12278 = x11250 + x12187;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12279 = x11251 + x12188;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12280 = x11252 + x12189;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12281 = x11253 + x12216;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12282 = x11254 + x12217;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12283 = x11255 + x12218;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12284 = x11256 + x12219;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12285 = x11257 + x12220;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12286 = x11258 + x12221;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12287 = x11259 + x12222;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12288 = x11260 + x12223;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12289 = x11261 + x12224;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12290 = x11262 + x12225;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12291 = x11263 + x12226;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12292 = x11264 + x12227;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12293 = x11265 + x12228;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12294 = x11266 + x12229;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12295 = x11267 + x12230;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12296 = x11268 + x12231;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12297 = x11269 + x12232;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12298 = x11270 + x12233;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12299 = x11271 + x12234;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12300 = x11272 + x12235;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12301 = x11273 + x12236;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12302 = x11274 + x12237;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12303 = x11275 + x12238;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12304 = x11276 + x12239;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12305 = x11277 + x12240;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12306 = x11278 + x12241;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12307 = x11279 + x12242;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12308 = x11280 + x12211;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12309 = x11281 + x12212;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12310 = x11282 + x12213;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12311 = x11283 + x12214;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12312 = x11284 + x12215;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12313 = x11542 + x12147;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12314 = x11544 + x12148;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12315 = x11546 + x12149;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12316 = x11548 + x12150;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12317 = x11550 + x12151;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12318 = x11552 + x12152;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12319 = x11554 + x12153;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12320 = x11556 + x12154;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12321 = x11558 + x12155;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12322 = x11560 + x12156;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12323 = x11562 + x12157;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12324 = x11564 + x12158;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12325 = x11566 + x12159;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12326 = x11568 + x12160;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12327 = x11570 + x12161;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12328 = x11572 + x12162;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12329 = x11574 + x12163;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12330 = x11576 + x12164;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12331 = x11578 + x12165;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12332 = x11580 + x12166;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12333 = x11582 + x12167;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12334 = x11584 + x12168;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12335 = x11586 + x12169;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12336 = x11588 + x12170;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12337 = x11590 + x12171;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12338 = x11592 + x12172;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12339 = x11594 + x12173;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12340 = x11596 + x12174;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12341 = x11598 + x12175;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12342 = x11600 + x12176;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12343 = x11602 + x12177;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":64:14)
      auto x12344 = x11604 + x12178;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12345 = x12019 + x12083;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12346 = x12020 + x12084;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12347 = x12021 + x12085;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12348 = x12022 + x12086;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12349 = x12023 + x12087;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12350 = x12024 + x12088;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12351 = x12025 + x12089;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12352 = x12026 + x12090;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12353 = x12027 + x12091;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12354 = x12028 + x12092;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12355 = x12029 + x12093;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12356 = x12030 + x12094;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12357 = x12031 + x12095;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12358 = x12032 + x12096;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12359 = x12033 + x12097;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12360 = x12034 + x12098;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12361 = x12035 + x12099;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12362 = x12036 + x12100;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12363 = x12037 + x12101;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12364 = x12038 + x12102;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12365 = x12039 + x12103;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12366 = x12040 + x12104;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12367 = x12041 + x12105;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12368 = x12042 + x12106;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12369 = x12043 + x12107;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12370 = x12044 + x12108;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12371 = x12045 + x12109;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12372 = x12046 + x12110;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12373 = x12047 + x12111;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12374 = x12048 + x12112;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12375 = x12049 + x12113;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12376 = x12050 + x12114;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12377 = x12314 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12378 = x12315 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12379 = x12316 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12380 = x12317 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12381 = x12318 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12382 = x12319 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12383 = x12320 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12384 = x12321 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12385 = x12322 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12386 = x12323 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12387 = x12324 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12388 = x12325 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12389 = x12326 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12390 = x12327 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12391 = x12328 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12392 = x12330 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12393 = x12331 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12394 = x12332 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12395 = x12333 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12396 = x12334 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12397 = x12335 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12398 = x12336 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12399 = x12337 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12400 = x12338 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12401 = x12339 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12402 = x12340 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12403 = x12341 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12404 = x12342 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12405 = x12343 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12406 = x12344 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12407 = x11477 * x12190;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12408 = x11479 * x12191;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12409 = x11481 * x12192;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12410 = x11483 * x12193;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12411 = x11485 * x12194;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12412 = x11487 * x12195;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12413 = x11489 * x12196;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12414 = x11491 * x12197;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12415 = x11493 * x12198;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12416 = x11495 * x12199;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12417 = x11497 * x12200;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12418 = x11499 * x12201;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12419 = x11501 * x12202;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12420 = x11503 * x12203;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12421 = x11505 * x12204;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12422 = x11507 * x12205;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12423 = x11509 * x12206;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12424 = x11511 * x12207;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12425 = x11513 * x12208;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12426 = x11515 * x12209;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12427 = x11517 * x12210;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12428 = x11519 * x12179;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12429 = x11521 * x12180;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12430 = x11523 * x12181;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12431 = x11525 * x12182;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12432 = x11527 * x12183;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12433 = x11529 * x12184;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12434 = x11531 * x12185;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12435 = x11533 * x12186;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12436 = x11535 * x12187;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12437 = x11537 * x12188;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12438 = x11539 * x12189;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12439 = x11541 * x12216;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12440 = x11543 * x12217;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12441 = x11545 * x12218;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12442 = x11547 * x12219;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12443 = x11549 * x12220;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12444 = x11551 * x12221;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12445 = x11553 * x12222;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12446 = x11555 * x12223;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12447 = x11557 * x12224;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12448 = x11559 * x12225;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12449 = x11561 * x12226;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12450 = x11563 * x12227;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12451 = x11565 * x12228;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12452 = x11567 * x12229;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12453 = x11569 * x12230;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12454 = x11571 * x12231;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12455 = x11573 * x12232;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12456 = x11575 * x12233;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12457 = x11577 * x12234;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12458 = x11579 * x12235;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12459 = x11581 * x12236;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12460 = x11583 * x12237;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12461 = x11585 * x12238;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12462 = x11587 * x12239;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12463 = x11589 * x12240;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12464 = x11591 * x12241;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12465 = x11593 * x12242;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12466 = x11595 * x12211;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12467 = x11597 * x12212;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12468 = x11599 * x12213;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12469 = x11601 * x12214;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:28)
      auto x12470 = x11603 * x12215;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12471 = x12249 - x12407;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12472 = x12250 - x12408;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12473 = x12251 - x12409;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12474 = x12252 - x12410;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12475 = x12253 - x12411;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12476 = x12254 - x12412;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12477 = x12255 - x12413;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12478 = x12256 - x12414;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12479 = x12257 - x12415;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12480 = x12258 - x12416;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12481 = x12259 - x12417;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12482 = x12260 - x12418;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12483 = x12261 - x12419;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12484 = x12262 - x12420;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12485 = x12263 - x12421;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12486 = x12264 - x12422;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12487 = x12265 - x12423;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12488 = x12266 - x12424;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12489 = x12267 - x12425;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12490 = x12268 - x12426;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12491 = x12269 - x12427;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12492 = x12270 - x12428;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12493 = x12271 - x12429;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12494 = x12272 - x12430;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12495 = x12273 - x12431;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12496 = x12274 - x12432;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12497 = x12275 - x12433;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12498 = x12276 - x12434;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12499 = x12277 - x12435;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12500 = x12278 - x12436;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12501 = x12279 - x12437;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12502 = x12280 - x12438;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12503 = x12281 - x12439;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12504 = x12282 - x12440;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12505 = x12283 - x12441;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12506 = x12284 - x12442;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12507 = x12285 - x12443;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12508 = x12286 - x12444;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12509 = x12287 - x12445;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12510 = x12288 - x12446;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12511 = x12289 - x12447;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12512 = x12290 - x12448;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12513 = x12291 - x12449;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12514 = x12292 - x12450;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12515 = x12293 - x12451;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12516 = x12294 - x12452;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12517 = x12295 - x12453;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12518 = x12296 - x12454;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12519 = x12297 - x12455;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12520 = x12298 - x12456;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12521 = x12299 - x12457;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12522 = x12300 - x12458;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12523 = x12301 - x12459;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12524 = x12302 - x12460;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12525 = x12303 - x12461;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12526 = x12304 - x12462;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12527 = x12305 - x12463;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12528 = x12306 - x12464;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12529 = x12307 - x12465;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12530 = x12308 - x12466;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12531 = x12309 - x12467;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12532 = x12310 - x12468;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12533 = x12311 - x12469;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":47:14)
      auto x12534 = x12312 - x12470;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12535 = x12243 + x11614;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12536 = x12244 + x11629;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12537 = x12245 + x11638;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12538 = x12246 + x11653;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12539 = x12247 + x11668;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12540 = x12248 + x11683;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12541 = x12345 + x12115;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12542 = x12346 + x12116;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12543 = x12347 + x12117;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12544 = x12348 + x12118;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12545 = x12349 + x12119;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12546 = x12350 + x12120;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12547 = x12351 + x12121;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12548 = x12352 + x12122;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12549 = x12353 + x12123;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12550 = x12354 + x12124;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12551 = x12355 + x12125;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12552 = x12356 + x12126;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12553 = x12357 + x12127;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12554 = x12358 + x12128;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12555 = x12359 + x12129;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12556 = x12360 + x12130;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12557 = x12361 + x12131;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12558 = x12362 + x12132;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12559 = x12363 + x12133;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12560 = x12364 + x12134;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12561 = x12365 + x12135;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12562 = x12366 + x12136;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12563 = x12367 + x12137;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12564 = x12368 + x12138;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12565 = x12369 + x12139;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12566 = x12370 + x12140;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12567 = x12371 + x12141;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12568 = x12372 + x12142;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12569 = x12373 + x12143;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12570 = x12374 + x12144;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12571 = x12375 + x12145;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12572 = x12376 + x12146;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12573 = x12471 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12574 = x12472 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12575 = x12474 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12576 = x12475 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12577 = x12476 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12578 = x12477 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12579 = x12478 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12580 = x12479 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12581 = x12480 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12582 = x12481 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12583 = x12482 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12584 = x12483 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12585 = x12484 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12586 = x12485 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12587 = x12486 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12588 = x12487 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12589 = x12488 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12590 = x12490 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12591 = x12491 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12592 = x12492 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12593 = x12493 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12594 = x12494 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12595 = x12495 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12596 = x12496 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12597 = x12497 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12598 = x12498 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12599 = x12499 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12600 = x12500 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12601 = x12501 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12602 = x12502 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12603 = x12503 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12604 = x12504 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12605 = x12505 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12606 = x12506 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12607 = x12507 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12608 = x12508 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12609 = x12510 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12610 = x12511 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12611 = x12512 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12612 = x12513 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12613 = x12514 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12614 = x12515 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12615 = x12516 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12616 = x12517 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12617 = x12518 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12618 = x12519 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12619 = x12520 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12620 = x12521 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12621 = x12522 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12622 = x12523 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12623 = x12524 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12624 = x12526 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12625 = x12527 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12626 = x12528 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12627 = x12529 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12628 = x12530 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12629 = x12531 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12630 = x12532 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12631 = x12533 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12632 = x12534 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12633 = x12535 + x11615;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12634 = x12536 + x11630;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12635 = x12537 + x11639;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12636 = x12538 + x11654;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12637 = x12539 + x11669;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12638 = x12540 + x11684;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12639 = x12541 + x11698;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12640 = x12542 + x11700;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12641 = x12543 + x11702;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12642 = x12544 + x11704;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12643 = x12545 + x11706;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12644 = x12546 + x11708;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12645 = x12547 + x11710;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12646 = x12548 + x11712;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12647 = x12549 + x11714;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12648 = x12550 + x11716;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12649 = x12551 + x11718;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12650 = x12552 + x11720;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12651 = x12553 + x11722;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12652 = x12554 + x11724;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12653 = x12555 + x11726;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12654 = x12556 + x11728;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12655 = x12557 + x11730;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12656 = x12558 + x11732;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12657 = x12559 + x11734;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12658 = x12560 + x11736;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12659 = x12561 + x11738;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12660 = x12562 + x11740;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12661 = x12563 + x11742;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12662 = x12564 + x11744;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12663 = x12565 + x11746;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12664 = x12566 + x11748;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12665 = x12567 + x11750;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12666 = x12568 + x11752;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12667 = x12569 + x11754;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12668 = x12570 + x11756;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12669 = x12571 + x11758;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":55:14)
      auto x12670 = x12572 + x11760;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12671 = x12313 + x12377;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12672 = x12329 + x12392;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12673 = x12640 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12674 = x12641 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12675 = x12642 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12676 = x12643 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12677 = x12644 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12678 = x12645 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12679 = x12646 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12680 = x12647 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12681 = x12648 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12682 = x12649 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12683 = x12650 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12684 = x12651 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12685 = x12652 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12686 = x12653 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12687 = x12654 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12688 = x12656 * x93;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12689 = x12657 * x78;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12690 = x12658 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12691 = x12659 * x62;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12692 = x12660 * x58;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12693 = x12661 * x52;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12694 = x12662 * x61;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12695 = x12663 * x90;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12696 = x12664 * x21;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12697 = x12665 * x23;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12698 = x12666 * x18;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12699 = x12667 * x16;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12700 = x12668 * x14;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12701 = x12669 * x37;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:25)
      auto x12702 = x12670 * x11;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12703 = x12633 + x11616;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12704 = x12634 + x11631;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12705 = x12635 + x11640;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12706 = x12636 + x11655;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12707 = x12637 + x11670;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12708 = x12638 + x11685;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12709 = x12671 + x12378;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12710 = x12672 + x12393;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12711 = x12473 + x12575;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12712 = x12489 + x12590;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12713 = x12509 + x12609;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12714 = x12525 + x12624;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12715 = x12703 + x11617;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12716 = x12704 + x11632;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12717 = x12705 + x11641;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12718 = x12706 + x11656;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12719 = x12707 + x11671;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12720 = x12708 + x11686;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12721 = x12709 + x12379;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12722 = x12710 + x12394;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12723 = x12711 + x12576;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12724 = x12712 + x12591;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12725 = x12713 + x12610;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12726 = x12714 + x12625;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12727 = x12639 + x12673;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12728 = x12655 + x12688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12729 = x12715 + x11618;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12730 = x12716 + x11633;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12731 = x12717 + x11642;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12732 = x12718 + x11657;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12733 = x12719 + x11672;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12734 = x12720 + x11687;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12735 = x12721 + x12380;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12736 = x12722 + x12395;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12737 = x12723 + x12577;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12738 = x12724 + x12592;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12739 = x12725 + x12611;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12740 = x12726 + x12626;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12741 = x12727 + x12674;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12742 = x12728 + x12689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12743 = x12729 + x11619;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12744 = x12730 + x11634;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12745 = x12731 + x11643;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12746 = x12732 + x11658;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12747 = x12733 + x11673;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12748 = x12734 + x11688;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12749 = x12735 + x12381;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12750 = x12736 + x12396;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12751 = x12737 + x12578;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12752 = x12738 + x12593;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12753 = x12739 + x12612;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12754 = x12740 + x12627;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12755 = x12741 + x12675;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12756 = x12742 + x12690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12757 = x12743 + x11620;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12758 = x12744 + x11635;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12759 = x12745 + x11644;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12760 = x12746 + x11659;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12761 = x12747 + x11674;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12762 = x12748 + x11689;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12763 = x12749 + x12382;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12764 = x12750 + x12397;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12765 = x12751 + x12579;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12766 = x12752 + x12594;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12767 = x12753 + x12613;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12768 = x12754 + x12628;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12769 = x12755 + x12676;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12770 = x12756 + x12691;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12771 = x12757 + x11621;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12772 = x12758 + x11636;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12773 = x12759 + x11645;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12774 = x12760 + x11660;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12775 = x12761 + x11675;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12776 = x12762 + x11690;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12777 = x12763 + x12383;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12778 = x12764 + x12398;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12779 = x12765 + x12580;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12780 = x12766 + x12595;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12781 = x12767 + x12614;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12782 = x12768 + x12629;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12783 = x12769 + x12677;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12784 = x12770 + x12692;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12785 = x12771 + x11622;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12786 = x12772 + x11605;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12787 = x12773 + x11646;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12788 = x12774 + x11661;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12789 = x12775 + x11676;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12790 = x12776 + x11691;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12791 = x12777 + x12384;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12792 = x12778 + x12399;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12793 = x12779 + x12581;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12794 = x12780 + x12596;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12795 = x12781 + x12615;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12796 = x12782 + x12630;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12797 = x12783 + x12678;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12798 = x12784 + x12693;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12799 = x12785 + x11623;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12800 = x12786 + x11608;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12801 = x12787 + x11647;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12802 = x12788 + x11662;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12803 = x12789 + x11677;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12804 = x12790 + x11692;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12805 = x12791 + x12385;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12806 = x12792 + x12400;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12807 = x12793 + x12582;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12808 = x12794 + x12597;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12809 = x12795 + x12616;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12810 = x12796 + x12631;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12811 = x12797 + x12679;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12812 = x12798 + x12694;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12813 = x12799 + x11624;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12814 = x12800 + x11609;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12815 = x12801 + x11648;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12816 = x12802 + x11663;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12817 = x12803 + x11678;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12818 = x12804 + x11693;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12819 = x12805 + x12386;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12820 = x12806 + x12401;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12821 = x12807 + x12583;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12822 = x12808 + x12598;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12823 = x12809 + x12617;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12824 = x12810 + x12632;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12825 = x12811 + x12680;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12826 = x12812 + x12695;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12827 = x12813 + x11625;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12828 = x12814 + x11610;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12829 = x12815 + x11649;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12830 = x12816 + x11664;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12831 = x12817 + x11679;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12832 = x12818 + x11694;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12833 = x12819 + x12387;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12834 = x12820 + x12402;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12835 = x12821 + x12584;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12836 = x12822 + x12599;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12837 = x12823 + x12618;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12838 = x12824 + x12603;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12839 = x12825 + x12681;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12840 = x12826 + x12696;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12841 = x12827 + x11626;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12842 = x12828 + x11611;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12843 = x12829 + x11650;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12844 = x12830 + x11665;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12845 = x12831 + x11680;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12846 = x12832 + x11695;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12847 = x12833 + x12388;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12848 = x12834 + x12403;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12849 = x12835 + x12585;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12850 = x12836 + x12600;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12851 = x12837 + x12619;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12852 = x12838 + x12604;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12853 = x12839 + x12682;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12854 = x12840 + x12697;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12855 = x12843 + x11651;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12856 = x12844 + x11666;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12857 = x12841 + x11627;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12858 = x12842 + x11612;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12859 = x12845 + x11681;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12860 = x12846 + x11696;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12861 = x12847 + x12389;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12862 = x12848 + x12404;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12863 = x12849 + x12586;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12864 = x12850 + x12601;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12865 = x12851 + x12620;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12866 = x12852 + x12605;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12867 = x12853 + x12683;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12868 = x12854 + x12698;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12869 = x12861 + x12390;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12870 = x12862 + x12405;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12871 = x12863 + x12587;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12872 = x12864 + x12602;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12873 = x12865 + x12621;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12874 = x12866 + x12606;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12875 = x12867 + x12684;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12876 = x12868 + x12699;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12877 = x12869 + x12391;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12878 = x12870 + x12406;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12879 = x12871 + x12588;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12880 = x12872 + x12573;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12881 = x12873 + x12622;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12882 = x12874 + x12607;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12883 = x12875 + x12685;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12884 = x12876 + x12700;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12885 = x12879 + x12589;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12886 = x12880 + x12574;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12887 = x12881 + x12623;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12888 = x12882 + x12608;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12889 = x12883 + x12686;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12890 = x12884 + x12701;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12891 = x12877 + x12887;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12892 = x12878 + x12888;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12893 = x12859 + x12891;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12894 = x12860 + x12892;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12895 = x11921 + x12893;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12896 = x11922 + x12894;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12897 = x12857 + x12896;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12898 = x12858 + x12895;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12899 = x12889 + x12687;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":74:16)
      auto x12900 = x12890 + x12702;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12901 = x12897 + x12856;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12902 = x12898 + x12855;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12903 = x12899 + x12885;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12904 = x12900 + x12886;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12905 = x12897 + x12904;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":83:14)
      auto x12906 = x12898 + x12903;
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":489:5)
      {
        auto& reg = arg2[153 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x12906);
        reg = x12906;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":490:5)
      {
        auto& reg = arg2[155 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x12902);
        reg = x12902;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":489:5)
      {
        auto& reg = arg2[154 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x12905);
        reg = x12905;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":490:5)
      {
        auto& reg = arg2[156 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x12901);
        reg = x12901;
      }
      if (x8937 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":140:11))
        auto x12907 = arg2[153 * steps + ((cycle - 0) & mask)];
        assert(x12907 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":140:26))
        auto x12908 = arg2[154 * steps + ((cycle - 0) & mask)];
        assert(x12908 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12909 = Fp(x12907.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[159 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12909);
            reg = x12909;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12910 = Fp(x12907.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12911 = x12910 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[160 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12911);
            reg = x12911;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12912 = Fp(x12907.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12913 = x12912 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[161 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12913);
            reg = x12913;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12914 = Fp(x12907.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12915 = x12914 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[162 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12915);
            reg = x12915;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12916 = Fp(x12907.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12917 = x12916 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[163 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12917);
            reg = x12917;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12918 = Fp(x12907.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12919 = x12918 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[164 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12919);
            reg = x12919;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12920 = Fp(x12907.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12921 = x12920 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[165 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12921);
            reg = x12921;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12922 = Fp(x12907.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12923 = x12922 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[166 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12923);
            reg = x12923;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12924 = Fp(x12907.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12925 = x12924 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[167 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12925);
            reg = x12925;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12926 = Fp(x12907.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12927 = x12926 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[168 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12927);
            reg = x12927;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12928 = Fp(x12907.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12929 = x12928 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[169 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12929);
            reg = x12929;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12930 = Fp(x12907.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12931 = x12930 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[170 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12931);
            reg = x12931;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12932 = Fp(x12907.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12933 = x12932 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[171 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12933);
            reg = x12933;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12934 = Fp(x12907.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12935 = x12934 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[172 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12935);
            reg = x12935;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12936 = Fp(x12907.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12937 = x12936 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12937);
            reg = x12937;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12938 = Fp(x12907.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12939 = x12938 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[174 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12939);
            reg = x12939;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12940 = arg2[159 * steps + ((cycle - 0) & mask)];
        assert(x12940 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12941 = arg2[160 * steps + ((cycle - 0) & mask)];
        assert(x12941 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12942 = arg2[161 * steps + ((cycle - 0) & mask)];
        assert(x12942 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12943 = arg2[162 * steps + ((cycle - 0) & mask)];
        assert(x12943 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12944 = arg2[163 * steps + ((cycle - 0) & mask)];
        assert(x12944 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12945 = arg2[164 * steps + ((cycle - 0) & mask)];
        assert(x12945 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12946 = arg2[165 * steps + ((cycle - 0) & mask)];
        assert(x12946 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12947 = arg2[166 * steps + ((cycle - 0) & mask)];
        assert(x12947 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12948 = arg2[167 * steps + ((cycle - 0) & mask)];
        assert(x12948 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12949 = arg2[168 * steps + ((cycle - 0) & mask)];
        assert(x12949 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12950 = arg2[169 * steps + ((cycle - 0) & mask)];
        assert(x12950 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12951 = arg2[170 * steps + ((cycle - 0) & mask)];
        assert(x12951 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12952 = arg2[171 * steps + ((cycle - 0) & mask)];
        assert(x12952 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12953 = arg2[172 * steps + ((cycle - 0) & mask)];
        assert(x12953 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12954 = arg2[173 * steps + ((cycle - 0) & mask)];
        assert(x12954 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12955 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x12955 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12956 = x12941 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12957 = x12942 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12958 = x12943 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12959 = x12944 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12960 = x12945 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12961 = x12946 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12962 = x12947 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12963 = x12948 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12964 = x12949 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12965 = x12950 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12966 = x12951 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12967 = x12952 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12968 = x12953 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12969 = x12954 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x12970 = x12955 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12971 = x12940 + x12956;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12972 = x12971 + x12957;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12973 = x12972 + x12958;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12974 = x12973 + x12959;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12975 = x12974 + x12960;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12976 = x12975 + x12961;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12977 = x12976 + x12962;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12978 = x12977 + x12963;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12979 = x12978 + x12964;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12980 = x12979 + x12965;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12981 = x12980 + x12966;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12982 = x12981 + x12967;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12983 = x12982 + x12968;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12984 = x12983 + x12969;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x12985 = x12984 + x12970;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x12986 = x12907 - x12985;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x12987 = x12986 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":122:26)
          auto x12988 = Fp(x12987.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[73 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12988);
            reg = x12988;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x12989 = arg2[73 * steps + ((cycle - 0) & mask)];
        assert(x12989 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:20)
        auto x12990 = x12987 - x12989;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:19)
        auto x12991 = x12990 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:20)
        auto x12992 = x96 - x12991;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
        auto x12993 = x12991 * x12992;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
        assert(x12993 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:124");
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":125:32)
        auto x12994 = x12908 + x12987;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12995 = Fp(x12994.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12995);
            reg = x12995;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12996 = Fp(x12994.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12997 = x12996 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12997);
            reg = x12997;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x12998 = Fp(x12994.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x12999 = x12998 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[177 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x12999);
            reg = x12999;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13000 = Fp(x12994.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13001 = x13000 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[178 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13001);
            reg = x13001;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13002 = Fp(x12994.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13003 = x13002 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[179 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13003);
            reg = x13003;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13004 = Fp(x12994.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13005 = x13004 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[180 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13005);
            reg = x13005;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13006 = Fp(x12994.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13007 = x13006 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[181 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13007);
            reg = x13007;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13008 = Fp(x12994.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13009 = x13008 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[182 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13009);
            reg = x13009;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13010 = Fp(x12994.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13011 = x13010 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[183 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13011);
            reg = x13011;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13012 = Fp(x12994.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13013 = x13012 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[184 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13013);
            reg = x13013;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13014 = Fp(x12994.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13015 = x13014 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[185 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13015);
            reg = x13015;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13016 = Fp(x12994.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13017 = x13016 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[186 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13017);
            reg = x13017;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13018 = Fp(x12994.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13019 = x13018 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[187 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13019);
            reg = x13019;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13020 = Fp(x12994.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13021 = x13020 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[188 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13021);
            reg = x13021;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13022 = Fp(x12994.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13023 = x13022 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[189 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13023);
            reg = x13023;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13024 = Fp(x12994.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13025 = x13024 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[190 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13025);
            reg = x13025;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13026 = arg2[175 * steps + ((cycle - 0) & mask)];
        assert(x13026 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13027 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x13027 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13028 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x13028 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13029 = arg2[178 * steps + ((cycle - 0) & mask)];
        assert(x13029 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13030 = arg2[179 * steps + ((cycle - 0) & mask)];
        assert(x13030 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13031 = arg2[180 * steps + ((cycle - 0) & mask)];
        assert(x13031 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13032 = arg2[181 * steps + ((cycle - 0) & mask)];
        assert(x13032 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13033 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x13033 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13034 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x13034 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13035 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x13035 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13036 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x13036 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13037 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x13037 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13038 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x13038 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13039 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x13039 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13040 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x13040 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13041 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x13041 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13042 = x13027 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13043 = x13028 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13044 = x13029 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13045 = x13030 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13046 = x13031 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13047 = x13032 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13048 = x13033 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13049 = x13034 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13050 = x13035 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13051 = x13036 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13052 = x13037 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13053 = x13038 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13054 = x13039 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13055 = x13040 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13056 = x13041 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13057 = x13026 + x13042;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13058 = x13057 + x13043;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13059 = x13058 + x13044;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13060 = x13059 + x13045;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13061 = x13060 + x13046;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13062 = x13061 + x13047;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13063 = x13062 + x13048;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13064 = x13063 + x13049;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13065 = x13064 + x13050;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13066 = x13065 + x13051;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13067 = x13066 + x13052;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13068 = x13067 + x13053;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13069 = x13068 + x13054;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13070 = x13069 + x13055;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13071 = x13070 + x13056;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x13072 = x12994 - x13071;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x13073 = x13072 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":126:27)
          auto x13074 = Fp(x13073.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[74 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13074);
            reg = x13074;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13075 = arg2[74 * steps + ((cycle - 0) & mask)];
        assert(x13075 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:21)
        auto x13076 = x13073 - x13075;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:20)
        auto x13077 = x13076 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:21)
        auto x13078 = x96 - x13077;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
        auto x13079 = x13077 * x13078;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
        assert(x13079 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:128");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":140:11))
        auto x13080 = arg2[155 * steps + ((cycle - 0) & mask)];
        assert(x13080 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":140:26))
        auto x13081 = arg2[156 * steps + ((cycle - 0) & mask)];
        assert(x13081 != Fp::invalid());
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13082 = Fp(x13080.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[191 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13082);
            reg = x13082;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13083 = Fp(x13080.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13084 = x13083 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[192 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13084);
            reg = x13084;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13085 = Fp(x13080.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13086 = x13085 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[193 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13086);
            reg = x13086;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13087 = Fp(x13080.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13088 = x13087 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[194 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13088);
            reg = x13088;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13089 = Fp(x13080.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13090 = x13089 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[195 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13090);
            reg = x13090;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13091 = Fp(x13080.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13092 = x13091 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[196 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13092);
            reg = x13092;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13093 = Fp(x13080.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13094 = x13093 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[197 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13094);
            reg = x13094;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13095 = Fp(x13080.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13096 = x13095 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[198 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13096);
            reg = x13096;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13097 = Fp(x13080.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13098 = x13097 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[199 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13098);
            reg = x13098;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13099 = Fp(x13080.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13100 = x13099 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[200 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13100);
            reg = x13100;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13101 = Fp(x13080.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13102 = x13101 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[201 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13102);
            reg = x13102;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13103 = Fp(x13080.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13104 = x13103 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[202 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13104);
            reg = x13104;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13105 = Fp(x13080.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13106 = x13105 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[203 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13106);
            reg = x13106;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13107 = Fp(x13080.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13108 = x13107 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[204 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13108);
            reg = x13108;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13109 = Fp(x13080.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13110 = x13109 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[205 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13110);
            reg = x13110;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13111 = Fp(x13080.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13112 = x13111 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[206 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13112);
            reg = x13112;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13113 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x13113 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13114 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x13114 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13115 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x13115 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13116 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x13116 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13117 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x13117 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13118 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x13118 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13119 = arg2[197 * steps + ((cycle - 0) & mask)];
        assert(x13119 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13120 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x13120 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13121 = arg2[199 * steps + ((cycle - 0) & mask)];
        assert(x13121 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13122 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x13122 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13123 = arg2[201 * steps + ((cycle - 0) & mask)];
        assert(x13123 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13124 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x13124 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13125 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x13125 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13126 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x13126 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13127 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x13127 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13128 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x13128 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13129 = x13114 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13130 = x13115 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13131 = x13116 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13132 = x13117 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13133 = x13118 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13134 = x13119 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13135 = x13120 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13136 = x13121 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13137 = x13122 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13138 = x13123 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13139 = x13124 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13140 = x13125 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13141 = x13126 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13142 = x13127 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13143 = x13128 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13144 = x13113 + x13129;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13145 = x13144 + x13130;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13146 = x13145 + x13131;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13147 = x13146 + x13132;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13148 = x13147 + x13133;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13149 = x13148 + x13134;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13150 = x13149 + x13135;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13151 = x13150 + x13136;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13152 = x13151 + x13137;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13153 = x13152 + x13138;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13154 = x13153 + x13139;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13155 = x13154 + x13140;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13156 = x13155 + x13141;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13157 = x13156 + x13142;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13158 = x13157 + x13143;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x13159 = x13080 - x13158;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x13160 = x13159 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":122:26)
          auto x13161 = Fp(x13160.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[75 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13161);
            reg = x13161;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13162 = arg2[75 * steps + ((cycle - 0) & mask)];
        assert(x13162 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:20)
        auto x13163 = x13160 - x13162;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":123:19)
        auto x13164 = x13163 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:20)
        auto x13165 = x96 - x13164;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
        auto x13166 = x13164 * x13165;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":124:7)
        assert(x13166 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:124");
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":125:32)
        auto x13167 = x13081 + x13160;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13168 = Fp(x13167.asUInt32() & x96.asUInt32());
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[207 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13168);
            reg = x13168;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13169 = Fp(x13167.asUInt32() & x93.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13170 = x13169 * x54;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[208 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13170);
            reg = x13170;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13171 = Fp(x13167.asUInt32() & x78.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13172 = x13171 * x75;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[209 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13172);
            reg = x13172;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13173 = Fp(x13167.asUInt32() & x64.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13174 = x13173 * x55;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[210 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13174);
            reg = x13174;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13175 = Fp(x13167.asUInt32() & x62.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13176 = x13175 * x56;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[211 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13176);
            reg = x13176;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13177 = Fp(x13167.asUInt32() & x58.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13178 = x13177 * x59;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[212 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13178);
            reg = x13178;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13179 = Fp(x13167.asUInt32() & x52.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13180 = x13179 * x53;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[213 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13180);
            reg = x13180;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13181 = Fp(x13167.asUInt32() & x61.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13182 = x13181 * x60;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[214 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13182);
            reg = x13182;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13183 = Fp(x13167.asUInt32() & x90.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13184 = x13183 * x91;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[215 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13184);
            reg = x13184;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13185 = Fp(x13167.asUInt32() & x21.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13186 = x13185 * x22;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[216 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13186);
            reg = x13186;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13187 = Fp(x13167.asUInt32() & x23.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13188 = x13187 * x20;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[217 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13188);
            reg = x13188;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13189 = Fp(x13167.asUInt32() & x18.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13190 = x13189 * x19;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[218 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13190);
            reg = x13190;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13191 = Fp(x13167.asUInt32() & x16.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13192 = x13191 * x17;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[219 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13192);
            reg = x13192;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13193 = Fp(x13167.asUInt32() & x14.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13194 = x13193 * x15;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[220 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13194);
            reg = x13194;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13195 = Fp(x13167.asUInt32() & x37.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13196 = x13195 * x13;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[221 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13196);
            reg = x13196;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:29)
          auto x13197 = Fp(x13167.asUInt32() & x11.asUInt32());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":104:28)
          auto x13198 = x13197 * x12;
          // loc("./zirgen/components/bits.h":27:23)
          {
            auto& reg = arg2[222 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13198);
            reg = x13198;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13199 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x13199 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13200 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x13200 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13201 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x13201 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13202 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x13202 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13203 = arg2[211 * steps + ((cycle - 0) & mask)];
        assert(x13203 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13204 = arg2[212 * steps + ((cycle - 0) & mask)];
        assert(x13204 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13205 = arg2[213 * steps + ((cycle - 0) & mask)];
        assert(x13205 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13206 = arg2[214 * steps + ((cycle - 0) & mask)];
        assert(x13206 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13207 = arg2[215 * steps + ((cycle - 0) & mask)];
        assert(x13207 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13208 = arg2[216 * steps + ((cycle - 0) & mask)];
        assert(x13208 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13209 = arg2[217 * steps + ((cycle - 0) & mask)];
        assert(x13209 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13210 = arg2[218 * steps + ((cycle - 0) & mask)];
        assert(x13210 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13211 = arg2[219 * steps + ((cycle - 0) & mask)];
        assert(x13211 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13212 = arg2[220 * steps + ((cycle - 0) & mask)];
        assert(x13212 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13213 = arg2[221 * steps + ((cycle - 0) & mask)];
        assert(x13213 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13214 = arg2[222 * steps + ((cycle - 0) & mask)];
        assert(x13214 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13215 = x13200 * x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13216 = x13201 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13217 = x13202 * x64;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13218 = x13203 * x62;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13219 = x13204 * x58;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13220 = x13205 * x52;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13221 = x13206 * x61;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13222 = x13207 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13223 = x13208 * x21;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13224 = x13209 * x23;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13225 = x13210 * x18;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13226 = x13211 * x16;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13227 = x13212 * x14;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13228 = x13213 * x37;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:21)
        auto x13229 = x13214 * x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13230 = x13199 + x13215;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13231 = x13230 + x13216;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13232 = x13231 + x13217;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13233 = x13232 + x13218;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13234 = x13233 + x13219;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13235 = x13234 + x13220;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13236 = x13235 + x13221;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13237 = x13236 + x13222;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13238 = x13237 + x13223;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13239 = x13238 + x13224;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13240 = x13239 + x13225;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13241 = x13240 + x13226;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13242 = x13241 + x13227;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13243 = x13242 + x13228;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":109:13)
        auto x13244 = x13243 + x13229;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:16)
        auto x13245 = x13167 - x13244;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":111:15)
        auto x13246 = x13245 * x10;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":126:27)
          auto x13247 = Fp(x13246.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13247);
            reg = x13247;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13248 = arg2[76 * steps + ((cycle - 0) & mask)];
        assert(x13248 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:21)
        auto x13249 = x13246 - x13248;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":127:20)
        auto x13250 = x13249 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:21)
        auto x13251 = x96 - x13250;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
        auto x13252 = x13250 * x13251;
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":128:7)
        assert(x13252 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/sha.cpp:128");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x13253 = arg2[150 * steps + ((cycle - 0) & mask)];
      assert(x13253 != Fp::invalid());
      if (x13253 != 0) {
        if (x8945 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":433:38))
          auto x13254 = arg2[141 * steps + ((cycle - 1) & mask)];
          assert(x13254 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":433:7)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13254);
            reg = x13254;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":434:38))
          auto x13255 = arg2[142 * steps + ((cycle - 1) & mask)];
          assert(x13255 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":434:7)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13255);
            reg = x13255;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":435:7)
          {
            auto& reg = arg2[99 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x62);
            reg = x62;
          }
        }
        if (x8946 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":439:51))
          auto x13256 = arg2[141 * steps + ((cycle - 1) & mask)];
          assert(x13256 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":439:51)
          auto x13257 = x13256 + x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":439:7)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13257);
            reg = x13257;
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":440:51))
          auto x13258 = arg2[142 * steps + ((cycle - 1) & mask)];
          assert(x13258 != Fp::invalid());
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":440:51)
          auto x13259 = x13258 + x62;
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":440:7)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13259);
            reg = x13259;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":441:7)
          {
            auto& reg = arg2[99 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x73);
            reg = x73;
          }
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":444:27)
      auto x13260 = x96 - x13253;
      if (x13260 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":445:36))
        auto x13261 = arg2[141 * steps + ((cycle - 1) & mask)];
        assert(x13261 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":445:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13261);
          reg = x13261;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/Reg"("zirgen/circuit/rv32im/v1/edsl/sha.cpp":446:36))
        auto x13262 = arg2[142 * steps + ((cycle - 1) & mask)];
        assert(x13262 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":446:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13262);
          reg = x13262;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/sha.cpp":447:5)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x72);
          reg = x72;
        }
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[12](Reg)"("./zirgen/components/mux.h":49:25))
    auto x13263 = arg2[112 * steps + ((cycle - 0) & mask)];
    assert(x13263 != Fp::invalid());
    if (x13263 != 0) {
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x13264 = x963 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x13265 = Fp(x13264.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13265);
          reg = x13265;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x13266 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x13266 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x13267 = x13264 - x13266;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x13268 = x13267 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x13269 = Fp(x13268.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13269);
          reg = x13269;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x13270 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x13270 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x13271 = x13268 - x13270;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x13272 = x13271 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x13273 = Fp(x13272.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13273);
          reg = x13273;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x13274 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x13274 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x13275 = x13272 - x13274;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x13276 = x13275 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x13277 = Fp(x13276.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13277);
          reg = x13277;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x13278 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x13278 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x13279 = x13276 - x13278;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x13280 = x13279 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13280);
        reg = x13280;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x13281 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x13281 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x13282 = x96 - x13281;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x13283 = x13281 * x13282;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13283);
        reg = x13283;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x13284 = x93 - x13281;
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x13285 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x13285 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x13286 = x13285 * x13284;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x13286 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      extern_args[0] = x963;
      extern_log(ctx, cycle, "  PageFault: PC = %10x", extern_args, extern_outs);
      {
        extern_args[0] = x963;
        extern_pageInfo(ctx, cycle, "", extern_args, extern_outs);
        auto x13287 = extern_outs[0];
        auto x13288 = extern_outs[1];
        auto x13289 = extern_outs[2];
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13287);
          reg = x13287;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":43:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13288);
          reg = x13288;
        }
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13289);
          reg = x13289;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/12(PageFaultCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x13290 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x13290 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":49:20)
      auto x13291 = x13290 - x5;
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x13292 = (x13291 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13292);
          reg = x13292;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x13293 = inv(x13291);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13293);
          reg = x13293;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/12(PageFaultCycle)/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x13294 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x13294 != Fp::invalid());
      if (x13294 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x13291 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x13295 = x96 - x13294;
      if (x13295 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/12(PageFaultCycle)/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13296 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x13296 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x13297 = x13291 * x13296;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x13298 = x13297 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x13298 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      if (x13294 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":51:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x72);
          reg = x72;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":52:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      if (x13295 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":55:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":56:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/12(PageFaultCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x13299 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x13299 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":59:24)
      auto x13300 = x13290 + x13299;
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":60:36)
      auto x13301 = x13300 * x64;
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":60:19)
      auto x13302 = x13301 + x4;
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":61:3)
      {
        auto& reg = arg2[116 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13302);
        reg = x13302;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":62:3)
      {
        auto& reg = arg2[117 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x3);
        reg = x3;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/12(PageFaultCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x13303 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x13303 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":64:16)
      auto x13304 = x96 - x13303;
      if (x13304 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":74:17)
        auto x13305 = x13290 - x96;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13306 = Fp(x13305.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[9 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13306);
            reg = x13306;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13307 = arg2[9 * steps + ((cycle - 0) & mask)];
        assert(x13307 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13308 = x13305 - x13307;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13309 = x13308 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13310 = Fp(x13309.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[10 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13310);
            reg = x13310;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13311 = arg2[10 * steps + ((cycle - 0) & mask)];
        assert(x13311 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13312 = x13309 - x13311;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13313 = x13312 * x91;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13313);
          reg = x13313;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":75:17)
        auto x13314 = x5 - x13290;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13315 = Fp(x13314.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[11 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13315);
            reg = x13315;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13316 = arg2[11 * steps + ((cycle - 0) & mask)];
        assert(x13316 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13317 = x13314 - x13316;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13318 = x13317 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13319 = Fp(x13318.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[12 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13319);
            reg = x13319;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13320 = arg2[12 * steps + ((cycle - 0) & mask)];
        assert(x13320 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13321 = x13318 - x13320;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13322 = x13321 * x91;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13322);
          reg = x13322;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":77:5)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x63);
          reg = x63;
        }
      }
      if (x13303 != 0) {
        {
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[9 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13323 = arg2[9 * steps + ((cycle - 0) & mask)];
        assert(x13323 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13324 = x95 - x13323;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13325 = x13324 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13326 = Fp(x13325.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[10 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13326);
            reg = x13326;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13327 = arg2[10 * steps + ((cycle - 0) & mask)];
        assert(x13327 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13328 = x13325 - x13327;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13329 = x13328 * x91;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13329);
          reg = x13329;
        }
        {
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[11 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13330 = arg2[11 * steps + ((cycle - 0) & mask)];
        assert(x13330 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13331 = x95 - x13330;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13332 = x13331 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13333 = Fp(x13332.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[12 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13333);
            reg = x13333;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13334 = arg2[12 * steps + ((cycle - 0) & mask)];
        assert(x13334 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13335 = x13332 - x13334;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13336 = x13335 * x91;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13336);
          reg = x13336;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/page_fault.cpp":83:5)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x68);
          reg = x68;
        }
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[13](Reg)"("./zirgen/components/mux.h":49:25))
    auto x13337 = arg2[113 * steps + ((cycle - 0) & mask)];
    assert(x13337 != Fp::invalid());
    if (x13337 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[8](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":167:70))
      auto x13338 = arg2[108 * steps + ((cycle - 1) & mask)];
      assert(x13338 != Fp::invalid());
      if (x13338 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13339 = arg2[133 * steps + ((cycle - 1) & mask)];
        assert(x13339 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13340 = arg2[134 * steps + ((cycle - 1) & mask)];
        assert(x13340 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13341 = arg2[135 * steps + ((cycle - 1) & mask)];
        assert(x13341 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13342 = arg2[136 * steps + ((cycle - 1) & mask)];
        assert(x13342 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/2(ECallSoftware)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13343 = arg2[76 * steps + ((cycle - 1) & mask)];
        assert(x13343 != Fp::invalid());
        // loc("./zirgen/components/u32.h":25:12)
        auto x13344 = x13340 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x13345 = x13341 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x13346 = x13342 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13347 = x13339 + x13344;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":177:98)
        auto x13348 = x13343 + x96;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13349 = x13347 + x13345;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13350 = x13349 + x13346;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":177:98)
        auto x13351 = x13350 * x75;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":177:98)
        auto x13352 = x13351 + x13348;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":177:98)
        auto x13353 = x13352 - x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":175:5)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13353);
          reg = x13353;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/2(ECallSoftware)/Reg"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":178:63))
        auto x13354 = arg2[192 * steps + ((cycle - 1) & mask)];
        assert(x13354 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":178:5)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13354);
          reg = x13354;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":181:22)
      auto x13355 = x96 - x13338;
      if (x13355 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":182:56))
        auto x13356 = arg2[171 * steps + ((cycle - 1) & mask)];
        assert(x13356 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":182:56)
        auto x13357 = x13356 - x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":182:5)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13357);
          reg = x13357;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":183:46))
        auto x13358 = arg2[172 * steps + ((cycle - 1) & mask)];
        assert(x13358 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":183:46)
        auto x13359 = x13358 + x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":183:5)
        {
          auto& reg = arg2[172 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13359);
          reg = x13359;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/component.h":154:27))
      auto x13360 = arg2[171 * steps + ((cycle - 0) & mask)];
      assert(x13360 != Fp::invalid());
      {
        // loc("zirgen/components/iszero.cpp":11:24)
        auto x13361 = (x13360 == 0) ? Fp(1) : Fp(0);
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[178 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13361);
          reg = x13361;
        }
        // loc("zirgen/components/iszero.cpp":12:21)
        auto x13362 = inv(x13360);
        // loc("zirgen/components/iszero.cpp":12:5)
        {
          auto& reg = arg2[179 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13362);
          reg = x13362;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/IsZero/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x13363 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x13363 != Fp::invalid());
      if (x13363 != 0) {
        // loc("zirgen/components/iszero.cpp":16:23)
        assert(x13360 == 0 && "eqz failed at: zirgen/components/iszero.cpp:16");
      }
      // loc("zirgen/components/iszero.cpp":18:19)
      auto x13364 = x96 - x13363;
      if (x13364 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/IsZero/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13365 = arg2[179 * steps + ((cycle - 0) & mask)];
        assert(x13365 != Fp::invalid());
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x13366 = x13360 * x13365;
        // loc("zirgen/components/iszero.cpp":18:26)
        auto x13367 = x13366 - x96;
        // loc("zirgen/components/iszero.cpp":18:26)
        assert(x13367 == 0 && "eqz failed at: zirgen/components/iszero.cpp:18");
      }
      if (x13338 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/2(ECallSoftware)/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13368 = arg2[76 * steps + ((cycle - 1) & mask)];
        assert(x13368 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":191:80)
        auto x13369 = x13368 + x96;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":191:80)
        auto x13370 = x13369 * x13364;
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13371 = (x13370 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13371);
            reg = x13371;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13372 = x13370 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13373 = (x13372 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[174 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13373);
            reg = x13373;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13374 = x13370 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13375 = (x13374 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13375);
            reg = x13375;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13376 = x13370 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13377 = (x13376 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13377);
            reg = x13377;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13378 = x13370 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13379 = (x13378 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[177 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13379);
            reg = x13379;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13380 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x13380 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13381 = arg2[175 * steps + ((cycle - 0) & mask)];
        assert(x13381 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13382 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x13382 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13383 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x13383 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13384 = x13381 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13385 = x13382 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13386 = x13383 * x78;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13387 = x13380 + x13384;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13388 = x13387 + x13385;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13389 = x13388 + x13386;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x13390 = x13389 - x13370;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x13390 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13391 = arg2[172 * steps + ((cycle - 0) & mask)];
        assert(x13391 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":194:10)
        auto x13392 = x13391 * x78;
        extern_args[0] = x13392;
        extern_args[1] = x13360;
        extern_args[2] = x13389;
        extern_log(ctx, cycle, "  COPYIN INIT: dest=%x, remaining=%u first chunk words=%u", extern_args, extern_outs);
      }
      if (x13355 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":199:43)
        auto x13393 = x13364 * x78;
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13394 = (x13393 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13394);
            reg = x13394;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13395 = x13393 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13396 = (x13395 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[174 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13396);
            reg = x13396;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13397 = x13393 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13398 = (x13397 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13398);
            reg = x13398;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13399 = x13393 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13400 = (x13399 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13400);
            reg = x13400;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13401 = x13393 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13402 = (x13401 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[177 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13402);
            reg = x13402;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13403 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x13403 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13404 = arg2[175 * steps + ((cycle - 0) & mask)];
        assert(x13404 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13405 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x13405 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13406 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x13406 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13407 = x13404 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13408 = x13405 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13409 = x13406 * x78;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13410 = x13403 + x13407;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13411 = x13410 + x13408;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13412 = x13411 + x13409;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x13413 = x13412 - x13393;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x13413 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":201:24))
      auto x13414 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x13414 != Fp::invalid());
      if (x13414 != 0) {
        {
          extern_syscallFini(ctx, cycle, "", extern_args, extern_outs);
          auto x13415 = extern_outs[0];
          auto x13416 = extern_outs[1];
          auto x13417 = extern_outs[2];
          auto x13418 = extern_outs[3];
          auto x13419 = extern_outs[4];
          auto x13420 = extern_outs[5];
          auto x13421 = extern_outs[6];
          auto x13422 = extern_outs[7];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13415);
            reg = x13415;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13416);
            reg = x13416;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13417);
            reg = x13417;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13418);
            reg = x13418;
          }
          {
            extern_args[0] = x27;
            extern_args[1] = x13415;
            extern_args[2] = x13416;
            extern_args[3] = x13417;
            extern_args[4] = x13418;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13423 = arg2[119 * steps + ((cycle - 0) & mask)];
          assert(x13423 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13424 = arg2[120 * steps + ((cycle - 0) & mask)];
          assert(x13424 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13425 = arg2[121 * steps + ((cycle - 0) & mask)];
          assert(x13425 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13426 = arg2[122 * steps + ((cycle - 0) & mask)];
          assert(x13426 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[116 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x27);
            reg = x27;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[117 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[118 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13423);
            reg = x13423;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13424);
            reg = x13424;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13425);
            reg = x13425;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13426);
            reg = x13426;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13419);
            reg = x13419;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13420);
            reg = x13420;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13421);
            reg = x13421;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13422);
            reg = x13422;
          }
          {
            extern_args[0] = x28;
            extern_args[1] = x13419;
            extern_args[2] = x13420;
            extern_args[3] = x13421;
            extern_args[4] = x13422;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13427 = arg2[126 * steps + ((cycle - 0) & mask)];
          assert(x13427 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13428 = arg2[127 * steps + ((cycle - 0) & mask)];
          assert(x13428 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13429 = arg2[128 * steps + ((cycle - 0) & mask)];
          assert(x13429 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13430 = arg2[129 * steps + ((cycle - 0) & mask)];
          assert(x13430 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x28);
            reg = x28;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13427);
            reg = x13427;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13428);
            reg = x13428;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13429);
            reg = x13429;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13430);
            reg = x13430;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":179:10))
        auto x13431 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x13431 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":210:8)
        auto x13432 = x13431 - x949;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":210:8)
        assert(x13432 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:210");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":179:10))
        auto x13433 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x13433 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":211:8)
        auto x13434 = x13433 - x949;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":211:8)
        assert(x13434 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:211");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":175:10))
        auto x13435 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x13435 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":213:8)
        auto x13436 = x13435 - x27;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":213:8)
        assert(x13436 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:213");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":175:10))
        auto x13437 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x13437 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":214:8)
        auto x13438 = x13437 - x28;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":214:8)
        assert(x13438 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:214");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13439 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x13439 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13440 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x13440 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13441 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x13441 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13442 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x13442 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13443 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x13443 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13444 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x13444 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13445 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x13445 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13446 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x13446 != Fp::invalid());
        extern_args[0] = x13439;
        extern_args[1] = x13440;
        extern_args[2] = x13441;
        extern_args[3] = x13442;
        extern_args[4] = x13443;
        extern_args[5] = x13444;
        extern_args[6] = x13445;
        extern_args[7] = x13446;
        extern_log(ctx, cycle, "  COPYIN FINI: a0=%w a1=%w", extern_args, extern_outs);
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":221:19)
        auto x13447 = x963 + x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x13448 = x13447 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13449 = Fp(x13448.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13449);
            reg = x13449;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13450 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x13450 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13451 = x13448 - x13450;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13452 = x13451 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13453 = Fp(x13452.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13453);
            reg = x13453;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13454 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x13454 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13455 = x13452 - x13454;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13456 = x13455 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13457 = Fp(x13456.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13457);
            reg = x13457;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13458 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x13458 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13459 = x13456 - x13458;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13460 = x13459 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x13461 = Fp(x13460.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13461);
            reg = x13461;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13462 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x13462 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x13463 = x13460 - x13462;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x13464 = x13463 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13464);
          reg = x13464;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13465 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x13465 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x13466 = x96 - x13465;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x13467 = x13465 * x13466;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13467);
          reg = x13467;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x13468 = x93 - x13465;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13469 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x13469 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x13470 = x13469 * x13468;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x13470 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":222:5)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":224:28)
      auto x13471 = x96 - x13414;
      if (x13471 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x13472 = x963 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13473 = Fp(x13472.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13473);
            reg = x13473;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13474 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x13474 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13475 = x13472 - x13474;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13476 = x13475 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13477 = Fp(x13476.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13477);
            reg = x13477;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13478 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x13478 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13479 = x13476 - x13478;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13480 = x13479 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x13481 = Fp(x13480.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13481);
            reg = x13481;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x13482 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x13482 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x13483 = x13480 - x13482;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x13484 = x13483 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x13485 = Fp(x13484.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13485);
            reg = x13485;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13486 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x13486 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x13487 = x13484 - x13486;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x13488 = x13487 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13488);
          reg = x13488;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13489 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x13489 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x13490 = x96 - x13489;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x13491 = x13489 * x13490;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13491);
          reg = x13491;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x13492 = x93 - x13489;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13493 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x13493 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x13494 = x13493 * x13492;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x13494 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":226:5)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x70);
          reg = x70;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[1](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":236:35))
      auto x13495 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x13495 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[4](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":234:35))
      auto x13496 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x13496 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[2](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":236:35))
      auto x13497 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x13497 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/OneHot/hot[3](Reg)"("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":236:35))
      auto x13498 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x13498 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":236:22)
      auto x13499 = x13495 + x13497;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":236:22)
      auto x13500 = x13499 + x13498;
      if (x13496 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13501 = arg2[172 * steps + ((cycle - 0) & mask)];
        assert(x13501 != Fp::invalid());
        {
          extern_syscallBody(ctx, cycle, "", extern_args, extern_outs);
          auto x13502 = extern_outs[0];
          auto x13503 = extern_outs[1];
          auto x13504 = extern_outs[2];
          auto x13505 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13502);
            reg = x13502;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13503);
            reg = x13503;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13504);
            reg = x13504;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13505);
            reg = x13505;
          }
          {
            extern_args[0] = x13501;
            extern_args[1] = x13502;
            extern_args[2] = x13503;
            extern_args[3] = x13504;
            extern_args[4] = x13505;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13506 = arg2[119 * steps + ((cycle - 0) & mask)];
          assert(x13506 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13507 = arg2[120 * steps + ((cycle - 0) & mask)];
          assert(x13507 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13508 = arg2[121 * steps + ((cycle - 0) & mask)];
          assert(x13508 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13509 = arg2[122 * steps + ((cycle - 0) & mask)];
          assert(x13509 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[116 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13501);
            reg = x13501;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[117 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[118 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13506);
            reg = x13506;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13507);
            reg = x13507;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13508);
            reg = x13508;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13509);
            reg = x13509;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":245:41)
          auto x13510 = x13501 * x78;
          extern_args[0] = x13510;
          extern_args[1] = x13506;
          extern_args[2] = x13507;
          extern_args[3] = x13508;
          extern_args[4] = x13509;
          extern_log(ctx, cycle, "  COPYIN BODY: %x <- %w", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":179:10))
        auto x13511 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x13511 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":248:10)
        auto x13512 = x13511 - x949;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":248:10)
        assert(x13512 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:248");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":175:10))
        auto x13513 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x13513 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":249:10)
        auto x13514 = x13513 - x13501;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":249:10)
        assert(x13514 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:249");
      }
      if (x13500 != 0) {
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":234:22)
      auto x13515 = x13498 + x13496;
      if (x13515 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13516 = arg2[172 * steps + ((cycle - 0) & mask)];
        assert(x13516 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:23)
        auto x13517 = x13516 + x96;
        {
          extern_syscallBody(ctx, cycle, "", extern_args, extern_outs);
          auto x13518 = extern_outs[0];
          auto x13519 = extern_outs[1];
          auto x13520 = extern_outs[2];
          auto x13521 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13518);
            reg = x13518;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13519);
            reg = x13519;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13520);
            reg = x13520;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13521);
            reg = x13521;
          }
          {
            extern_args[0] = x13517;
            extern_args[1] = x13518;
            extern_args[2] = x13519;
            extern_args[3] = x13520;
            extern_args[4] = x13521;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13522 = arg2[126 * steps + ((cycle - 0) & mask)];
          assert(x13522 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13523 = arg2[127 * steps + ((cycle - 0) & mask)];
          assert(x13523 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13524 = arg2[128 * steps + ((cycle - 0) & mask)];
          assert(x13524 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13525 = arg2[129 * steps + ((cycle - 0) & mask)];
          assert(x13525 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[123 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13517);
            reg = x13517;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[124 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[125 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13522);
            reg = x13522;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13523);
            reg = x13523;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13524);
            reg = x13524;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13525);
            reg = x13525;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":245:41)
          auto x13526 = x13517 * x78;
          extern_args[0] = x13526;
          extern_args[1] = x13522;
          extern_args[2] = x13523;
          extern_args[3] = x13524;
          extern_args[4] = x13525;
          extern_log(ctx, cycle, "  COPYIN BODY: %x <- %w", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":179:10))
        auto x13527 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x13527 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":248:10)
        auto x13528 = x13527 - x949;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":248:10)
        assert(x13528 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:248");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":175:10))
        auto x13529 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x13529 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":249:10)
        auto x13530 = x13529 - x13517;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":249:10)
        assert(x13530 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:249");
      }
      if (x13499 != 0) {
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":234:22)
      auto x13531 = x13497 + x13498;
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":234:22)
      auto x13532 = x13531 + x13496;
      if (x13532 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13533 = arg2[172 * steps + ((cycle - 0) & mask)];
        assert(x13533 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:23)
        auto x13534 = x13533 + x93;
        {
          extern_syscallBody(ctx, cycle, "", extern_args, extern_outs);
          auto x13535 = extern_outs[0];
          auto x13536 = extern_outs[1];
          auto x13537 = extern_outs[2];
          auto x13538 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13535);
            reg = x13535;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13536);
            reg = x13536;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13537);
            reg = x13537;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13538);
            reg = x13538;
          }
          {
            extern_args[0] = x13534;
            extern_args[1] = x13535;
            extern_args[2] = x13536;
            extern_args[3] = x13537;
            extern_args[4] = x13538;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13539 = arg2[133 * steps + ((cycle - 0) & mask)];
          assert(x13539 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13540 = arg2[134 * steps + ((cycle - 0) & mask)];
          assert(x13540 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13541 = arg2[135 * steps + ((cycle - 0) & mask)];
          assert(x13541 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13542 = arg2[136 * steps + ((cycle - 0) & mask)];
          assert(x13542 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[130 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13534);
            reg = x13534;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[131 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[132 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13539);
            reg = x13539;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13540);
            reg = x13540;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13541);
            reg = x13541;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13542);
            reg = x13542;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":245:41)
          auto x13543 = x13534 * x78;
          extern_args[0] = x13543;
          extern_args[1] = x13539;
          extern_args[2] = x13540;
          extern_args[3] = x13541;
          extern_args[4] = x13542;
          extern_log(ctx, cycle, "  COPYIN BODY: %x <- %w", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":179:10))
        auto x13544 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x13544 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":248:10)
        auto x13545 = x13544 - x949;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":248:10)
        assert(x13545 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:248");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":175:10))
        auto x13546 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x13546 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":249:10)
        auto x13547 = x13546 - x13534;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":249:10)
        assert(x13547 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:249");
      }
      if (x13495 != 0) {
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":234:22)
      auto x13548 = x13500 + x13496;
      if (x13548 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13549 = arg2[172 * steps + ((cycle - 0) & mask)];
        assert(x13549 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":241:23)
        auto x13550 = x13549 + x76;
        {
          extern_syscallBody(ctx, cycle, "", extern_args, extern_outs);
          auto x13551 = extern_outs[0];
          auto x13552 = extern_outs[1];
          auto x13553 = extern_outs[2];
          auto x13554 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13551);
            reg = x13551;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13552);
            reg = x13552;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13553);
            reg = x13553;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13554);
            reg = x13554;
          }
          {
            extern_args[0] = x13550;
            extern_args[1] = x13551;
            extern_args[2] = x13552;
            extern_args[3] = x13553;
            extern_args[4] = x13554;
            extern_args[5] = x93;
            extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
          }
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13555 = arg2[140 * steps + ((cycle - 0) & mask)];
          assert(x13555 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13556 = arg2[141 * steps + ((cycle - 0) & mask)];
          assert(x13556 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13557 = arg2[142 * steps + ((cycle - 0) & mask)];
          assert(x13557 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13558 = arg2[143 * steps + ((cycle - 0) & mask)];
          assert(x13558 != Fp::invalid());
          // loc("zirgen/components/ram.cpp":168:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13550);
            reg = x13550;
          }
          // loc("zirgen/components/ram.cpp":169:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x949);
            reg = x949;
          }
          // loc("zirgen/components/ram.cpp":170:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x93);
            reg = x93;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13555);
            reg = x13555;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13556);
            reg = x13556;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13557);
            reg = x13557;
          }
          // loc("zirgen/components/u32.cpp":34:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13558);
            reg = x13558;
          }
          // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":245:41)
          auto x13559 = x13550 * x78;
          extern_args[0] = x13559;
          extern_args[1] = x13555;
          extern_args[2] = x13556;
          extern_args[3] = x13557;
          extern_args[4] = x13558;
          extern_log(ctx, cycle, "  COPYIN BODY: %x <- %w", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("zirgen/components/ram.cpp":179:10))
        auto x13560 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x13560 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":248:10)
        auto x13561 = x13560 - x949;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":248:10)
        assert(x13561 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:248");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("zirgen/components/ram.cpp":175:10))
        auto x13562 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x13562 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":249:10)
        auto x13563 = x13562 - x13550;
        // loc("zirgen/circuit/rv32im/v1/edsl/ecall.cpp":249:10)
        assert(x13563 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/ecall.cpp:249");
      }
      if (x95 != 0) {
        // loc("zirgen/components/ram.cpp":43:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":44:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/ram.cpp":45:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/components/u32.cpp":28:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[14](Reg)"("./zirgen/components/mux.h":49:25))
    auto x13564 = arg2[114 * steps + ((cycle - 0) & mask)];
    assert(x13564 != Fp::invalid());
    if (x13564 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[8](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":179:70))
      auto x13565 = arg2[108 * steps + ((cycle - 1) & mask)];
      assert(x13565 != Fp::invalid());
      if (x13565 != 0) {
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        {
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[172 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[174 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13566 = arg2[173 * steps + ((cycle - 0) & mask)];
        assert(x13566 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13567 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x13567 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13568 = arg2[175 * steps + ((cycle - 0) & mask)];
        assert(x13568 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13569 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x13569 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13570 = x13567 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13571 = x13568 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13572 = x13569 * x78;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13573 = x13566 + x13570;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13574 = x13573 + x13571;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13575 = x13574 + x13572;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x13575 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13576 = arg2[133 * steps + ((cycle - 1) & mask)];
        assert(x13576 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13577 = arg2[134 * steps + ((cycle - 1) & mask)];
        assert(x13577 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13578 = arg2[135 * steps + ((cycle - 1) & mask)];
        assert(x13578 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13579 = arg2[136 * steps + ((cycle - 1) & mask)];
        assert(x13579 != Fp::invalid());
        // loc("./zirgen/components/u32.h":25:12)
        auto x13580 = x13577 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x13581 = x13578 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x13582 = x13579 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13583 = x13576 + x13580;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13584 = x13583 + x13581;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13585 = x13584 + x13582;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":189:9)
        assert(x13585 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:189");
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":191:22)
      auto x13586 = x96 - x13565;
      if (x13586 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":192:47))
        auto x13587 = arg2[172 * steps + ((cycle - 1) & mask)];
        assert(x13587 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13588 = arg2[177 * steps + ((cycle - 1) & mask)];
        assert(x13588 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":192:23)
        auto x13589 = x96 - x13587;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":192:22)
        auto x13590 = x13589 - x13588;
        // loc("./zirgen/components/bits.h":27:23)
        {
          auto& reg = arg2[177 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13590);
          reg = x13590;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13591 = arg2[177 * steps + ((cycle - 0) & mask)];
        assert(x13591 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13592 = arg2[173 * steps + ((cycle - 1) & mask)];
        assert(x13592 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13593 = arg2[174 * steps + ((cycle - 1) & mask)];
        assert(x13593 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13594 = arg2[175 * steps + ((cycle - 1) & mask)];
        assert(x13594 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13595 = arg2[176 * steps + ((cycle - 1) & mask)];
        assert(x13595 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13596 = x13593 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13597 = x13594 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13598 = x13595 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":193:41)
        auto x13599 = x96 - x13591;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13600 = x13592 + x13596;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13601 = x13600 + x13597;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13602 = x13601 + x13598;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":193:36)
        auto x13603 = x13602 + x13599;
        {
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13604 = (x13603 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[172 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13604);
            reg = x13604;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13605 = x13603 - x96;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13606 = (x13605 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[173 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13606);
            reg = x13606;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13607 = x13603 - x93;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13608 = (x13607 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[174 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13608);
            reg = x13608;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13609 = x13603 - x76;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13610 = (x13609 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[175 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13610);
            reg = x13610;
          }
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13611 = x13603 - x78;
          // loc("./zirgen/components/onehot.h":37:26)
          auto x13612 = (x13611 == 0) ? Fp(1) : Fp(0);
          // loc("./zirgen/components/onehot.h":37:9)
          {
            auto& reg = arg2[176 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13612);
            reg = x13612;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13613 = arg2[173 * steps + ((cycle - 0) & mask)];
        assert(x13613 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[2](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13614 = arg2[174 * steps + ((cycle - 0) & mask)];
        assert(x13614 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13615 = arg2[175 * steps + ((cycle - 0) & mask)];
        assert(x13615 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[4](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13616 = arg2[176 * steps + ((cycle - 0) & mask)];
        assert(x13616 != Fp::invalid());
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13617 = x13614 * x93;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13618 = x13615 * x76;
        // loc("./zirgen/components/onehot.h":46:19)
        auto x13619 = x13616 * x78;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13620 = x13613 + x13617;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13621 = x13620 + x13618;
        // loc("./zirgen/components/onehot.h":46:13)
        auto x13622 = x13621 + x13619;
        // loc("./zirgen/components/onehot.h":40:8)
        auto x13623 = x13622 - x13603;
        // loc("./zirgen/components/onehot.h":40:8)
        assert(x13623 == 0 && "eqz failed at: ./zirgen/components/onehot.h:40");
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[2](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":195:19))
      auto x13624 = arg2[174 * steps + ((cycle - 0) & mask)];
      assert(x13624 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[4](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":195:34))
      auto x13625 = arg2[176 * steps + ((cycle - 0) & mask)];
      assert(x13625 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x13626 = arg2[177 * steps + ((cycle - 0) & mask)];
      assert(x13626 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":195:19)
      auto x13627 = x13624 + x13625;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":195:18)
      auto x13628 = x13627 * x13626;
      // loc("./zirgen/components/bits.h":27:23)
      {
        auto& reg = arg2[178 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13628);
        reg = x13628;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":196:17)
      auto x13629 = x13625 * x13626;
      // loc("./zirgen/components/bits.h":27:23)
      {
        auto& reg = arg2[179 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x13629);
        reg = x13629;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[1](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x13630 = arg2[173 * steps + ((cycle - 0) & mask)];
      assert(x13630 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[3](Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x13631 = arg2[175 * steps + ((cycle - 0) & mask)];
      assert(x13631 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x13632 = arg2[178 * steps + ((cycle - 0) & mask)];
      assert(x13632 != Fp::invalid());
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Bit/bit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x13633 = arg2[179 * steps + ((cycle - 0) & mask)];
      assert(x13633 != Fp::invalid());
      // loc("./zirgen/components/onehot.h":46:19)
      auto x13634 = x13624 * x93;
      // loc("./zirgen/components/onehot.h":46:19)
      auto x13635 = x13631 * x76;
      // loc("./zirgen/components/onehot.h":46:19)
      auto x13636 = x13625 * x78;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x13637 = x13630 + x13634;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x13638 = x13637 + x13635;
      // loc("./zirgen/components/onehot.h":46:13)
      auto x13639 = x13638 + x13636;
      extern_args[0] = x13639;
      extern_args[1] = x13626;
      extern_args[2] = x13632;
      extern_args[3] = x13633;
      extern_log(ctx, cycle, "BIGINT: stage = %u, stageOffset = %u, mulActive = %u, finalize = %u", extern_args, extern_outs);
      // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":204:18))
      auto x13640 = arg2[172 * steps + ((cycle - 0) & mask)];
      assert(x13640 != Fp::invalid());
      if (x13640 != 0) {
        {
          extern_args[0] = x27;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x13641 = extern_outs[0];
          auto x13642 = extern_outs[1];
          auto x13643 = extern_outs[2];
          auto x13644 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13641);
            reg = x13641;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13642);
            reg = x13642;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13643);
            reg = x13643;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13644);
            reg = x13644;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13645 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x13645 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13646 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x13646 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13647 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x13647 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13648 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x13648 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x27);
          reg = x27;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13645);
          reg = x13645;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13646);
          reg = x13646;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13647);
          reg = x13647;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13648);
          reg = x13648;
        }
        {
          extern_args[0] = x25;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x13649 = extern_outs[0];
          auto x13650 = extern_outs[1];
          auto x13651 = extern_outs[2];
          auto x13652 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13649);
            reg = x13649;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13650);
            reg = x13650;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13651);
            reg = x13651;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13652);
            reg = x13652;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13653 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x13653 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13654 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x13654 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13655 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x13655 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13656 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x13656 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x25);
          reg = x25;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13653);
          reg = x13653;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13654);
          reg = x13654;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13655);
          reg = x13655;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13656);
          reg = x13656;
        }
        {
          extern_args[0] = x24;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x13657 = extern_outs[0];
          auto x13658 = extern_outs[1];
          auto x13659 = extern_outs[2];
          auto x13660 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13657);
            reg = x13657;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13658);
            reg = x13658;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13659);
            reg = x13659;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13660);
            reg = x13660;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13661 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x13661 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13662 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x13662 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13663 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x13663 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13664 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x13664 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x24);
          reg = x24;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13661);
          reg = x13661;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13662);
          reg = x13662;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13663);
          reg = x13663;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13664);
          reg = x13664;
        }
        {
          extern_args[0] = x26;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x13665 = extern_outs[0];
          auto x13666 = extern_outs[1];
          auto x13667 = extern_outs[2];
          auto x13668 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13665);
            reg = x13665;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13666);
            reg = x13666;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13667);
            reg = x13667;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13668);
            reg = x13668;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13669 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x13669 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13670 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x13670 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13671 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x13671 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13672 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x13672 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x26);
          reg = x26;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13669);
          reg = x13669;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13670);
          reg = x13670;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13671);
          reg = x13671;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13672);
          reg = x13672;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":212:21)
      auto x13673 = x96 - x13626;
      if (x13673 != 0) {
        if (x13630 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13674 = arg2[140 * steps + ((cycle - 1) & mask)];
          assert(x13674 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13675 = arg2[141 * steps + ((cycle - 1) & mask)];
          assert(x13675 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13676 = arg2[142 * steps + ((cycle - 1) & mask)];
          assert(x13676 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13677 = arg2[143 * steps + ((cycle - 1) & mask)];
          assert(x13677 != Fp::invalid());
          // loc("./zirgen/components/u32.h":25:12)
          auto x13678 = x13675 * x90;
          // loc("./zirgen/components/u32.h":26:12)
          auto x13679 = x13676 * x77;
          // loc("./zirgen/components/u32.h":27:12)
          auto x13680 = x13677 * x79;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13681 = x13674 + x13678;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13682 = x13681 + x13679;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13683 = x13682 + x13680;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":238:83)
          auto x13684 = x13683 * x75;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":238:9)
          {
            auto& reg = arg2[171 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13684);
            reg = x13684;
          }
        }
        if (x13624 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13685 = arg2[126 * steps + ((cycle - 3) & mask)];
          assert(x13685 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13686 = arg2[127 * steps + ((cycle - 3) & mask)];
          assert(x13686 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13687 = arg2[128 * steps + ((cycle - 3) & mask)];
          assert(x13687 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13688 = arg2[129 * steps + ((cycle - 3) & mask)];
          assert(x13688 != Fp::invalid());
          // loc("./zirgen/components/u32.h":25:12)
          auto x13689 = x13686 * x90;
          // loc("./zirgen/components/u32.h":26:12)
          auto x13690 = x13687 * x77;
          // loc("./zirgen/components/u32.h":27:12)
          auto x13691 = x13688 * x79;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13692 = x13685 + x13689;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13693 = x13692 + x13690;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13694 = x13693 + x13691;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":238:83)
          auto x13695 = x13694 * x75;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":238:9)
          {
            auto& reg = arg2[171 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13695);
            reg = x13695;
          }
        }
        if (x13631 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13696 = arg2[133 * steps + ((cycle - 5) & mask)];
          assert(x13696 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13697 = arg2[134 * steps + ((cycle - 5) & mask)];
          assert(x13697 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13698 = arg2[135 * steps + ((cycle - 5) & mask)];
          assert(x13698 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13699 = arg2[136 * steps + ((cycle - 5) & mask)];
          assert(x13699 != Fp::invalid());
          // loc("./zirgen/components/u32.h":25:12)
          auto x13700 = x13697 * x90;
          // loc("./zirgen/components/u32.h":26:12)
          auto x13701 = x13698 * x77;
          // loc("./zirgen/components/u32.h":27:12)
          auto x13702 = x13699 * x79;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13703 = x13696 + x13700;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13704 = x13703 + x13701;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13705 = x13704 + x13702;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":238:83)
          auto x13706 = x13705 * x75;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":238:9)
          {
            auto& reg = arg2[171 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13706);
            reg = x13706;
          }
        }
        if (x13625 != 0) {
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13707 = arg2[119 * steps + ((cycle - 7) & mask)];
          assert(x13707 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13708 = arg2[120 * steps + ((cycle - 7) & mask)];
          assert(x13708 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13709 = arg2[121 * steps + ((cycle - 7) & mask)];
          assert(x13709 != Fp::invalid());
          // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
          auto x13710 = arg2[122 * steps + ((cycle - 7) & mask)];
          assert(x13710 != Fp::invalid());
          // loc("./zirgen/components/u32.h":25:12)
          auto x13711 = x13708 * x90;
          // loc("./zirgen/components/u32.h":26:12)
          auto x13712 = x13709 * x77;
          // loc("./zirgen/components/u32.h":27:12)
          auto x13713 = x13710 * x79;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13714 = x13707 + x13711;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13715 = x13714 + x13712;
          // loc("./zirgen/components/u32.h":24:12)
          auto x13716 = x13715 + x13713;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":238:83)
          auto x13717 = x13716 * x75;
          // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":238:9)
          {
            auto& reg = arg2[171 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13717);
            reg = x13717;
          }
        }
      }
      if (x13626 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":242:54))
        auto x13718 = arg2[171 * steps + ((cycle - 1) & mask)];
        assert(x13718 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":242:21)
        {
          auto& reg = arg2[171 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13718);
          reg = x13718;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":246:48)
      auto x13719 = x13630 + x13624;
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":246:48)
      auto x13720 = x13719 + x13631;
      if (x13720 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x13721 = arg2[171 * steps + ((cycle - 0) & mask)];
        assert(x13721 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":248:40)
        auto x13722 = x13626 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":248:31)
        auto x13723 = x13721 + x13722;
        {
          extern_args[0] = x13723;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x13724 = extern_outs[0];
          auto x13725 = extern_outs[1];
          auto x13726 = extern_outs[2];
          auto x13727 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[119 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13724);
            reg = x13724;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[120 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13725);
            reg = x13725;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[121 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13726);
            reg = x13726;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[122 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13727);
            reg = x13727;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13728 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x13728 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13729 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x13729 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13730 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x13730 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13731 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x13731 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13723);
          reg = x13723;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13728);
          reg = x13728;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13729);
          reg = x13729;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13730);
          reg = x13730;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13731);
          reg = x13731;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":248:31)
        auto x13732 = x13723 + x96;
        {
          extern_args[0] = x13732;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x13733 = extern_outs[0];
          auto x13734 = extern_outs[1];
          auto x13735 = extern_outs[2];
          auto x13736 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[126 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13733);
            reg = x13733;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[127 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13734);
            reg = x13734;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[128 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13735);
            reg = x13735;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[129 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13736);
            reg = x13736;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13737 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x13737 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13738 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x13738 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13739 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x13739 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13740 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x13740 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13732);
          reg = x13732;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13737);
          reg = x13737;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13738);
          reg = x13738;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13739);
          reg = x13739;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13740);
          reg = x13740;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":248:31)
        auto x13741 = x13723 + x93;
        {
          extern_args[0] = x13741;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x13742 = extern_outs[0];
          auto x13743 = extern_outs[1];
          auto x13744 = extern_outs[2];
          auto x13745 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[133 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13742);
            reg = x13742;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[134 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13743);
            reg = x13743;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[135 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13744);
            reg = x13744;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[136 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13745);
            reg = x13745;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13746 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x13746 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13747 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x13747 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13748 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x13748 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13749 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x13749 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13741);
          reg = x13741;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13746);
          reg = x13746;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13747);
          reg = x13747;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13748);
          reg = x13748;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13749);
          reg = x13749;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":248:31)
        auto x13750 = x13723 + x76;
        {
          extern_args[0] = x13750;
          extern_args[1] = x96;
          extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
          auto x13751 = extern_outs[0];
          auto x13752 = extern_outs[1];
          auto x13753 = extern_outs[2];
          auto x13754 = extern_outs[3];
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13751);
            reg = x13751;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13752);
            reg = x13752;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13753);
            reg = x13753;
          }
          // loc("zirgen/components/u32.cpp":88:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x13754);
            reg = x13754;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13755 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x13755 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13756 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x13756 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13757 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x13757 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x13758 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x13758 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13750);
          reg = x13750;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x96);
          reg = x96;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13755);
          reg = x13755;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13756);
          reg = x13756;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13757);
          reg = x13757;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x13758);
          reg = x13758;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":251:10)
        auto x13759 = x13721 * x78;
        // loc("./zirgen/components/u32.h":25:12)
        auto x13760 = x13729 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x13761 = x13730 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x13762 = x13731 * x79;
        // loc("./zirgen/components/u32.h":25:12)
        auto x13763 = x13738 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x13764 = x13739 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x13765 = x13740 * x79;
        // loc("./zirgen/components/u32.h":25:12)
        auto x13766 = x13747 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x13767 = x13748 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x13768 = x13749 * x79;
        // loc("./zirgen/components/u32.h":25:12)
        auto x13769 = x13756 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x13770 = x13757 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x13771 = x13758 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13772 = x13728 + x13760;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13773 = x13737 + x13763;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13774 = x13746 + x13766;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13775 = x13755 + x13769;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13776 = x13772 + x13761;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13777 = x13773 + x13764;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13778 = x13774 + x13767;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13779 = x13775 + x13770;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13780 = x13776 + x13762;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13781 = x13777 + x13765;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13782 = x13778 + x13768;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13783 = x13779 + x13771;
        extern_args[0] = x13759;
        extern_args[1] = x13780;
        extern_args[2] = x13781;
        extern_args[3] = x13782;
        extern_args[4] = x13783;
        extern_log(ctx, cycle, "  Reading: ioAddr = 0x%x, data = { %u, %u, %u, %u }", extern_args, extern_outs);
      }
      {
        extern_args[0] = x25;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13784 = extern_outs[0];
        auto x13785 = extern_outs[1];
        auto x13786 = extern_outs[2];
        auto x13787 = extern_outs[3];
        // loc("./zirgen/components/u32.h":25:12)
        auto x13788 = x13785 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x13789 = x13786 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x13790 = x13787 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13791 = x13784 + x13788;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13792 = x13791 + x13789;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13793 = x13792 + x13790;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":13:14)
        auto x13794 = x13793 * x75;
        extern_args[0] = x13794;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13795 = extern_outs[0];
        auto x13796 = extern_outs[1];
        auto x13797 = extern_outs[2];
        auto x13798 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13799 = x13794 + x96;
        extern_args[0] = x13799;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13800 = extern_outs[0];
        auto x13801 = extern_outs[1];
        auto x13802 = extern_outs[2];
        auto x13803 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13804 = x13794 + x93;
        extern_args[0] = x13804;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13805 = extern_outs[0];
        auto x13806 = extern_outs[1];
        auto x13807 = extern_outs[2];
        auto x13808 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13809 = x13794 + x76;
        extern_args[0] = x13809;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13810 = extern_outs[0];
        auto x13811 = extern_outs[1];
        auto x13812 = extern_outs[2];
        auto x13813 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13814 = x13794 + x78;
        extern_args[0] = x13814;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13815 = extern_outs[0];
        auto x13816 = extern_outs[1];
        auto x13817 = extern_outs[2];
        auto x13818 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13819 = x13794 + x67;
        extern_args[0] = x13819;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13820 = extern_outs[0];
        auto x13821 = extern_outs[1];
        auto x13822 = extern_outs[2];
        auto x13823 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13824 = x13794 + x66;
        extern_args[0] = x13824;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13825 = extern_outs[0];
        auto x13826 = extern_outs[1];
        auto x13827 = extern_outs[2];
        auto x13828 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13829 = x13794 + x65;
        extern_args[0] = x13829;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13830 = extern_outs[0];
        auto x13831 = extern_outs[1];
        auto x13832 = extern_outs[2];
        auto x13833 = extern_outs[3];
        extern_args[0] = x24;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13834 = extern_outs[0];
        auto x13835 = extern_outs[1];
        auto x13836 = extern_outs[2];
        auto x13837 = extern_outs[3];
        // loc("./zirgen/components/u32.h":25:12)
        auto x13838 = x13835 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x13839 = x13836 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x13840 = x13837 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13841 = x13834 + x13838;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13842 = x13841 + x13839;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13843 = x13842 + x13840;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":13:14)
        auto x13844 = x13843 * x75;
        extern_args[0] = x13844;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13845 = extern_outs[0];
        auto x13846 = extern_outs[1];
        auto x13847 = extern_outs[2];
        auto x13848 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13849 = x13844 + x96;
        extern_args[0] = x13849;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13850 = extern_outs[0];
        auto x13851 = extern_outs[1];
        auto x13852 = extern_outs[2];
        auto x13853 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13854 = x13844 + x93;
        extern_args[0] = x13854;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13855 = extern_outs[0];
        auto x13856 = extern_outs[1];
        auto x13857 = extern_outs[2];
        auto x13858 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13859 = x13844 + x76;
        extern_args[0] = x13859;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13860 = extern_outs[0];
        auto x13861 = extern_outs[1];
        auto x13862 = extern_outs[2];
        auto x13863 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13864 = x13844 + x78;
        extern_args[0] = x13864;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13865 = extern_outs[0];
        auto x13866 = extern_outs[1];
        auto x13867 = extern_outs[2];
        auto x13868 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13869 = x13844 + x67;
        extern_args[0] = x13869;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13870 = extern_outs[0];
        auto x13871 = extern_outs[1];
        auto x13872 = extern_outs[2];
        auto x13873 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13874 = x13844 + x66;
        extern_args[0] = x13874;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13875 = extern_outs[0];
        auto x13876 = extern_outs[1];
        auto x13877 = extern_outs[2];
        auto x13878 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13879 = x13844 + x65;
        extern_args[0] = x13879;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13880 = extern_outs[0];
        auto x13881 = extern_outs[1];
        auto x13882 = extern_outs[2];
        auto x13883 = extern_outs[3];
        extern_args[0] = x26;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13884 = extern_outs[0];
        auto x13885 = extern_outs[1];
        auto x13886 = extern_outs[2];
        auto x13887 = extern_outs[3];
        // loc("./zirgen/components/u32.h":25:12)
        auto x13888 = x13885 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x13889 = x13886 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x13890 = x13887 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13891 = x13884 + x13888;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13892 = x13891 + x13889;
        // loc("./zirgen/components/u32.h":24:12)
        auto x13893 = x13892 + x13890;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":13:14)
        auto x13894 = x13893 * x75;
        extern_args[0] = x13894;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13895 = extern_outs[0];
        auto x13896 = extern_outs[1];
        auto x13897 = extern_outs[2];
        auto x13898 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13899 = x13894 + x96;
        extern_args[0] = x13899;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13900 = extern_outs[0];
        auto x13901 = extern_outs[1];
        auto x13902 = extern_outs[2];
        auto x13903 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13904 = x13894 + x93;
        extern_args[0] = x13904;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13905 = extern_outs[0];
        auto x13906 = extern_outs[1];
        auto x13907 = extern_outs[2];
        auto x13908 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13909 = x13894 + x76;
        extern_args[0] = x13909;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13910 = extern_outs[0];
        auto x13911 = extern_outs[1];
        auto x13912 = extern_outs[2];
        auto x13913 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13914 = x13894 + x78;
        extern_args[0] = x13914;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13915 = extern_outs[0];
        auto x13916 = extern_outs[1];
        auto x13917 = extern_outs[2];
        auto x13918 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13919 = x13894 + x67;
        extern_args[0] = x13919;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13920 = extern_outs[0];
        auto x13921 = extern_outs[1];
        auto x13922 = extern_outs[2];
        auto x13923 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13924 = x13894 + x66;
        extern_args[0] = x13924;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13925 = extern_outs[0];
        auto x13926 = extern_outs[1];
        auto x13927 = extern_outs[2];
        auto x13928 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":18:27)
        auto x13929 = x13894 + x65;
        extern_args[0] = x13929;
        extern_args[1] = x96;
        extern_ramRead(ctx, cycle, "", extern_args, extern_outs);
        auto x13930 = extern_outs[0];
        auto x13931 = extern_outs[1];
        auto x13932 = extern_outs[2];
        auto x13933 = extern_outs[3];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13934 = x13800 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13935 = x13805 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13936 = x13810 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13937 = x13815 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13938 = x13820 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13939 = x13825 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13940 = x13830 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13941 = x13795 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13942 = x13795 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13943 = x13795 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13944 = x13795 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13945 = x13795 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13946 = x13795 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13947 = x13795 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13948 = x13795 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13949 = x13795 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13950 = x13795 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13951 = x13795 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13952 = x13795 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13953 = x13795 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13954 = x13795 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13955 = x13795 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13956 = x13795 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13957 = x13795 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13958 = x13795 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13959 = x13795 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13960 = x13795 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13961 = x13795 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13962 = x13795 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13963 = x13795 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13964 = x13795 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13965 = x13795 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13966 = x13795 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13967 = x13795 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13968 = x13795 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13969 = x13795 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13970 = x13795 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13971 = x13795 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13972 = x13795 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13973 = x13801 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13974 = x13806 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13975 = x13811 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13976 = x13816 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13977 = x13821 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13978 = x13826 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13979 = x13831 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13980 = x13796 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13981 = x13802 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13982 = x13807 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13983 = x13812 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13984 = x13817 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13985 = x13822 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13986 = x13827 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13987 = x13832 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13988 = x13797 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13989 = x13803 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13990 = x13808 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13991 = x13813 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13992 = x13818 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13993 = x13823 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13994 = x13828 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13995 = x13833 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13996 = x13798 * x13883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13997 = x13800 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13998 = x13800 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x13999 = x13800 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14000 = x13800 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14001 = x13800 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14002 = x13800 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14003 = x13800 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14004 = x13800 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14005 = x13800 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14006 = x13800 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14007 = x13800 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14008 = x13800 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14009 = x13800 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14010 = x13800 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14011 = x13800 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14012 = x13800 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14013 = x13800 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14014 = x13800 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14015 = x13800 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14016 = x13800 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14017 = x13800 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14018 = x13800 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14019 = x13800 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14020 = x13800 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14021 = x13800 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14022 = x13800 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14023 = x13800 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14024 = x13800 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14025 = x13800 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14026 = x13800 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14027 = x13800 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14028 = x13805 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14029 = x13805 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14030 = x13805 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14031 = x13805 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14032 = x13805 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14033 = x13805 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14034 = x13805 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14035 = x13805 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14036 = x13805 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14037 = x13805 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14038 = x13805 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14039 = x13805 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14040 = x13805 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14041 = x13805 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14042 = x13805 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14043 = x13805 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14044 = x13805 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14045 = x13805 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14046 = x13805 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14047 = x13805 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14048 = x13805 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14049 = x13805 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14050 = x13805 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14051 = x13805 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14052 = x13805 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14053 = x13805 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14054 = x13805 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14055 = x13805 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14056 = x13805 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14057 = x13805 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14058 = x13805 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14059 = x13810 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14060 = x13810 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14061 = x13810 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14062 = x13810 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14063 = x13810 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14064 = x13810 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14065 = x13810 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14066 = x13810 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14067 = x13810 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14068 = x13810 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14069 = x13810 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14070 = x13810 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14071 = x13810 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14072 = x13810 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14073 = x13810 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14074 = x13810 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14075 = x13810 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14076 = x13810 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14077 = x13810 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14078 = x13810 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14079 = x13810 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14080 = x13810 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14081 = x13810 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14082 = x13810 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14083 = x13810 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14084 = x13810 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14085 = x13810 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14086 = x13810 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14087 = x13810 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14088 = x13810 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14089 = x13810 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14090 = x13815 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14091 = x13815 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14092 = x13815 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14093 = x13815 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14094 = x13815 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14095 = x13815 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14096 = x13815 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14097 = x13815 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14098 = x13815 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14099 = x13815 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14100 = x13815 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14101 = x13815 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14102 = x13815 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14103 = x13815 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14104 = x13815 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14105 = x13815 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14106 = x13815 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14107 = x13815 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14108 = x13815 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14109 = x13815 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14110 = x13815 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14111 = x13815 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14112 = x13815 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14113 = x13815 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14114 = x13815 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14115 = x13815 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14116 = x13815 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14117 = x13815 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14118 = x13815 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14119 = x13815 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14120 = x13815 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14121 = x13820 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14122 = x13820 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14123 = x13820 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14124 = x13820 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14125 = x13820 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14126 = x13820 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14127 = x13820 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14128 = x13820 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14129 = x13820 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14130 = x13820 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14131 = x13820 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14132 = x13820 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14133 = x13820 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14134 = x13820 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14135 = x13820 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14136 = x13820 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14137 = x13820 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14138 = x13820 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14139 = x13820 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14140 = x13820 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14141 = x13820 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14142 = x13820 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14143 = x13820 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14144 = x13820 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14145 = x13820 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14146 = x13820 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14147 = x13820 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14148 = x13820 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14149 = x13820 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14150 = x13820 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14151 = x13820 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14152 = x13825 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14153 = x13825 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14154 = x13825 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14155 = x13825 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14156 = x13825 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14157 = x13825 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14158 = x13825 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14159 = x13825 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14160 = x13825 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14161 = x13825 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14162 = x13825 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14163 = x13825 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14164 = x13825 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14165 = x13825 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14166 = x13825 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14167 = x13825 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14168 = x13825 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14169 = x13825 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14170 = x13825 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14171 = x13825 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14172 = x13825 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14173 = x13825 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14174 = x13825 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14175 = x13825 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14176 = x13825 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14177 = x13825 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14178 = x13825 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14179 = x13825 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14180 = x13825 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14181 = x13825 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14182 = x13825 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14183 = x13830 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14184 = x13830 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14185 = x13830 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14186 = x13830 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14187 = x13830 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14188 = x13830 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14189 = x13830 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14190 = x13830 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14191 = x13830 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14192 = x13830 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14193 = x13830 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14194 = x13830 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14195 = x13830 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14196 = x13830 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14197 = x13830 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14198 = x13830 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14199 = x13830 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14200 = x13830 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14201 = x13830 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14202 = x13830 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14203 = x13830 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14204 = x13830 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14205 = x13830 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14206 = x13830 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14207 = x13830 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14208 = x13830 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14209 = x13830 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14210 = x13830 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14211 = x13830 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14212 = x13830 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14213 = x13830 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14214 = x13801 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14215 = x13801 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14216 = x13801 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14217 = x13801 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14218 = x13801 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14219 = x13801 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14220 = x13801 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14221 = x13801 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14222 = x13801 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14223 = x13801 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14224 = x13801 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14225 = x13801 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14226 = x13801 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14227 = x13801 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14228 = x13801 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14229 = x13801 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14230 = x13801 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14231 = x13801 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14232 = x13801 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14233 = x13801 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14234 = x13801 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14235 = x13801 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14236 = x13801 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14237 = x13801 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14238 = x13801 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14239 = x13801 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14240 = x13801 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14241 = x13801 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14242 = x13801 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14243 = x13801 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14244 = x13801 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14245 = x13806 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14246 = x13806 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14247 = x13806 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14248 = x13806 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14249 = x13806 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14250 = x13806 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14251 = x13806 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14252 = x13806 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14253 = x13806 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14254 = x13806 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14255 = x13806 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14256 = x13806 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14257 = x13806 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14258 = x13806 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14259 = x13806 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14260 = x13806 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14261 = x13806 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14262 = x13806 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14263 = x13806 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14264 = x13806 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14265 = x13806 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14266 = x13806 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14267 = x13806 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14268 = x13806 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14269 = x13806 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14270 = x13806 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14271 = x13806 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14272 = x13806 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14273 = x13806 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14274 = x13806 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14275 = x13806 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14276 = x13811 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14277 = x13811 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14278 = x13811 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14279 = x13811 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14280 = x13811 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14281 = x13811 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14282 = x13811 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14283 = x13811 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14284 = x13811 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14285 = x13811 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14286 = x13811 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14287 = x13811 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14288 = x13811 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14289 = x13811 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14290 = x13811 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14291 = x13811 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14292 = x13811 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14293 = x13811 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14294 = x13811 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14295 = x13811 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14296 = x13811 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14297 = x13811 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14298 = x13811 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14299 = x13811 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14300 = x13811 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14301 = x13811 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14302 = x13811 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14303 = x13811 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14304 = x13811 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14305 = x13811 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14306 = x13811 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14307 = x13816 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14308 = x13816 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14309 = x13816 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14310 = x13816 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14311 = x13816 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14312 = x13816 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14313 = x13816 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14314 = x13816 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14315 = x13816 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14316 = x13816 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14317 = x13816 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14318 = x13816 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14319 = x13816 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14320 = x13816 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14321 = x13816 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14322 = x13816 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14323 = x13816 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14324 = x13816 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14325 = x13816 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14326 = x13816 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14327 = x13816 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14328 = x13816 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14329 = x13816 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14330 = x13816 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14331 = x13816 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14332 = x13816 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14333 = x13816 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14334 = x13816 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14335 = x13816 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14336 = x13816 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14337 = x13816 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14338 = x13821 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14339 = x13821 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14340 = x13821 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14341 = x13821 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14342 = x13821 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14343 = x13821 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14344 = x13821 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14345 = x13821 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14346 = x13821 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14347 = x13821 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14348 = x13821 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14349 = x13821 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14350 = x13821 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14351 = x13821 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14352 = x13821 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14353 = x13821 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14354 = x13821 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14355 = x13821 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14356 = x13821 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14357 = x13821 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14358 = x13821 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14359 = x13821 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14360 = x13821 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14361 = x13821 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14362 = x13821 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14363 = x13821 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14364 = x13821 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14365 = x13821 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14366 = x13821 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14367 = x13821 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14368 = x13821 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14369 = x13826 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14370 = x13826 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14371 = x13826 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14372 = x13826 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14373 = x13826 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14374 = x13826 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14375 = x13826 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14376 = x13826 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14377 = x13826 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14378 = x13826 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14379 = x13826 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14380 = x13826 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14381 = x13826 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14382 = x13826 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14383 = x13826 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14384 = x13826 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14385 = x13826 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14386 = x13826 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14387 = x13826 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14388 = x13826 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14389 = x13826 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14390 = x13826 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14391 = x13826 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14392 = x13826 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14393 = x13826 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14394 = x13826 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14395 = x13826 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14396 = x13826 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14397 = x13826 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14398 = x13826 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14399 = x13826 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14400 = x13831 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14401 = x13831 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14402 = x13831 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14403 = x13831 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14404 = x13831 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14405 = x13831 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14406 = x13831 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14407 = x13831 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14408 = x13831 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14409 = x13831 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14410 = x13831 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14411 = x13831 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14412 = x13831 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14413 = x13831 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14414 = x13831 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14415 = x13831 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14416 = x13831 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14417 = x13831 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14418 = x13831 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14419 = x13831 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14420 = x13831 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14421 = x13831 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14422 = x13831 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14423 = x13831 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14424 = x13831 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14425 = x13831 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14426 = x13831 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14427 = x13831 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14428 = x13831 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14429 = x13831 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14430 = x13831 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14431 = x13796 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14432 = x13796 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14433 = x13796 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14434 = x13796 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14435 = x13796 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14436 = x13796 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14437 = x13796 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14438 = x13796 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14439 = x13796 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14440 = x13796 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14441 = x13796 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14442 = x13796 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14443 = x13796 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14444 = x13796 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14445 = x13796 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14446 = x13796 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14447 = x13796 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14448 = x13796 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14449 = x13796 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14450 = x13796 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14451 = x13796 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14452 = x13796 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14453 = x13796 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14454 = x13796 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14455 = x13796 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14456 = x13796 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14457 = x13796 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14458 = x13796 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14459 = x13796 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14460 = x13796 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14461 = x13796 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14462 = x13802 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14463 = x13802 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14464 = x13802 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14465 = x13802 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14466 = x13802 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14467 = x13802 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14468 = x13802 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14469 = x13802 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14470 = x13802 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14471 = x13802 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14472 = x13802 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14473 = x13802 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14474 = x13802 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14475 = x13802 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14476 = x13802 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14477 = x13802 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14478 = x13802 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14479 = x13802 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14480 = x13802 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14481 = x13802 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14482 = x13802 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14483 = x13802 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14484 = x13802 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14485 = x13802 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14486 = x13802 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14487 = x13802 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14488 = x13802 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14489 = x13802 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14490 = x13802 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14491 = x13802 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14492 = x13802 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14493 = x13807 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14494 = x13807 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14495 = x13807 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14496 = x13807 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14497 = x13807 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14498 = x13807 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14499 = x13807 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14500 = x13807 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14501 = x13807 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14502 = x13807 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14503 = x13807 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14504 = x13807 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14505 = x13807 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14506 = x13807 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14507 = x13807 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14508 = x13807 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14509 = x13807 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14510 = x13807 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14511 = x13807 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14512 = x13807 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14513 = x13807 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14514 = x13807 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14515 = x13807 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14516 = x13807 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14517 = x13807 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14518 = x13807 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14519 = x13807 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14520 = x13807 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14521 = x13807 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14522 = x13807 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14523 = x13807 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14524 = x13812 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14525 = x13812 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14526 = x13812 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14527 = x13812 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14528 = x13812 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14529 = x13812 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14530 = x13812 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14531 = x13812 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14532 = x13812 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14533 = x13812 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14534 = x13812 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14535 = x13812 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14536 = x13812 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14537 = x13812 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14538 = x13812 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14539 = x13812 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14540 = x13812 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14541 = x13812 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14542 = x13812 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14543 = x13812 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14544 = x13812 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14545 = x13812 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14546 = x13812 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14547 = x13812 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14548 = x13812 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14549 = x13812 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14550 = x13812 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14551 = x13812 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14552 = x13812 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14553 = x13812 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14554 = x13812 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14555 = x13817 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14556 = x13817 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14557 = x13817 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14558 = x13817 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14559 = x13817 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14560 = x13817 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14561 = x13817 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14562 = x13817 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14563 = x13817 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14564 = x13817 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14565 = x13817 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14566 = x13817 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14567 = x13817 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14568 = x13817 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14569 = x13817 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14570 = x13817 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14571 = x13817 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14572 = x13817 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14573 = x13817 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14574 = x13817 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14575 = x13817 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14576 = x13817 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14577 = x13817 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14578 = x13817 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14579 = x13817 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14580 = x13817 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14581 = x13817 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14582 = x13817 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14583 = x13817 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14584 = x13817 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14585 = x13817 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14586 = x13822 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14587 = x13822 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14588 = x13822 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14589 = x13822 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14590 = x13822 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14591 = x13822 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14592 = x13822 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14593 = x13822 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14594 = x13822 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14595 = x13822 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14596 = x13822 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14597 = x13822 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14598 = x13822 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14599 = x13822 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14600 = x13822 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14601 = x13822 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14602 = x13822 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14603 = x13822 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14604 = x13822 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14605 = x13822 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14606 = x13822 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14607 = x13822 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14608 = x13822 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14609 = x13822 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14610 = x13822 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14611 = x13822 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14612 = x13822 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14613 = x13822 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14614 = x13822 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14615 = x13822 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14616 = x13822 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14617 = x13827 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14618 = x13827 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14619 = x13827 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14620 = x13827 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14621 = x13827 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14622 = x13827 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14623 = x13827 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14624 = x13827 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14625 = x13827 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14626 = x13827 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14627 = x13827 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14628 = x13827 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14629 = x13827 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14630 = x13827 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14631 = x13827 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14632 = x13827 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14633 = x13827 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14634 = x13827 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14635 = x13827 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14636 = x13827 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14637 = x13827 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14638 = x13827 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14639 = x13827 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14640 = x13827 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14641 = x13827 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14642 = x13827 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14643 = x13827 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14644 = x13827 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14645 = x13827 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14646 = x13827 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14647 = x13827 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14648 = x13832 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14649 = x13832 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14650 = x13832 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14651 = x13832 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14652 = x13832 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14653 = x13832 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14654 = x13832 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14655 = x13832 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14656 = x13832 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14657 = x13832 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14658 = x13832 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14659 = x13832 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14660 = x13832 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14661 = x13832 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14662 = x13832 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14663 = x13832 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14664 = x13832 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14665 = x13832 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14666 = x13832 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14667 = x13832 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14668 = x13832 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14669 = x13832 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14670 = x13832 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14671 = x13832 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14672 = x13832 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14673 = x13832 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14674 = x13832 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14675 = x13832 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14676 = x13832 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14677 = x13832 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14678 = x13832 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14679 = x13797 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14680 = x13797 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14681 = x13797 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14682 = x13797 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14683 = x13797 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14684 = x13797 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14685 = x13797 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14686 = x13797 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14687 = x13797 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14688 = x13797 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14689 = x13797 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14690 = x13797 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14691 = x13797 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14692 = x13797 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14693 = x13797 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14694 = x13797 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14695 = x13797 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14696 = x13797 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14697 = x13797 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14698 = x13797 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14699 = x13797 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14700 = x13797 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14701 = x13797 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14702 = x13797 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14703 = x13797 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14704 = x13797 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14705 = x13797 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14706 = x13797 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14707 = x13797 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14708 = x13797 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14709 = x13797 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14710 = x13803 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14711 = x13803 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14712 = x13803 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14713 = x13803 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14714 = x13803 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14715 = x13803 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14716 = x13803 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14717 = x13803 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14718 = x13803 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14719 = x13803 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14720 = x13803 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14721 = x13803 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14722 = x13803 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14723 = x13803 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14724 = x13803 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14725 = x13803 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14726 = x13803 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14727 = x13803 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14728 = x13803 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14729 = x13803 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14730 = x13803 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14731 = x13803 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14732 = x13803 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14733 = x13803 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14734 = x13803 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14735 = x13803 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14736 = x13803 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14737 = x13803 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14738 = x13803 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14739 = x13803 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14740 = x13803 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14741 = x13808 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14742 = x13808 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14743 = x13808 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14744 = x13808 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14745 = x13808 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14746 = x13808 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14747 = x13808 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14748 = x13808 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14749 = x13808 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14750 = x13808 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14751 = x13808 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14752 = x13808 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14753 = x13808 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14754 = x13808 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14755 = x13808 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14756 = x13808 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14757 = x13808 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14758 = x13808 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14759 = x13808 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14760 = x13808 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14761 = x13808 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14762 = x13808 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14763 = x13808 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14764 = x13808 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14765 = x13808 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14766 = x13808 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14767 = x13808 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14768 = x13808 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14769 = x13808 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14770 = x13808 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14771 = x13808 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14772 = x13813 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14773 = x13813 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14774 = x13813 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14775 = x13813 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14776 = x13813 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14777 = x13813 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14778 = x13813 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14779 = x13813 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14780 = x13813 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14781 = x13813 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14782 = x13813 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14783 = x13813 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14784 = x13813 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14785 = x13813 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14786 = x13813 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14787 = x13813 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14788 = x13813 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14789 = x13813 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14790 = x13813 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14791 = x13813 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14792 = x13813 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14793 = x13813 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14794 = x13813 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14795 = x13813 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14796 = x13813 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14797 = x13813 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14798 = x13813 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14799 = x13813 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14800 = x13813 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14801 = x13813 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14802 = x13813 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14803 = x13818 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14804 = x13818 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14805 = x13818 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14806 = x13818 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14807 = x13818 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14808 = x13818 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14809 = x13818 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14810 = x13818 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14811 = x13818 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14812 = x13818 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14813 = x13818 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14814 = x13818 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14815 = x13818 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14816 = x13818 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14817 = x13818 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14818 = x13818 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14819 = x13818 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14820 = x13818 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14821 = x13818 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14822 = x13818 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14823 = x13818 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14824 = x13818 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14825 = x13818 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14826 = x13818 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14827 = x13818 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14828 = x13818 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14829 = x13818 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14830 = x13818 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14831 = x13818 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14832 = x13818 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14833 = x13818 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14834 = x13823 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14835 = x13823 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14836 = x13823 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14837 = x13823 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14838 = x13823 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14839 = x13823 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14840 = x13823 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14841 = x13823 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14842 = x13823 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14843 = x13823 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14844 = x13823 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14845 = x13823 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14846 = x13823 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14847 = x13823 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14848 = x13823 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14849 = x13823 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14850 = x13823 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14851 = x13823 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14852 = x13823 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14853 = x13823 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14854 = x13823 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14855 = x13823 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14856 = x13823 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14857 = x13823 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14858 = x13823 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14859 = x13823 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14860 = x13823 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14861 = x13823 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14862 = x13823 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14863 = x13823 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14864 = x13823 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14865 = x13828 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14866 = x13828 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14867 = x13828 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14868 = x13828 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14869 = x13828 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14870 = x13828 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14871 = x13828 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14872 = x13828 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14873 = x13828 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14874 = x13828 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14875 = x13828 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14876 = x13828 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14877 = x13828 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14878 = x13828 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14879 = x13828 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14880 = x13828 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14881 = x13828 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14882 = x13828 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14883 = x13828 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14884 = x13828 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14885 = x13828 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14886 = x13828 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14887 = x13828 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14888 = x13828 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14889 = x13828 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14890 = x13828 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14891 = x13828 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14892 = x13828 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14893 = x13828 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14894 = x13828 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14895 = x13828 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14896 = x13833 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14897 = x13833 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14898 = x13833 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14899 = x13833 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14900 = x13833 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14901 = x13833 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14902 = x13833 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14903 = x13833 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14904 = x13833 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14905 = x13833 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14906 = x13833 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14907 = x13833 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14908 = x13833 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14909 = x13833 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14910 = x13833 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14911 = x13833 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14912 = x13833 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14913 = x13833 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14914 = x13833 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14915 = x13833 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14916 = x13833 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14917 = x13833 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14918 = x13833 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14919 = x13833 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14920 = x13833 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14921 = x13833 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14922 = x13833 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14923 = x13833 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14924 = x13833 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14925 = x13833 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14926 = x13833 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14927 = x13798 * x13850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14928 = x13798 * x13855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14929 = x13798 * x13860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14930 = x13798 * x13865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14931 = x13798 * x13870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14932 = x13798 * x13875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14933 = x13798 * x13880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14934 = x13798 * x13845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14935 = x13798 * x13851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14936 = x13798 * x13856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14937 = x13798 * x13861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14938 = x13798 * x13866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14939 = x13798 * x13871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14940 = x13798 * x13876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14941 = x13798 * x13881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14942 = x13798 * x13846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14943 = x13798 * x13852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14944 = x13798 * x13857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14945 = x13798 * x13862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14946 = x13798 * x13867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14947 = x13798 * x13872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14948 = x13798 * x13877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14949 = x13798 * x13882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14950 = x13798 * x13847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14951 = x13798 * x13853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14952 = x13798 * x13858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14953 = x13798 * x13863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14954 = x13798 * x13868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14955 = x13798 * x13873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14956 = x13798 * x13878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x14957 = x13798 * x13848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14958 = x13934 + x14236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14959 = x13935 + x14267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14960 = x13936 + x14298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14961 = x13937 + x14329;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14962 = x13938 + x14360;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14963 = x13939 + x14391;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14964 = x13940 + x14422;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14965 = x13941 + x14461;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14966 = x13942 + x14455;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14967 = x13943 + x14456;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14968 = x13944 + x14457;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14969 = x13945 + x14458;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14970 = x13946 + x14459;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14971 = x13947 + x14460;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x14972 = x13948 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14973 = x13949 + x14431;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14974 = x13950 + x14432;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14975 = x13951 + x14433;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14976 = x13952 + x14434;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14977 = x13953 + x14435;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14978 = x13954 + x14436;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14979 = x13955 + x14437;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14980 = x13956 + x14438;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14981 = x13957 + x14439;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14982 = x13958 + x14440;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14983 = x13959 + x14441;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14984 = x13960 + x14442;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14985 = x13961 + x14443;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14986 = x13962 + x14444;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14987 = x13963 + x14445;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14988 = x13964 + x14446;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14989 = x13965 + x14447;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14990 = x13966 + x14448;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14991 = x13967 + x14449;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14992 = x13968 + x14450;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14993 = x13969 + x14451;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14994 = x13970 + x14452;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14995 = x13971 + x14453;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14996 = x13972 + x14454;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14997 = x13973 + x14484;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14998 = x13974 + x14515;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x14999 = x13975 + x14546;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15000 = x13976 + x14577;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15001 = x13977 + x14608;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15002 = x13978 + x14639;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15003 = x13979 + x14670;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15004 = x13980 + x14701;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15005 = x13981 + x14732;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15006 = x13982 + x14763;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15007 = x13983 + x14794;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15008 = x13984 + x14825;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15009 = x13985 + x14856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15010 = x13986 + x14887;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15011 = x13987 + x14918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15012 = x13988 + x14949;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15013 = x13989 + x14050;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15014 = x13990 + x14081;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15015 = x13991 + x14112;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15016 = x13992 + x14143;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15017 = x13993 + x14174;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15018 = x13994 + x14205;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15019 = x13996 + x14019;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15020 = Fp(x14972.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15021 = x14972 - x15020;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15022 = x14958 + x14476;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15023 = x14959 + x14507;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15024 = x14960 + x14538;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15025 = x14961 + x14569;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15026 = x14962 + x14600;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15027 = x14963 + x14631;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15028 = x14964 + x14662;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15029 = x14965 + x14702;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15030 = x14966 + x14695;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15031 = x14967 + x14696;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15032 = x14968 + x14697;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15033 = x14969 + x14698;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15034 = x14970 + x14699;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15035 = x14971 + x14700;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15036 = x14973 + x14709;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15037 = x14974 + x14703;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15038 = x14975 + x14704;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15039 = x14976 + x14705;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15040 = x14977 + x14706;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15041 = x14978 + x14707;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15042 = x14979 + x14708;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15043 = x14981 + x14679;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15044 = x14982 + x14680;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15045 = x14983 + x14681;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15046 = x14984 + x14682;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15047 = x14985 + x14683;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15048 = x14986 + x14684;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15049 = x14987 + x14685;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15050 = x14988 + x14686;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15051 = x14989 + x14687;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15052 = x14990 + x14688;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15053 = x14991 + x14689;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15054 = x14992 + x14690;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15055 = x14993 + x14691;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15056 = x14994 + x14692;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15057 = x14995 + x14693;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15058 = x14996 + x14694;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15059 = x14997 + x14724;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15060 = x14998 + x14755;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15061 = x14999 + x14786;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15062 = x15000 + x14817;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15063 = x15001 + x14848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15064 = x15002 + x14879;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15065 = x15003 + x14910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15066 = x15004 + x14941;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15067 = x15005 + x14042;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15068 = x15006 + x14073;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15069 = x15007 + x14104;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15070 = x15008 + x14135;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15071 = x15009 + x14166;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15072 = x15010 + x14197;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15073 = x15012 + x14011;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15074 = x15013 + x14259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15075 = x15014 + x14290;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15076 = x15015 + x14321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15077 = x15016 + x14352;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15078 = x15017 + x14383;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15079 = x15018 + x14414;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15080 = x15019 + x14228;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15081 = x15021 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15082 = x15081 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15083 = x15022 + x14716;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15084 = x15023 + x14747;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15085 = x15024 + x14778;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15086 = x15025 + x14809;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15087 = x15026 + x14840;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15088 = x15027 + x14871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15089 = x15028 + x14902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15090 = x15029 + x14942;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15091 = x15030 + x14935;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15092 = x15031 + x14936;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15093 = x15032 + x14937;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15094 = x15033 + x14938;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15095 = x15034 + x14939;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15096 = x15035 + x14940;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15097 = x15036 + x14950;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15098 = x15037 + x14943;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15099 = x15038 + x14944;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15100 = x15039 + x14945;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15101 = x15040 + x14946;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15102 = x15041 + x14947;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15103 = x15042 + x14948;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15104 = x15043 + x14957;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15105 = x15044 + x14951;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15106 = x15045 + x14952;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15107 = x15046 + x14953;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15108 = x15047 + x14954;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15109 = x15048 + x14955;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15110 = x15049 + x14956;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15111 = x15051 + x14927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15112 = x15052 + x14928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15113 = x15053 + x14929;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15114 = x15054 + x14930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15115 = x15055 + x14931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15116 = x15056 + x14932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15117 = x15057 + x14933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15118 = x15058 + x14934;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15119 = x15059 + x14034;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15120 = x15060 + x14065;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15121 = x15061 + x14096;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15122 = x15062 + x14127;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15123 = x15063 + x14158;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15124 = x15064 + x14189;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15125 = x15066 + x14003;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15126 = x15067 + x14251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15127 = x15068 + x14282;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15128 = x15069 + x14313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15129 = x15070 + x14344;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15130 = x15071 + x14375;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15131 = x15072 + x14406;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15132 = x15073 + x14220;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15133 = x15074 + x14499;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15134 = x15075 + x14530;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15135 = x15076 + x14561;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15136 = x15077 + x14592;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15137 = x15078 + x14623;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15138 = x15079 + x14654;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15139 = x15080 + x14468;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15140 = x14980 + x15082;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15141 = x15083 + x14057;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15142 = x15084 + x14088;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15143 = x15085 + x14119;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15144 = x15086 + x14150;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15145 = x15087 + x14181;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15146 = x15088 + x14212;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15147 = x15090 + x14004;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15148 = x15091 + x13997;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15149 = x15092 + x13998;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15150 = x15093 + x13999;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15151 = x15094 + x14000;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15152 = x15095 + x14001;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15153 = x15096 + x14002;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15154 = x15097 + x14012;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15155 = x15098 + x14005;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15156 = x15099 + x14006;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15157 = x15100 + x14007;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15158 = x15101 + x14008;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15159 = x15102 + x14009;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15160 = x15103 + x14010;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15161 = x15104 + x14020;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15162 = x15105 + x14013;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15163 = x15106 + x14014;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15164 = x15107 + x14015;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15165 = x15108 + x14016;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15166 = x15109 + x14017;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15167 = x15110 + x14018;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15168 = x15111 + x14027;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15169 = x15112 + x14021;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15170 = x15113 + x14022;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15171 = x15114 + x14023;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15172 = x15115 + x14024;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15173 = x15116 + x14025;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15174 = x15117 + x14026;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15175 = x15119 + x14274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15176 = x15120 + x14305;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15177 = x15121 + x14336;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15178 = x15122 + x14367;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15179 = x15123 + x14398;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15180 = x15124 + x14429;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15181 = x15125 + x14243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15182 = x15126 + x14522;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15183 = x15127 + x14553;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15184 = x15128 + x14584;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15185 = x15129 + x14615;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15186 = x15130 + x14646;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15187 = x15131 + x14677;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15188 = x15132 + x14491;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15189 = x15133 + x14770;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15190 = x15134 + x14801;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15191 = x15135 + x14832;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15192 = x15136 + x14863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15193 = x15137 + x14894;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15194 = x15138 + x14925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15195 = x15139 + x14739;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15196 = x15140 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15197 = Fp(x15196.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15198 = x15196 - x15197;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15199 = x15141 + x14266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15200 = x15142 + x14297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15201 = x15143 + x14328;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15202 = x15144 + x14359;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15203 = x15145 + x14390;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15204 = x15146 + x14421;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15205 = x15148 + x14244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15206 = x15149 + x14238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15207 = x15150 + x14239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15208 = x15151 + x14240;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15209 = x15152 + x14241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15210 = x15153 + x14242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15211 = x15154 + x14221;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15212 = x15155 + x14214;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15213 = x15156 + x14215;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15214 = x15157 + x14216;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15215 = x15158 + x14217;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15216 = x15159 + x14218;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15217 = x15160 + x14219;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15218 = x15161 + x14229;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15219 = x15162 + x14222;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15220 = x15163 + x14223;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15221 = x15164 + x14224;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15222 = x15165 + x14225;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15223 = x15166 + x14226;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15224 = x15167 + x14227;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15225 = x15168 + x14237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15226 = x15169 + x14230;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15227 = x15170 + x14231;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15228 = x15171 + x14232;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15229 = x15172 + x14233;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15230 = x15173 + x14234;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15231 = x15174 + x14235;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15232 = x15175 + x14514;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15233 = x15176 + x14545;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15234 = x15177 + x14576;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15235 = x15178 + x14607;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15236 = x15179 + x14638;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15237 = x15180 + x14669;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15238 = x15181 + x14483;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15239 = x15182 + x14762;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15240 = x15183 + x14793;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15241 = x15184 + x14824;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15242 = x15185 + x14855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15243 = x15186 + x14886;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15244 = x15187 + x14917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15245 = x15188 + x14731;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15246 = x15189 + x14080;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15247 = x15190 + x14111;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15248 = x15191 + x14142;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15249 = x15192 + x14173;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15250 = x15193 + x14204;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15251 = x15195 + x14049;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15252 = x15198 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15253 = x15252 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15254 = x15199 + x14506;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15255 = x15200 + x14537;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15256 = x15201 + x14568;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15257 = x15202 + x14599;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15258 = x15203 + x14630;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15259 = x15204 + x14661;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15260 = x15205 + x14485;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15261 = x15206 + x14478;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15262 = x15207 + x14479;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15263 = x15208 + x14480;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15264 = x15209 + x14481;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15265 = x15210 + x14482;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15266 = x15212 + x14492;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15267 = x15213 + x14486;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15268 = x15214 + x14487;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15269 = x15215 + x14488;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15270 = x15216 + x14489;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15271 = x15217 + x14490;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15272 = x15218 + x14469;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15273 = x15219 + x14462;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15274 = x15220 + x14463;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15275 = x15221 + x14464;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15276 = x15222 + x14465;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15277 = x15223 + x14466;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15278 = x15224 + x14467;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15279 = x15225 + x14477;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15280 = x15226 + x14470;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15281 = x15227 + x14471;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15282 = x15228 + x14472;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15283 = x15229 + x14473;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15284 = x15230 + x14474;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15285 = x15231 + x14475;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15286 = x15232 + x14754;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15287 = x15233 + x14785;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15288 = x15234 + x14816;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15289 = x15235 + x14847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15290 = x15236 + x14878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15291 = x15237 + x14909;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15292 = x15238 + x14723;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15293 = x15239 + x14072;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15294 = x15240 + x14103;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15295 = x15241 + x14134;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15296 = x15242 + x14165;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15297 = x15243 + x14196;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15298 = x15245 + x14041;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15299 = x15246 + x14289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15300 = x15247 + x14320;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15301 = x15248 + x14351;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15302 = x15249 + x14382;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15303 = x15250 + x14413;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15304 = x15251 + x14258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15305 = x15050 + x15253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15306 = x15254 + x14746;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15307 = x15255 + x14777;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15308 = x15256 + x14808;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15309 = x15257 + x14839;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15310 = x15258 + x14870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15311 = x15259 + x14901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15312 = x15260 + x14725;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15313 = x15261 + x14718;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15314 = x15262 + x14719;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15315 = x15263 + x14720;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15316 = x15264 + x14721;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15317 = x15265 + x14722;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15318 = x15266 + x14733;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15319 = x15267 + x14726;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15320 = x15268 + x14727;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15321 = x15269 + x14728;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15322 = x15270 + x14729;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15323 = x15271 + x14730;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15324 = x15273 + x14740;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15325 = x15274 + x14734;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15326 = x15275 + x14735;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15327 = x15276 + x14736;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15328 = x15277 + x14737;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15329 = x15278 + x14738;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15330 = x15279 + x14717;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15331 = x15280 + x14710;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15332 = x15281 + x14711;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15333 = x15282 + x14712;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15334 = x15283 + x14713;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15335 = x15284 + x14714;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15336 = x15285 + x14715;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15337 = x15286 + x14064;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15338 = x15287 + x14095;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15339 = x15288 + x14126;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15340 = x15289 + x14157;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15341 = x15290 + x14188;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15342 = x15292 + x14033;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15343 = x15293 + x14281;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15344 = x15294 + x14312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15345 = x15295 + x14343;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15346 = x15296 + x14374;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15347 = x15297 + x14405;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15348 = x15298 + x14250;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15349 = x15299 + x14529;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15350 = x15300 + x14560;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15351 = x15301 + x14591;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15352 = x15302 + x14622;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15353 = x15303 + x14653;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15354 = x15304 + x14498;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15355 = x15305 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15356 = Fp(x15355.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15357 = x15355 - x15356;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15358 = x15306 + x14087;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15359 = x15307 + x14118;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15360 = x15308 + x14149;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15361 = x15309 + x14180;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15362 = x15310 + x14211;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15363 = x15312 + x14035;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15364 = x15313 + x14028;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15365 = x15314 + x14029;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15366 = x15315 + x14030;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15367 = x15316 + x14031;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15368 = x15317 + x14032;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15369 = x15318 + x14043;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15370 = x15319 + x14036;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15371 = x15320 + x14037;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15372 = x15321 + x14038;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15373 = x15322 + x14039;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15374 = x15323 + x14040;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15375 = x15324 + x14051;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15376 = x15325 + x14044;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15377 = x15326 + x14045;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15378 = x15327 + x14046;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15379 = x15328 + x14047;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15380 = x15329 + x14048;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15381 = x15331 + x14058;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15382 = x15332 + x14052;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15383 = x15333 + x14053;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15384 = x15334 + x14054;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15385 = x15335 + x14055;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15386 = x15336 + x14056;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15387 = x15337 + x14304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15388 = x15338 + x14335;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15389 = x15339 + x14366;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15390 = x15340 + x14397;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15391 = x15341 + x14428;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15392 = x15342 + x14273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15393 = x15343 + x14552;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15394 = x15344 + x14583;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15395 = x15345 + x14614;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15396 = x15346 + x14645;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15397 = x15347 + x14676;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15398 = x15348 + x14521;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15399 = x15349 + x14800;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15400 = x15350 + x14831;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15401 = x15351 + x14862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15402 = x15352 + x14893;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15403 = x15353 + x14924;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15404 = x15354 + x14769;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15405 = x15357 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15406 = x15405 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15407 = x15358 + x14296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15408 = x15359 + x14327;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15409 = x15360 + x14358;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15410 = x15361 + x14389;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15411 = x15362 + x14420;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15412 = x15364 + x14275;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15413 = x15365 + x14269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15414 = x15366 + x14270;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15415 = x15367 + x14271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15416 = x15368 + x14272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15417 = x15369 + x14252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15418 = x15370 + x14245;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15419 = x15371 + x14246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15420 = x15372 + x14247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15421 = x15373 + x14248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15422 = x15374 + x14249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15423 = x15375 + x14260;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15424 = x15376 + x14253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15425 = x15377 + x14254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15426 = x15378 + x14255;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15427 = x15379 + x14256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15428 = x15380 + x14257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15429 = x15381 + x14268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15430 = x15382 + x14261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15431 = x15383 + x14262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15432 = x15384 + x14263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15433 = x15385 + x14264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15434 = x15386 + x14265;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15435 = x15387 + x14544;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15436 = x15388 + x14575;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15437 = x15389 + x14606;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15438 = x15390 + x14637;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15439 = x15391 + x14668;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15440 = x15392 + x14513;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15441 = x15393 + x14792;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15442 = x15394 + x14823;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15443 = x15395 + x14854;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15444 = x15396 + x14885;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15445 = x15397 + x14916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15446 = x15398 + x14761;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15447 = x15399 + x14110;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15448 = x15400 + x14141;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15449 = x15401 + x14172;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15450 = x15402 + x14203;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15451 = x15404 + x14079;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15452 = x15118 + x15406;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15453 = x15407 + x14536;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15454 = x15408 + x14567;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15455 = x15409 + x14598;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15456 = x15410 + x14629;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15457 = x15411 + x14660;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15458 = x15412 + x14516;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15459 = x15413 + x14509;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15460 = x15414 + x14510;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15461 = x15415 + x14511;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15462 = x15416 + x14512;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15463 = x15418 + x14523;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15464 = x15419 + x14517;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15465 = x15420 + x14518;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15466 = x15421 + x14519;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15467 = x15422 + x14520;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15468 = x15423 + x14500;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15469 = x15424 + x14493;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15470 = x15425 + x14494;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15471 = x15426 + x14495;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15472 = x15427 + x14496;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15473 = x15428 + x14497;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15474 = x15429 + x14508;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15475 = x15430 + x14501;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15476 = x15431 + x14502;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15477 = x15432 + x14503;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15478 = x15433 + x14504;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15479 = x15434 + x14505;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15480 = x15435 + x14784;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15481 = x15436 + x14815;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15482 = x15437 + x14846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15483 = x15438 + x14877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15484 = x15439 + x14908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15485 = x15440 + x14753;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15486 = x15441 + x14102;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15487 = x15442 + x14133;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15488 = x15443 + x14164;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15489 = x15444 + x14195;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15490 = x15446 + x14071;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15491 = x15447 + x14319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15492 = x15448 + x14350;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15493 = x15449 + x14381;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15494 = x15450 + x14412;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15495 = x15451 + x14288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15496 = x15452 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15497 = Fp(x15496.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15498 = x15496 - x15497;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15499 = x15453 + x14776;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15500 = x15454 + x14807;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15501 = x15455 + x14838;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15502 = x15456 + x14869;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15503 = x15457 + x14900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15504 = x15458 + x14756;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15505 = x15459 + x14749;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15506 = x15460 + x14750;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15507 = x15461 + x14751;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15508 = x15462 + x14752;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15509 = x15463 + x14764;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15510 = x15464 + x14757;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15511 = x15465 + x14758;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15512 = x15466 + x14759;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15513 = x15467 + x14760;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15514 = x15469 + x14771;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15515 = x15470 + x14765;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15516 = x15471 + x14766;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15517 = x15472 + x14767;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15518 = x15473 + x14768;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15519 = x15474 + x14748;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15520 = x15475 + x14741;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15521 = x15476 + x14742;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15522 = x15477 + x14743;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15523 = x15478 + x14744;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15524 = x15479 + x14745;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15525 = x15480 + x14094;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15526 = x15481 + x14125;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15527 = x15482 + x14156;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15528 = x15483 + x14187;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15529 = x15485 + x14063;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15530 = x15486 + x14311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15531 = x15487 + x14342;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15532 = x15488 + x14373;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15533 = x15489 + x14404;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15534 = x15490 + x14280;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15535 = x15491 + x14559;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15536 = x15492 + x14590;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15537 = x15493 + x14621;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15538 = x15494 + x14652;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15539 = x15495 + x14528;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15540 = x15498 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15541 = x15540 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15542 = x15499 + x14117;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15543 = x15500 + x14148;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15544 = x15501 + x14179;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15545 = x15502 + x14210;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15546 = x15504 + x14066;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15547 = x15505 + x14059;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15548 = x15506 + x14060;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15549 = x15507 + x14061;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15550 = x15508 + x14062;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15551 = x15509 + x14074;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15552 = x15510 + x14067;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15553 = x15511 + x14068;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15554 = x15512 + x14069;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15555 = x15513 + x14070;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15556 = x15514 + x14082;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15557 = x15515 + x14075;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15558 = x15516 + x14076;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15559 = x15517 + x14077;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15560 = x15518 + x14078;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15561 = x15520 + x14089;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15562 = x15521 + x14083;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15563 = x15522 + x14084;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15564 = x15523 + x14085;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15565 = x15524 + x14086;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15566 = x15525 + x14334;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15567 = x15526 + x14365;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15568 = x15527 + x14396;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15569 = x15528 + x14427;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15570 = x15529 + x14303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15571 = x15530 + x14582;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15572 = x15531 + x14613;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15573 = x15532 + x14644;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15574 = x15533 + x14675;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15575 = x15534 + x14551;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15576 = x15535 + x14830;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15577 = x15536 + x14861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15578 = x15537 + x14892;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15579 = x15538 + x14923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15580 = x15539 + x14799;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15581 = x15147 + x15541;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15582 = x15542 + x14326;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15583 = x15543 + x14357;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15584 = x15544 + x14388;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15585 = x15545 + x14419;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15586 = x15547 + x14306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15587 = x15548 + x14300;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15588 = x15549 + x14301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15589 = x15550 + x14302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15590 = x15551 + x14283;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15591 = x15552 + x14276;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15592 = x15553 + x14277;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15593 = x15554 + x14278;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15594 = x15555 + x14279;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15595 = x15556 + x14291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15596 = x15557 + x14284;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15597 = x15558 + x14285;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15598 = x15559 + x14286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15599 = x15560 + x14287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15600 = x15561 + x14299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15601 = x15562 + x14292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15602 = x15563 + x14293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15603 = x15564 + x14294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15604 = x15565 + x14295;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15605 = x15566 + x14574;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15606 = x15567 + x14605;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15607 = x15568 + x14636;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15608 = x15569 + x14667;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15609 = x15570 + x14543;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15610 = x15571 + x14822;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15611 = x15572 + x14853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15612 = x15573 + x14884;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15613 = x15574 + x14915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15614 = x15575 + x14791;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15615 = x15576 + x14140;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15616 = x15577 + x14171;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15617 = x15578 + x14202;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15618 = x15580 + x14109;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15619 = x15581 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15620 = Fp(x15619.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15621 = x15619 - x15620;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15622 = x15582 + x14566;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15623 = x15583 + x14597;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15624 = x15584 + x14628;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15625 = x15585 + x14659;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15626 = x15586 + x14547;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15627 = x15587 + x14540;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15628 = x15588 + x14541;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15629 = x15589 + x14542;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15630 = x15591 + x14554;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15631 = x15592 + x14548;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15632 = x15593 + x14549;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15633 = x15594 + x14550;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15634 = x15595 + x14531;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15635 = x15596 + x14524;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15636 = x15597 + x14525;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15637 = x15598 + x14526;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15638 = x15599 + x14527;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15639 = x15600 + x14539;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15640 = x15601 + x14532;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15641 = x15602 + x14533;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15642 = x15603 + x14534;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15643 = x15604 + x14535;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15644 = x15605 + x14814;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15645 = x15606 + x14845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15646 = x15607 + x14876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15647 = x15608 + x14907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15648 = x15609 + x14783;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15649 = x15610 + x14132;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15650 = x15611 + x14163;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15651 = x15612 + x14194;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15652 = x15614 + x14101;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15653 = x15615 + x14349;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15654 = x15616 + x14380;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15655 = x15617 + x14411;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15656 = x15618 + x14318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15657 = x15621 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15658 = x15657 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15659 = x15622 + x14806;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15660 = x15623 + x14837;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15661 = x15624 + x14868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15662 = x15625 + x14899;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15663 = x15626 + x14787;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15664 = x15627 + x14780;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15665 = x15628 + x14781;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15666 = x15629 + x14782;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15667 = x15630 + x14795;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15668 = x15631 + x14788;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15669 = x15632 + x14789;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15670 = x15633 + x14790;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15671 = x15635 + x14802;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15672 = x15636 + x14796;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15673 = x15637 + x14797;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15674 = x15638 + x14798;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15675 = x15639 + x14779;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15676 = x15640 + x14772;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15677 = x15641 + x14773;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15678 = x15642 + x14774;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15679 = x15643 + x14775;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15680 = x15644 + x14124;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15681 = x15645 + x14155;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15682 = x15646 + x14186;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15683 = x15648 + x14093;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15684 = x15649 + x14341;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15685 = x15650 + x14372;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15686 = x15651 + x14403;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15687 = x15652 + x14310;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15688 = x15653 + x14589;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15689 = x15654 + x14620;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15690 = x15655 + x14651;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15691 = x15656 + x14558;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15692 = x15211 + x15658;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15693 = x15659 + x14147;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15694 = x15660 + x14178;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15695 = x15661 + x14209;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15696 = x15663 + x14097;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15697 = x15664 + x14090;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15698 = x15665 + x14091;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15699 = x15666 + x14092;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15700 = x15667 + x14105;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15701 = x15668 + x14098;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15702 = x15669 + x14099;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15703 = x15670 + x14100;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15704 = x15671 + x14113;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15705 = x15672 + x14106;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15706 = x15673 + x14107;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15707 = x15674 + x14108;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15708 = x15676 + x14120;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15709 = x15677 + x14114;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15710 = x15678 + x14115;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15711 = x15679 + x14116;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15712 = x15680 + x14364;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15713 = x15681 + x14395;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15714 = x15682 + x14426;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15715 = x15683 + x14333;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15716 = x15684 + x14612;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15717 = x15685 + x14643;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15718 = x15686 + x14674;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15719 = x15687 + x14581;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15720 = x15688 + x14860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15721 = x15689 + x14891;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15722 = x15690 + x14922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15723 = x15691 + x14829;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15724 = x15692 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15725 = Fp(x15724.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15726 = x15724 - x15725;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15727 = x15693 + x14356;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15728 = x15694 + x14387;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15729 = x15695 + x14418;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15730 = x15697 + x14337;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15731 = x15698 + x14331;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15732 = x15699 + x14332;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15733 = x15700 + x14314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15734 = x15701 + x14307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15735 = x15702 + x14308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15736 = x15703 + x14309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15737 = x15704 + x14322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15738 = x15705 + x14315;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15739 = x15706 + x14316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15740 = x15707 + x14317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15741 = x15708 + x14330;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15742 = x15709 + x14323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15743 = x15710 + x14324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15744 = x15711 + x14325;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15745 = x15712 + x14604;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15746 = x15713 + x14635;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15747 = x15714 + x14666;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15748 = x15715 + x14573;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15749 = x15716 + x14852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15750 = x15717 + x14883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15751 = x15718 + x14914;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15752 = x15719 + x14821;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15753 = x15720 + x14170;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15754 = x15721 + x14201;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15755 = x15723 + x14139;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15756 = x15726 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15757 = x15756 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15758 = x15727 + x14596;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15759 = x15728 + x14627;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15760 = x15729 + x14658;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15761 = x15730 + x14578;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15762 = x15731 + x14571;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15763 = x15732 + x14572;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15764 = x15734 + x14585;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15765 = x15735 + x14579;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15766 = x15736 + x14580;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15767 = x15737 + x14562;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15768 = x15738 + x14555;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15769 = x15739 + x14556;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15770 = x15740 + x14557;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15771 = x15741 + x14570;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15772 = x15742 + x14563;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15773 = x15743 + x14564;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15774 = x15744 + x14565;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15775 = x15745 + x14844;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15776 = x15746 + x14875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15777 = x15747 + x14906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15778 = x15748 + x14813;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15779 = x15749 + x14162;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15780 = x15750 + x14193;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15781 = x15752 + x14131;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15782 = x15753 + x14379;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15783 = x15754 + x14410;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15784 = x15755 + x14348;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15785 = x15272 + x15757;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15786 = x15758 + x14836;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15787 = x15759 + x14867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15788 = x15760 + x14898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15789 = x15761 + x14818;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15790 = x15762 + x14811;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15791 = x15763 + x14812;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15792 = x15764 + x14826;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15793 = x15765 + x14819;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15794 = x15766 + x14820;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15795 = x15768 + x14833;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15796 = x15769 + x14827;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15797 = x15770 + x14828;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15798 = x15771 + x14810;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15799 = x15772 + x14803;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15800 = x15773 + x14804;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15801 = x15774 + x14805;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15802 = x15775 + x14154;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15803 = x15776 + x14185;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15804 = x15778 + x14123;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15805 = x15779 + x14371;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15806 = x15780 + x14402;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15807 = x15781 + x14340;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15808 = x15782 + x14619;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15809 = x15783 + x14650;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15810 = x15784 + x14588;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15811 = x15785 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15812 = Fp(x15811.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15813 = x15811 - x15812;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15814 = x15786 + x14177;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15815 = x15787 + x14208;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15816 = x15789 + x14128;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15817 = x15790 + x14121;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15818 = x15791 + x14122;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15819 = x15792 + x14136;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15820 = x15793 + x14129;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15821 = x15794 + x14130;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15822 = x15795 + x14144;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15823 = x15796 + x14137;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15824 = x15797 + x14138;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15825 = x15799 + x14151;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15826 = x15800 + x14145;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15827 = x15801 + x14146;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15828 = x15802 + x14394;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15829 = x15803 + x14425;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15830 = x15804 + x14363;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15831 = x15805 + x14642;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15832 = x15806 + x14673;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15833 = x15807 + x14611;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15834 = x15808 + x14890;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15835 = x15809 + x14921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15836 = x15810 + x14859;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15837 = x15813 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15838 = x15837 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15839 = x15814 + x14386;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15840 = x15815 + x14417;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15841 = x15817 + x14368;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15842 = x15818 + x14362;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15843 = x15819 + x14345;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15844 = x15820 + x14338;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15845 = x15821 + x14339;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15846 = x15822 + x14353;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15847 = x15823 + x14346;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15848 = x15824 + x14347;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15849 = x15825 + x14361;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15850 = x15826 + x14354;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15851 = x15827 + x14355;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15852 = x15828 + x14634;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15853 = x15829 + x14665;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15854 = x15830 + x14603;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15855 = x15831 + x14882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15856 = x15832 + x14913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15857 = x15833 + x14851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15858 = x15834 + x14200;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15859 = x15836 + x14169;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15860 = x15330 + x15838;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15861 = x15839 + x14626;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15862 = x15840 + x14657;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15863 = x15841 + x14609;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15864 = x15842 + x14602;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15865 = x15844 + x14616;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15866 = x15845 + x14610;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15867 = x15846 + x14593;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15868 = x15847 + x14586;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15869 = x15848 + x14587;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15870 = x15849 + x14601;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15871 = x15850 + x14594;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15872 = x15851 + x14595;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15873 = x15852 + x14874;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15874 = x15853 + x14905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15875 = x15854 + x14843;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15876 = x15855 + x14192;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15877 = x15857 + x14161;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15878 = x15858 + x14409;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15879 = x15859 + x14378;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15880 = x15860 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15881 = Fp(x15880.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15882 = x15880 - x15881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15883 = x15861 + x14866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15884 = x15862 + x14897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15885 = x15863 + x14849;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15886 = x15864 + x14842;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15887 = x15865 + x14857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15888 = x15866 + x14850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15889 = x15868 + x14864;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15890 = x15869 + x14858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15891 = x15870 + x14841;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15892 = x15871 + x14834;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15893 = x15872 + x14835;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15894 = x15873 + x14184;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15895 = x15875 + x14153;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15896 = x15876 + x14401;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15897 = x15877 + x14370;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15898 = x15878 + x14649;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15899 = x15879 + x14618;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15900 = x15882 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15901 = x15900 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15902 = x15883 + x14207;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15903 = x15885 + x14159;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15904 = x15886 + x14152;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15905 = x15887 + x14167;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15906 = x15888 + x14160;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15907 = x15889 + x14175;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15908 = x15890 + x14168;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15909 = x15892 + x14182;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15910 = x15893 + x14176;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15911 = x15894 + x14424;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15912 = x15895 + x14393;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15913 = x15896 + x14672;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15914 = x15897 + x14641;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15915 = x15898 + x14920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15916 = x15899 + x14889;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15917 = x15363 + x15901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15918 = x15902 + x14416;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15919 = x15904 + x14399;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15920 = x15905 + x14376;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15921 = x15906 + x14369;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15922 = x15907 + x14384;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15923 = x15908 + x14377;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15924 = x15909 + x14392;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15925 = x15910 + x14385;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15926 = x15911 + x14664;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15927 = x15912 + x14633;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15928 = x15913 + x14912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15929 = x15914 + x14881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15930 = x15916 + x14199;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15931 = x15917 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15932 = Fp(x15931.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15933 = x15931 - x15932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15934 = x15918 + x14656;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15935 = x15919 + x14640;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15936 = x15921 + x14647;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15937 = x15922 + x14624;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15938 = x15923 + x14617;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15939 = x15924 + x14632;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15940 = x15925 + x14625;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15941 = x15926 + x14904;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15942 = x15927 + x14873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15943 = x15929 + x14191;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15944 = x15930 + x14408;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15945 = x15933 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15946 = x15945 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15947 = x15934 + x14896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15948 = x15935 + x14880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15949 = x15936 + x14888;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15950 = x15938 + x14895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15951 = x15939 + x14872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15952 = x15940 + x14865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15953 = x15942 + x14183;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15954 = x15943 + x14400;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15955 = x15944 + x14648;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15956 = x15417 + x15946;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15957 = x15948 + x14190;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15958 = x15949 + x14198;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15959 = x15950 + x14206;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15960 = x15952 + x14213;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15961 = x15953 + x14430;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15962 = x15954 + x14678;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15963 = x15955 + x14926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15964 = x15956 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15965 = Fp(x15964.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15966 = x15964 - x15965;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15967 = x15958 + x14407;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15968 = x15959 + x14415;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15969 = x15960 + x14423;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15970 = x15961 + x14671;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15971 = x15962 + x14919;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15972 = x15966 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15973 = x15972 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15974 = x15968 + x14655;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15975 = x15969 + x14663;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15976 = x15970 + x14911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15977 = x15468 + x15973;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x15978 = x15975 + x14903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15979 = x15977 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15980 = Fp(x15979.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15981 = x15979 - x15980;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15982 = x15981 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15983 = x15982 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15984 = x15519 + x15983;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15985 = x15984 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15986 = Fp(x15985.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15987 = x15985 - x15986;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15988 = x15987 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15989 = x15988 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15990 = x15546 + x15989;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15991 = x15990 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15992 = Fp(x15991.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15993 = x15991 - x15992;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x15994 = x15993 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x15995 = x15994 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15996 = x15590 + x15995;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x15997 = x15996 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x15998 = Fp(x15997.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x15999 = x15997 - x15998;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16000 = x15999 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16001 = x16000 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16002 = x15634 + x16001;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16003 = x16002 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16004 = Fp(x16003.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16005 = x16003 - x16004;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16006 = x16005 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16007 = x16006 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16008 = x15675 + x16007;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16009 = x16008 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16010 = Fp(x16009.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16011 = x16009 - x16010;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16012 = x16011 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16013 = x16012 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16014 = x15696 + x16013;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16015 = x16014 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16016 = Fp(x16015.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16017 = x16015 - x16016;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16018 = x16017 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16019 = x16018 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16020 = x15733 + x16019;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16021 = x16020 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16022 = Fp(x16021.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16023 = x16021 - x16022;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16024 = x16023 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16025 = x16024 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16026 = x15767 + x16025;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16027 = x16026 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16028 = Fp(x16027.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16029 = x16027 - x16028;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16030 = x16029 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16031 = x16030 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16032 = x15798 + x16031;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16033 = x16032 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16034 = Fp(x16033.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16035 = x16033 - x16034;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16036 = x16035 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16037 = x16036 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16038 = x15816 + x16037;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16039 = x16038 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16040 = Fp(x16039.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16041 = x16039 - x16040;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16042 = x16041 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16043 = x16042 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16044 = x15843 + x16043;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16045 = x16044 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16046 = Fp(x16045.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16047 = x16045 - x16046;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16048 = x16047 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16049 = x16048 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16050 = x15867 + x16049;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16051 = x16050 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16052 = Fp(x16051.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16053 = x16051 - x16052;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16054 = x16053 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16055 = x16054 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16056 = x15891 + x16055;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16057 = x16056 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16058 = Fp(x16057.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16059 = x16057 - x16058;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16060 = x16059 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16061 = x16060 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16062 = x15903 + x16061;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16063 = x16062 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16064 = Fp(x16063.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16065 = x16063 - x16064;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16066 = x16065 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16067 = x16066 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16068 = x15920 + x16067;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16069 = x16068 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16070 = Fp(x16069.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16071 = x16069 - x16070;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16072 = x16071 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16073 = x16072 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16074 = x15937 + x16073;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16075 = x16074 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16076 = Fp(x16075.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16077 = x16075 - x16076;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16078 = x16077 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16079 = x16078 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16080 = x15951 + x16079;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16081 = x16080 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16082 = Fp(x16081.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16083 = x16081 - x16082;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16084 = x16083 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16085 = x16084 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16086 = x15957 + x16085;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16087 = x16086 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16088 = Fp(x16087.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16089 = x16087 - x16088;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16090 = x16089 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16091 = x16090 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16092 = x15967 + x16091;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16093 = x16092 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16094 = Fp(x16093.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16095 = x16093 - x16094;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16096 = x16095 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16097 = x16096 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16098 = x15974 + x16097;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16099 = x16098 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16100 = Fp(x16099.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16101 = x16099 - x16100;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16102 = x16101 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16103 = x16102 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16104 = x15978 + x16103;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16105 = x16104 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16106 = Fp(x16105.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16107 = x16105 - x16106;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16108 = x16107 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16109 = x16108 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16110 = x15976 + x16109;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16111 = x16110 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16112 = Fp(x16111.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16113 = x16111 - x16112;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16114 = x16113 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16115 = x16114 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16116 = x15971 + x16115;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16117 = x16116 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16118 = Fp(x16117.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16119 = x16117 - x16118;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16120 = x16119 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16121 = x16120 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16122 = x15963 + x16121;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16123 = x16122 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16124 = Fp(x16123.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16125 = x16123 - x16124;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16126 = x16125 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16127 = x16126 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16128 = x15947 + x16127;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16129 = x16128 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16130 = Fp(x16129.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16131 = x16129 - x16130;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16132 = x16131 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16133 = x16132 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16134 = x15941 + x16133;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16135 = x16134 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16136 = Fp(x16135.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16137 = x16135 - x16136;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16138 = x16137 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16139 = x16138 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16140 = x15928 + x16139;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16141 = x16140 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16142 = Fp(x16141.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16143 = x16141 - x16142;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16144 = x16143 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16145 = x16144 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16146 = x15915 + x16145;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16147 = x16146 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16148 = Fp(x16147.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16149 = x16147 - x16148;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16150 = x16149 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16151 = x16150 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16152 = x15884 + x16151;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16153 = x16152 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16154 = Fp(x16153.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16155 = x16153 - x16154;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16156 = x16155 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16157 = x16156 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16158 = x15874 + x16157;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16159 = x16158 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16160 = Fp(x16159.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16161 = x16159 - x16160;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16162 = x16161 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16163 = x16162 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16164 = x15856 + x16163;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16165 = x16164 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16166 = Fp(x16165.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16167 = x16165 - x16166;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16168 = x16167 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16169 = x16168 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16170 = x15835 + x16169;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16171 = x16170 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16172 = Fp(x16171.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16173 = x16171 - x16172;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16174 = x16173 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16175 = x16174 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16176 = x15788 + x16175;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16177 = x16176 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16178 = Fp(x16177.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16179 = x16177 - x16178;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16180 = x16179 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16181 = x16180 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16182 = x15777 + x16181;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16183 = x16182 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16184 = Fp(x16183.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16185 = x16183 - x16184;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16186 = x16185 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16187 = x16186 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16188 = x15751 + x16187;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16189 = x16188 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16190 = Fp(x16189.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16191 = x16189 - x16190;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16192 = x16191 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16193 = x16192 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16194 = x15722 + x16193;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16195 = x16194 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16196 = Fp(x16195.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16197 = x16195 - x16196;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16198 = x16197 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16199 = x16198 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16200 = x15662 + x16199;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16201 = x16200 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16202 = Fp(x16201.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16203 = x16201 - x16202;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16204 = x16203 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16205 = x16204 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16206 = x15647 + x16205;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16207 = x16206 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16208 = Fp(x16207.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16209 = x16207 - x16208;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16210 = x16209 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16211 = x16210 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16212 = x15613 + x16211;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16213 = x16212 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16214 = Fp(x16213.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16215 = x16213 - x16214;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16216 = x16215 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16217 = x16216 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16218 = x15579 + x16217;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16219 = x16218 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16220 = Fp(x16219.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16221 = x16219 - x16220;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16222 = x16221 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16223 = x16222 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16224 = x15503 + x16223;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16225 = x16224 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16226 = Fp(x16225.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16227 = x16225 - x16226;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16228 = x16227 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16229 = x16228 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16230 = x15484 + x16229;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16231 = x16230 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16232 = Fp(x16231.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16233 = x16231 - x16232;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16234 = x16233 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16235 = x16234 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16236 = x15445 + x16235;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16237 = x16236 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16238 = Fp(x16237.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16239 = x16237 - x16238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16240 = x16239 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16241 = x16240 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16242 = x15403 + x16241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16243 = x16242 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16244 = Fp(x16243.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16245 = x16243 - x16244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16246 = x16245 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16247 = x16246 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16248 = x15311 + x16247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16249 = x16248 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16250 = Fp(x16249.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16251 = x16249 - x16250;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16252 = x16251 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16253 = x16252 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16254 = x15291 + x16253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16255 = x16254 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16256 = Fp(x16255.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16257 = x16255 - x16256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16258 = x16257 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16259 = x16258 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16260 = x15244 + x16259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16261 = x16260 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16262 = Fp(x16261.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16263 = x16261 - x16262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16264 = x16263 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16265 = x16264 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16266 = x15194 + x16265;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16267 = x16266 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16268 = Fp(x16267.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16269 = x16267 - x16268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16270 = x16269 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16271 = x16270 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16272 = x15089 + x16271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16273 = x16272 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16274 = Fp(x16273.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16275 = x16273 - x16274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16276 = x16275 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16277 = x16276 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16278 = x15065 + x16277;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16279 = x16278 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16280 = Fp(x16279.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16281 = x16279 - x16280;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16282 = x16281 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16283 = x16282 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16284 = x15011 + x16283;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16285 = x16284 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16286 = Fp(x16285.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16287 = x16285 - x16286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16288 = x16287 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16289 = x16288 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16290 = x13995 + x16289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x16291 = x16290 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x16292 = Fp(x16291.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x16293 = x16291 - x16292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x16294 = x16293 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x16295 = x16294 - x11;
        extern_args[0] = x15020;
        extern_args[1] = x15197;
        extern_args[2] = x15356;
        extern_args[3] = x15497;
        extern_args[4] = x15620;
        extern_args[5] = x15725;
        extern_args[6] = x15812;
        extern_args[7] = x15881;
        extern_args[8] = x15932;
        extern_args[9] = x15965;
        extern_args[10] = x15980;
        extern_args[11] = x15986;
        extern_args[12] = x15992;
        extern_args[13] = x15998;
        extern_args[14] = x16004;
        extern_args[15] = x16010;
        extern_args[16] = x16016;
        extern_args[17] = x16022;
        extern_args[18] = x16028;
        extern_args[19] = x16034;
        extern_args[20] = x16040;
        extern_args[21] = x16046;
        extern_args[22] = x16052;
        extern_args[23] = x16058;
        extern_args[24] = x16064;
        extern_args[25] = x16070;
        extern_args[26] = x16076;
        extern_args[27] = x16082;
        extern_args[28] = x16088;
        extern_args[29] = x16094;
        extern_args[30] = x16100;
        extern_args[31] = x16106;
        extern_args[32] = x16112;
        extern_args[33] = x16118;
        extern_args[34] = x16124;
        extern_args[35] = x16130;
        extern_args[36] = x16136;
        extern_args[37] = x16142;
        extern_args[38] = x16148;
        extern_args[39] = x16154;
        extern_args[40] = x16160;
        extern_args[41] = x16166;
        extern_args[42] = x16172;
        extern_args[43] = x16178;
        extern_args[44] = x16184;
        extern_args[45] = x16190;
        extern_args[46] = x16196;
        extern_args[47] = x16202;
        extern_args[48] = x16208;
        extern_args[49] = x16214;
        extern_args[50] = x16220;
        extern_args[51] = x16226;
        extern_args[52] = x16232;
        extern_args[53] = x16238;
        extern_args[54] = x16244;
        extern_args[55] = x16250;
        extern_args[56] = x16256;
        extern_args[57] = x16262;
        extern_args[58] = x16268;
        extern_args[59] = x16274;
        extern_args[60] = x16280;
        extern_args[61] = x16286;
        extern_args[62] = x16292;
        extern_args[63] = x16295;
        extern_args[64] = x13895;
        extern_args[65] = x13896;
        extern_args[66] = x13897;
        extern_args[67] = x13898;
        extern_args[68] = x13900;
        extern_args[69] = x13901;
        extern_args[70] = x13902;
        extern_args[71] = x13903;
        extern_args[72] = x13905;
        extern_args[73] = x13906;
        extern_args[74] = x13907;
        extern_args[75] = x13908;
        extern_args[76] = x13910;
        extern_args[77] = x13911;
        extern_args[78] = x13912;
        extern_args[79] = x13913;
        extern_args[80] = x13915;
        extern_args[81] = x13916;
        extern_args[82] = x13917;
        extern_args[83] = x13918;
        extern_args[84] = x13920;
        extern_args[85] = x13921;
        extern_args[86] = x13922;
        extern_args[87] = x13923;
        extern_args[88] = x13925;
        extern_args[89] = x13926;
        extern_args[90] = x13927;
        extern_args[91] = x13928;
        extern_args[92] = x13930;
        extern_args[93] = x13931;
        extern_args[94] = x13932;
        extern_args[95] = x13933;
        extern_bigintQuotient(ctx, cycle, "", extern_args, extern_outs);
        auto x16296 = extern_outs[0];
        auto x16297 = extern_outs[1];
        auto x16298 = extern_outs[2];
        auto x16299 = extern_outs[3];
        auto x16300 = extern_outs[4];
        auto x16301 = extern_outs[5];
        auto x16302 = extern_outs[6];
        auto x16303 = extern_outs[7];
        auto x16304 = extern_outs[8];
        auto x16305 = extern_outs[9];
        auto x16306 = extern_outs[10];
        auto x16307 = extern_outs[11];
        auto x16308 = extern_outs[12];
        auto x16309 = extern_outs[13];
        auto x16310 = extern_outs[14];
        auto x16311 = extern_outs[15];
        auto x16312 = extern_outs[16];
        auto x16313 = extern_outs[17];
        auto x16314 = extern_outs[18];
        auto x16315 = extern_outs[19];
        auto x16316 = extern_outs[20];
        auto x16317 = extern_outs[21];
        auto x16318 = extern_outs[22];
        auto x16319 = extern_outs[23];
        auto x16320 = extern_outs[24];
        auto x16321 = extern_outs[25];
        auto x16322 = extern_outs[26];
        auto x16323 = extern_outs[27];
        auto x16324 = extern_outs[28];
        auto x16325 = extern_outs[29];
        auto x16326 = extern_outs[30];
        auto x16327 = extern_outs[31];
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16328 = x16296 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16329 = x16296 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16330 = x16296 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16331 = x16296 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16332 = x16296 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16333 = x16296 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16334 = x16296 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16335 = x16296 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16336 = x16296 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16337 = x16296 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16338 = x16296 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16339 = x16296 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16340 = x16296 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16341 = x16296 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16342 = x16296 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16343 = x16296 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16344 = x16296 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16345 = x16296 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16346 = x16296 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16347 = x16296 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16348 = x16296 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16349 = x16296 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16350 = x16296 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16351 = x16296 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16352 = x16296 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16353 = x16296 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16354 = x16296 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16355 = x16296 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16356 = x16296 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16357 = x16296 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16358 = x16296 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16359 = x16296 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16360 = x16297 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16361 = x16298 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16362 = x16299 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16363 = x16300 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16364 = x16301 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16365 = x16302 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16366 = x16303 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16367 = x16304 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16368 = x16305 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16369 = x16306 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16370 = x16307 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16371 = x16308 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16372 = x16309 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16373 = x16310 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16374 = x16311 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16375 = x16312 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16376 = x16313 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16377 = x16314 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16378 = x16315 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16379 = x16316 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16380 = x16317 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16381 = x16318 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16382 = x16319 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16383 = x16320 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16384 = x16321 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16385 = x16322 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16386 = x16323 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16387 = x16324 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16388 = x16325 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16389 = x16326 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16390 = x16327 * x13933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16391 = x16297 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16392 = x16297 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16393 = x16297 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16394 = x16297 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16395 = x16297 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16396 = x16297 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16397 = x16297 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16398 = x16297 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16399 = x16297 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16400 = x16297 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16401 = x16297 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16402 = x16297 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16403 = x16297 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16404 = x16297 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16405 = x16297 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16406 = x16297 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16407 = x16297 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16408 = x16297 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16409 = x16297 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16410 = x16297 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16411 = x16297 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16412 = x16297 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16413 = x16297 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16414 = x16297 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16415 = x16297 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16416 = x16297 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16417 = x16297 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16418 = x16297 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16419 = x16297 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16420 = x16297 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16421 = x16297 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16422 = x16298 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16423 = x16298 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16424 = x16298 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16425 = x16298 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16426 = x16298 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16427 = x16298 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16428 = x16298 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16429 = x16298 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16430 = x16298 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16431 = x16298 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16432 = x16298 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16433 = x16298 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16434 = x16298 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16435 = x16298 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16436 = x16298 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16437 = x16298 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16438 = x16298 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16439 = x16298 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16440 = x16298 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16441 = x16298 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16442 = x16298 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16443 = x16298 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16444 = x16298 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16445 = x16298 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16446 = x16298 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16447 = x16298 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16448 = x16298 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16449 = x16298 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16450 = x16298 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16451 = x16298 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16452 = x16298 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16453 = x16299 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16454 = x16299 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16455 = x16299 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16456 = x16299 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16457 = x16299 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16458 = x16299 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16459 = x16299 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16460 = x16299 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16461 = x16299 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16462 = x16299 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16463 = x16299 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16464 = x16299 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16465 = x16299 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16466 = x16299 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16467 = x16299 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16468 = x16299 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16469 = x16299 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16470 = x16299 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16471 = x16299 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16472 = x16299 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16473 = x16299 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16474 = x16299 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16475 = x16299 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16476 = x16299 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16477 = x16299 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16478 = x16299 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16479 = x16299 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16480 = x16299 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16481 = x16299 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16482 = x16299 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16483 = x16299 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16484 = x16300 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16485 = x16300 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16486 = x16300 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16487 = x16300 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16488 = x16300 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16489 = x16300 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16490 = x16300 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16491 = x16300 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16492 = x16300 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16493 = x16300 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16494 = x16300 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16495 = x16300 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16496 = x16300 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16497 = x16300 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16498 = x16300 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16499 = x16300 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16500 = x16300 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16501 = x16300 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16502 = x16300 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16503 = x16300 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16504 = x16300 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16505 = x16300 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16506 = x16300 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16507 = x16300 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16508 = x16300 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16509 = x16300 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16510 = x16300 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16511 = x16300 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16512 = x16300 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16513 = x16300 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16514 = x16300 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16515 = x16301 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16516 = x16301 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16517 = x16301 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16518 = x16301 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16519 = x16301 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16520 = x16301 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16521 = x16301 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16522 = x16301 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16523 = x16301 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16524 = x16301 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16525 = x16301 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16526 = x16301 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16527 = x16301 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16528 = x16301 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16529 = x16301 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16530 = x16301 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16531 = x16301 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16532 = x16301 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16533 = x16301 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16534 = x16301 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16535 = x16301 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16536 = x16301 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16537 = x16301 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16538 = x16301 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16539 = x16301 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16540 = x16301 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16541 = x16301 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16542 = x16301 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16543 = x16301 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16544 = x16301 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16545 = x16301 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16546 = x16302 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16547 = x16302 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16548 = x16302 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16549 = x16302 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16550 = x16302 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16551 = x16302 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16552 = x16302 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16553 = x16302 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16554 = x16302 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16555 = x16302 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16556 = x16302 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16557 = x16302 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16558 = x16302 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16559 = x16302 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16560 = x16302 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16561 = x16302 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16562 = x16302 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16563 = x16302 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16564 = x16302 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16565 = x16302 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16566 = x16302 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16567 = x16302 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16568 = x16302 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16569 = x16302 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16570 = x16302 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16571 = x16302 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16572 = x16302 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16573 = x16302 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16574 = x16302 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16575 = x16302 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16576 = x16302 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16577 = x16303 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16578 = x16303 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16579 = x16303 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16580 = x16303 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16581 = x16303 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16582 = x16303 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16583 = x16303 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16584 = x16303 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16585 = x16303 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16586 = x16303 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16587 = x16303 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16588 = x16303 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16589 = x16303 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16590 = x16303 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16591 = x16303 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16592 = x16303 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16593 = x16303 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16594 = x16303 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16595 = x16303 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16596 = x16303 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16597 = x16303 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16598 = x16303 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16599 = x16303 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16600 = x16303 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16601 = x16303 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16602 = x16303 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16603 = x16303 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16604 = x16303 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16605 = x16303 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16606 = x16303 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16607 = x16303 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16608 = x16304 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16609 = x16304 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16610 = x16304 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16611 = x16304 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16612 = x16304 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16613 = x16304 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16614 = x16304 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16615 = x16304 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16616 = x16304 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16617 = x16304 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16618 = x16304 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16619 = x16304 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16620 = x16304 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16621 = x16304 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16622 = x16304 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16623 = x16304 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16624 = x16304 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16625 = x16304 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16626 = x16304 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16627 = x16304 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16628 = x16304 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16629 = x16304 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16630 = x16304 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16631 = x16304 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16632 = x16304 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16633 = x16304 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16634 = x16304 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16635 = x16304 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16636 = x16304 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16637 = x16304 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16638 = x16304 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16639 = x16305 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16640 = x16305 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16641 = x16305 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16642 = x16305 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16643 = x16305 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16644 = x16305 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16645 = x16305 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16646 = x16305 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16647 = x16305 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16648 = x16305 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16649 = x16305 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16650 = x16305 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16651 = x16305 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16652 = x16305 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16653 = x16305 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16654 = x16305 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16655 = x16305 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16656 = x16305 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16657 = x16305 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16658 = x16305 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16659 = x16305 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16660 = x16305 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16661 = x16305 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16662 = x16305 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16663 = x16305 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16664 = x16305 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16665 = x16305 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16666 = x16305 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16667 = x16305 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16668 = x16305 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16669 = x16305 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16670 = x16306 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16671 = x16306 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16672 = x16306 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16673 = x16306 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16674 = x16306 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16675 = x16306 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16676 = x16306 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16677 = x16306 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16678 = x16306 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16679 = x16306 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16680 = x16306 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16681 = x16306 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16682 = x16306 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16683 = x16306 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16684 = x16306 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16685 = x16306 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16686 = x16306 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16687 = x16306 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16688 = x16306 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16689 = x16306 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16690 = x16306 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16691 = x16306 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16692 = x16306 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16693 = x16306 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16694 = x16306 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16695 = x16306 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16696 = x16306 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16697 = x16306 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16698 = x16306 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16699 = x16306 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16700 = x16306 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16701 = x16307 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16702 = x16307 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16703 = x16307 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16704 = x16307 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16705 = x16307 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16706 = x16307 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16707 = x16307 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16708 = x16307 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16709 = x16307 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16710 = x16307 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16711 = x16307 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16712 = x16307 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16713 = x16307 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16714 = x16307 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16715 = x16307 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16716 = x16307 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16717 = x16307 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16718 = x16307 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16719 = x16307 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16720 = x16307 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16721 = x16307 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16722 = x16307 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16723 = x16307 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16724 = x16307 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16725 = x16307 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16726 = x16307 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16727 = x16307 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16728 = x16307 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16729 = x16307 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16730 = x16307 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16731 = x16307 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16732 = x16308 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16733 = x16308 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16734 = x16308 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16735 = x16308 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16736 = x16308 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16737 = x16308 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16738 = x16308 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16739 = x16308 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16740 = x16308 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16741 = x16308 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16742 = x16308 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16743 = x16308 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16744 = x16308 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16745 = x16308 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16746 = x16308 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16747 = x16308 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16748 = x16308 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16749 = x16308 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16750 = x16308 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16751 = x16308 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16752 = x16308 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16753 = x16308 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16754 = x16308 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16755 = x16308 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16756 = x16308 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16757 = x16308 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16758 = x16308 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16759 = x16308 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16760 = x16308 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16761 = x16308 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16762 = x16308 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16763 = x16309 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16764 = x16309 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16765 = x16309 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16766 = x16309 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16767 = x16309 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16768 = x16309 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16769 = x16309 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16770 = x16309 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16771 = x16309 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16772 = x16309 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16773 = x16309 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16774 = x16309 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16775 = x16309 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16776 = x16309 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16777 = x16309 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16778 = x16309 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16779 = x16309 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16780 = x16309 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16781 = x16309 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16782 = x16309 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16783 = x16309 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16784 = x16309 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16785 = x16309 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16786 = x16309 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16787 = x16309 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16788 = x16309 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16789 = x16309 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16790 = x16309 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16791 = x16309 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16792 = x16309 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16793 = x16309 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16794 = x16310 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16795 = x16310 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16796 = x16310 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16797 = x16310 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16798 = x16310 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16799 = x16310 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16800 = x16310 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16801 = x16310 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16802 = x16310 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16803 = x16310 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16804 = x16310 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16805 = x16310 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16806 = x16310 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16807 = x16310 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16808 = x16310 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16809 = x16310 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16810 = x16310 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16811 = x16310 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16812 = x16310 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16813 = x16310 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16814 = x16310 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16815 = x16310 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16816 = x16310 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16817 = x16310 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16818 = x16310 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16819 = x16310 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16820 = x16310 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16821 = x16310 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16822 = x16310 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16823 = x16310 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16824 = x16310 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16825 = x16311 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16826 = x16311 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16827 = x16311 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16828 = x16311 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16829 = x16311 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16830 = x16311 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16831 = x16311 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16832 = x16311 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16833 = x16311 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16834 = x16311 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16835 = x16311 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16836 = x16311 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16837 = x16311 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16838 = x16311 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16839 = x16311 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16840 = x16311 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16841 = x16311 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16842 = x16311 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16843 = x16311 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16844 = x16311 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16845 = x16311 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16846 = x16311 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16847 = x16311 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16848 = x16311 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16849 = x16311 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16850 = x16311 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16851 = x16311 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16852 = x16311 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16853 = x16311 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16854 = x16311 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16855 = x16311 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16856 = x16312 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16857 = x16312 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16858 = x16312 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16859 = x16312 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16860 = x16312 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16861 = x16312 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16862 = x16312 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16863 = x16312 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16864 = x16312 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16865 = x16312 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16866 = x16312 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16867 = x16312 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16868 = x16312 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16869 = x16312 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16870 = x16312 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16871 = x16312 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16872 = x16312 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16873 = x16312 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16874 = x16312 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16875 = x16312 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16876 = x16312 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16877 = x16312 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16878 = x16312 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16879 = x16312 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16880 = x16312 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16881 = x16312 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16882 = x16312 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16883 = x16312 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16884 = x16312 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16885 = x16312 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16886 = x16312 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16887 = x16313 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16888 = x16313 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16889 = x16313 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16890 = x16313 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16891 = x16313 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16892 = x16313 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16893 = x16313 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16894 = x16313 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16895 = x16313 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16896 = x16313 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16897 = x16313 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16898 = x16313 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16899 = x16313 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16900 = x16313 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16901 = x16313 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16902 = x16313 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16903 = x16313 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16904 = x16313 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16905 = x16313 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16906 = x16313 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16907 = x16313 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16908 = x16313 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16909 = x16313 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16910 = x16313 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16911 = x16313 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16912 = x16313 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16913 = x16313 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16914 = x16313 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16915 = x16313 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16916 = x16313 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16917 = x16313 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16918 = x16314 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16919 = x16314 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16920 = x16314 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16921 = x16314 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16922 = x16314 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16923 = x16314 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16924 = x16314 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16925 = x16314 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16926 = x16314 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16927 = x16314 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16928 = x16314 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16929 = x16314 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16930 = x16314 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16931 = x16314 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16932 = x16314 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16933 = x16314 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16934 = x16314 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16935 = x16314 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16936 = x16314 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16937 = x16314 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16938 = x16314 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16939 = x16314 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16940 = x16314 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16941 = x16314 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16942 = x16314 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16943 = x16314 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16944 = x16314 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16945 = x16314 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16946 = x16314 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16947 = x16314 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16948 = x16314 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16949 = x16315 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16950 = x16315 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16951 = x16315 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16952 = x16315 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16953 = x16315 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16954 = x16315 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16955 = x16315 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16956 = x16315 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16957 = x16315 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16958 = x16315 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16959 = x16315 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16960 = x16315 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16961 = x16315 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16962 = x16315 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16963 = x16315 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16964 = x16315 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16965 = x16315 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16966 = x16315 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16967 = x16315 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16968 = x16315 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16969 = x16315 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16970 = x16315 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16971 = x16315 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16972 = x16315 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16973 = x16315 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16974 = x16315 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16975 = x16315 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16976 = x16315 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16977 = x16315 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16978 = x16315 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16979 = x16315 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16980 = x16316 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16981 = x16316 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16982 = x16316 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16983 = x16316 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16984 = x16316 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16985 = x16316 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16986 = x16316 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16987 = x16316 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16988 = x16316 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16989 = x16316 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16990 = x16316 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16991 = x16316 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16992 = x16316 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16993 = x16316 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16994 = x16316 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16995 = x16316 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16996 = x16316 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16997 = x16316 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16998 = x16316 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x16999 = x16316 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17000 = x16316 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17001 = x16316 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17002 = x16316 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17003 = x16316 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17004 = x16316 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17005 = x16316 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17006 = x16316 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17007 = x16316 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17008 = x16316 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17009 = x16316 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17010 = x16316 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17011 = x16317 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17012 = x16317 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17013 = x16317 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17014 = x16317 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17015 = x16317 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17016 = x16317 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17017 = x16317 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17018 = x16317 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17019 = x16317 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17020 = x16317 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17021 = x16317 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17022 = x16317 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17023 = x16317 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17024 = x16317 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17025 = x16317 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17026 = x16317 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17027 = x16317 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17028 = x16317 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17029 = x16317 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17030 = x16317 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17031 = x16317 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17032 = x16317 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17033 = x16317 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17034 = x16317 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17035 = x16317 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17036 = x16317 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17037 = x16317 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17038 = x16317 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17039 = x16317 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17040 = x16317 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17041 = x16317 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17042 = x16318 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17043 = x16318 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17044 = x16318 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17045 = x16318 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17046 = x16318 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17047 = x16318 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17048 = x16318 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17049 = x16318 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17050 = x16318 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17051 = x16318 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17052 = x16318 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17053 = x16318 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17054 = x16318 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17055 = x16318 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17056 = x16318 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17057 = x16318 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17058 = x16318 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17059 = x16318 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17060 = x16318 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17061 = x16318 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17062 = x16318 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17063 = x16318 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17064 = x16318 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17065 = x16318 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17066 = x16318 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17067 = x16318 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17068 = x16318 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17069 = x16318 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17070 = x16318 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17071 = x16318 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17072 = x16318 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17073 = x16319 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17074 = x16319 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17075 = x16319 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17076 = x16319 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17077 = x16319 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17078 = x16319 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17079 = x16319 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17080 = x16319 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17081 = x16319 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17082 = x16319 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17083 = x16319 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17084 = x16319 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17085 = x16319 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17086 = x16319 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17087 = x16319 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17088 = x16319 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17089 = x16319 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17090 = x16319 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17091 = x16319 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17092 = x16319 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17093 = x16319 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17094 = x16319 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17095 = x16319 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17096 = x16319 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17097 = x16319 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17098 = x16319 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17099 = x16319 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17100 = x16319 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17101 = x16319 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17102 = x16319 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17103 = x16319 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17104 = x16320 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17105 = x16320 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17106 = x16320 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17107 = x16320 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17108 = x16320 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17109 = x16320 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17110 = x16320 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17111 = x16320 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17112 = x16320 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17113 = x16320 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17114 = x16320 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17115 = x16320 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17116 = x16320 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17117 = x16320 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17118 = x16320 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17119 = x16320 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17120 = x16320 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17121 = x16320 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17122 = x16320 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17123 = x16320 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17124 = x16320 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17125 = x16320 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17126 = x16320 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17127 = x16320 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17128 = x16320 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17129 = x16320 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17130 = x16320 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17131 = x16320 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17132 = x16320 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17133 = x16320 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17134 = x16320 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17135 = x16321 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17136 = x16321 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17137 = x16321 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17138 = x16321 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17139 = x16321 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17140 = x16321 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17141 = x16321 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17142 = x16321 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17143 = x16321 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17144 = x16321 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17145 = x16321 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17146 = x16321 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17147 = x16321 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17148 = x16321 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17149 = x16321 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17150 = x16321 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17151 = x16321 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17152 = x16321 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17153 = x16321 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17154 = x16321 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17155 = x16321 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17156 = x16321 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17157 = x16321 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17158 = x16321 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17159 = x16321 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17160 = x16321 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17161 = x16321 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17162 = x16321 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17163 = x16321 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17164 = x16321 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17165 = x16321 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17166 = x16322 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17167 = x16322 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17168 = x16322 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17169 = x16322 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17170 = x16322 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17171 = x16322 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17172 = x16322 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17173 = x16322 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17174 = x16322 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17175 = x16322 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17176 = x16322 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17177 = x16322 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17178 = x16322 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17179 = x16322 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17180 = x16322 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17181 = x16322 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17182 = x16322 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17183 = x16322 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17184 = x16322 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17185 = x16322 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17186 = x16322 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17187 = x16322 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17188 = x16322 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17189 = x16322 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17190 = x16322 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17191 = x16322 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17192 = x16322 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17193 = x16322 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17194 = x16322 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17195 = x16322 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17196 = x16322 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17197 = x16323 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17198 = x16323 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17199 = x16323 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17200 = x16323 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17201 = x16323 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17202 = x16323 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17203 = x16323 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17204 = x16323 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17205 = x16323 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17206 = x16323 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17207 = x16323 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17208 = x16323 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17209 = x16323 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17210 = x16323 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17211 = x16323 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17212 = x16323 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17213 = x16323 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17214 = x16323 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17215 = x16323 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17216 = x16323 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17217 = x16323 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17218 = x16323 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17219 = x16323 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17220 = x16323 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17221 = x16323 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17222 = x16323 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17223 = x16323 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17224 = x16323 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17225 = x16323 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17226 = x16323 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17227 = x16323 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17228 = x16324 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17229 = x16324 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17230 = x16324 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17231 = x16324 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17232 = x16324 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17233 = x16324 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17234 = x16324 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17235 = x16324 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17236 = x16324 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17237 = x16324 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17238 = x16324 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17239 = x16324 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17240 = x16324 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17241 = x16324 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17242 = x16324 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17243 = x16324 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17244 = x16324 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17245 = x16324 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17246 = x16324 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17247 = x16324 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17248 = x16324 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17249 = x16324 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17250 = x16324 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17251 = x16324 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17252 = x16324 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17253 = x16324 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17254 = x16324 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17255 = x16324 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17256 = x16324 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17257 = x16324 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17258 = x16324 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17259 = x16325 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17260 = x16325 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17261 = x16325 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17262 = x16325 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17263 = x16325 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17264 = x16325 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17265 = x16325 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17266 = x16325 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17267 = x16325 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17268 = x16325 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17269 = x16325 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17270 = x16325 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17271 = x16325 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17272 = x16325 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17273 = x16325 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17274 = x16325 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17275 = x16325 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17276 = x16325 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17277 = x16325 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17278 = x16325 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17279 = x16325 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17280 = x16325 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17281 = x16325 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17282 = x16325 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17283 = x16325 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17284 = x16325 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17285 = x16325 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17286 = x16325 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17287 = x16325 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17288 = x16325 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17289 = x16325 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17290 = x16326 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17291 = x16326 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17292 = x16326 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17293 = x16326 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17294 = x16326 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17295 = x16326 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17296 = x16326 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17297 = x16326 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17298 = x16326 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17299 = x16326 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17300 = x16326 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17301 = x16326 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17302 = x16326 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17303 = x16326 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17304 = x16326 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17305 = x16326 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17306 = x16326 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17307 = x16326 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17308 = x16326 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17309 = x16326 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17310 = x16326 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17311 = x16326 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17312 = x16326 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17313 = x16326 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17314 = x16326 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17315 = x16326 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17316 = x16326 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17317 = x16326 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17318 = x16326 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17319 = x16326 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17320 = x16326 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17321 = x16327 * x13895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17322 = x16327 * x13900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17323 = x16327 * x13905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17324 = x16327 * x13910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17325 = x16327 * x13915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17326 = x16327 * x13920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17327 = x16327 * x13925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17328 = x16327 * x13930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17329 = x16327 * x13896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17330 = x16327 * x13901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17331 = x16327 * x13906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17332 = x16327 * x13911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17333 = x16327 * x13916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17334 = x16327 * x13921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17335 = x16327 * x13926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17336 = x16327 * x13931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17337 = x16327 * x13897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17338 = x16327 * x13902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17339 = x16327 * x13907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17340 = x16327 * x13912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17341 = x16327 * x13917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17342 = x16327 * x13922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17343 = x16327 * x13927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17344 = x16327 * x13932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17345 = x16327 * x13898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17346 = x16327 * x13903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17347 = x16327 * x13908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17348 = x16327 * x13913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17349 = x16327 * x13918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17350 = x16327 * x13923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:21)
        auto x17351 = x16327 * x13928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17352 = x16336 + x16391;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17353 = x16389 + x17344;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17354 = x14980 - x17352;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17355 = x15011 - x17353;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17356 = x13948 - x16328;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17357 = x13995 - x16390;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17358 = x16329 + x16415;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17359 = x16330 + x16416;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17360 = x16331 + x16417;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17361 = x16332 + x16418;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17362 = x16333 + x16419;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17363 = x16334 + x16420;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17364 = x16335 + x16421;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17365 = x16337 + x16392;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17366 = x16338 + x16393;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17367 = x16339 + x16394;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17368 = x16340 + x16395;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17369 = x16341 + x16396;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17370 = x16342 + x16397;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17371 = x16343 + x16398;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17372 = x16344 + x16399;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17373 = x16345 + x16400;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17374 = x16346 + x16401;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17375 = x16347 + x16402;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17376 = x16348 + x16403;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17377 = x16349 + x16404;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17378 = x16350 + x16405;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17379 = x16351 + x16406;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17380 = x16352 + x16407;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17381 = x16353 + x16408;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17382 = x16354 + x16409;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17383 = x16355 + x16410;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17384 = x16356 + x16411;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17385 = x16357 + x16412;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17386 = x16358 + x16413;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17387 = x16359 + x16414;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17388 = x16360 + x16445;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17389 = x16361 + x16476;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17390 = x16362 + x16507;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17391 = x16363 + x16538;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17392 = x16364 + x16569;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17393 = x16365 + x16600;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17394 = x16366 + x16631;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17395 = x16367 + x16662;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17396 = x16368 + x16693;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17397 = x16369 + x16724;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17398 = x16370 + x16755;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17399 = x16371 + x16786;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17400 = x16372 + x16817;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17401 = x16373 + x16848;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17402 = x16374 + x16879;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17403 = x16375 + x16910;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17404 = x16376 + x16941;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17405 = x16377 + x16972;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17406 = x16378 + x17003;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17407 = x16379 + x17034;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17408 = x16380 + x17065;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17409 = x16381 + x17096;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17410 = x16382 + x17127;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17411 = x16383 + x17158;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17412 = x16384 + x17189;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17413 = x16385 + x17220;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17414 = x16386 + x17251;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17415 = x16387 + x17282;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17416 = x16388 + x17313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x17417 = x17356 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17418 = x17372 + x16422;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17419 = x17416 + x17336;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x17420 = Fp(x17417.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x17421 = x17417 - x17420;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17422 = x15050 - x17418;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17423 = x15065 - x17419;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17424 = x17358 + x16438;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17425 = x17359 + x16439;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17426 = x17360 + x16440;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17427 = x17361 + x16441;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17428 = x17362 + x16442;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17429 = x17363 + x16443;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17430 = x17364 + x16444;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17431 = x17365 + x16446;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17432 = x17366 + x16447;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17433 = x17367 + x16448;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17434 = x17368 + x16449;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17435 = x17369 + x16450;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17436 = x17370 + x16451;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17437 = x17371 + x16452;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17438 = x17373 + x16423;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17439 = x17374 + x16424;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17440 = x17375 + x16425;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17441 = x17376 + x16426;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17442 = x17377 + x16427;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17443 = x17378 + x16428;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17444 = x17379 + x16429;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17445 = x17380 + x16430;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17446 = x17381 + x16431;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17447 = x17382 + x16432;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17448 = x17383 + x16433;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17449 = x17384 + x16434;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17450 = x17385 + x16435;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17451 = x17386 + x16436;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17452 = x17387 + x16437;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17453 = x17388 + x16468;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17454 = x17389 + x16499;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17455 = x17390 + x16530;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17456 = x17391 + x16561;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17457 = x17392 + x16592;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17458 = x17393 + x16623;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17459 = x17394 + x16654;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17460 = x17395 + x16685;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17461 = x17396 + x16716;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17462 = x17397 + x16747;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17463 = x17398 + x16778;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17464 = x17399 + x16809;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17465 = x17400 + x16840;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17466 = x17401 + x16871;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17467 = x17402 + x16902;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17468 = x17403 + x16933;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17469 = x17404 + x16964;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17470 = x17405 + x16995;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17471 = x17406 + x17026;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17472 = x17407 + x17057;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17473 = x17408 + x17088;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17474 = x17409 + x17119;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17475 = x17410 + x17150;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17476 = x17411 + x17181;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17477 = x17412 + x17212;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17478 = x17413 + x17243;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17479 = x17414 + x17274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17480 = x17415 + x17305;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17481 = x17445 + x16453;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17482 = x17480 + x17328;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x17483 = x17421 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17484 = x15089 - x17482;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17485 = x15118 - x17481;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x17486 = x17483 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17487 = x17424 + x16461;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17488 = x17425 + x16462;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17489 = x17426 + x16463;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17490 = x17427 + x16464;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17491 = x17428 + x16465;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17492 = x17429 + x16466;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17493 = x17430 + x16467;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17494 = x17431 + x16469;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17495 = x17432 + x16470;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17496 = x17433 + x16471;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17497 = x17434 + x16472;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17498 = x17435 + x16473;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17499 = x17436 + x16474;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17500 = x17437 + x16475;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17501 = x17438 + x16477;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17502 = x17439 + x16478;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17503 = x17440 + x16479;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17504 = x17441 + x16480;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17505 = x17442 + x16481;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17506 = x17443 + x16482;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17507 = x17444 + x16483;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17508 = x17446 + x16454;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17509 = x17447 + x16455;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17510 = x17448 + x16456;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17511 = x17449 + x16457;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17512 = x17450 + x16458;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17513 = x17451 + x16459;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17514 = x17452 + x16460;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17515 = x17453 + x16491;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17516 = x17454 + x16522;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17517 = x17455 + x16553;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17518 = x17456 + x16584;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17519 = x17457 + x16615;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17520 = x17458 + x16646;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17521 = x17459 + x16677;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17522 = x17460 + x16708;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17523 = x17461 + x16739;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17524 = x17462 + x16770;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17525 = x17463 + x16801;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17526 = x17464 + x16832;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17527 = x17465 + x16863;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17528 = x17466 + x16894;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17529 = x17467 + x16925;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17530 = x17468 + x16956;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17531 = x17469 + x16987;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17532 = x17470 + x17018;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17533 = x17471 + x17049;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17534 = x17472 + x17080;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17535 = x17473 + x17111;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17536 = x17474 + x17142;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17537 = x17475 + x17173;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17538 = x17476 + x17204;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17539 = x17477 + x17235;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17540 = x17478 + x17266;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17541 = x17479 + x17297;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x17542 = x17354 + x17486;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17543 = x17487 + x16484;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17544 = x17541 + x17351;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17545 = x15147 - x17543;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17546 = x15194 - x17544;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17547 = x17488 + x16485;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17548 = x17489 + x16486;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17549 = x17490 + x16487;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17550 = x17491 + x16488;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17551 = x17492 + x16489;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17552 = x17493 + x16490;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17553 = x17494 + x16492;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17554 = x17495 + x16493;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17555 = x17496 + x16494;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17556 = x17497 + x16495;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17557 = x17498 + x16496;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17558 = x17499 + x16497;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17559 = x17500 + x16498;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17560 = x17501 + x16500;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17561 = x17502 + x16501;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17562 = x17503 + x16502;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17563 = x17504 + x16503;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17564 = x17505 + x16504;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17565 = x17506 + x16505;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17566 = x17507 + x16506;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17567 = x17508 + x16508;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17568 = x17509 + x16509;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17569 = x17510 + x16510;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17570 = x17511 + x16511;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17571 = x17512 + x16512;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17572 = x17513 + x16513;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17573 = x17514 + x16514;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17574 = x17515 + x16545;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17575 = x17516 + x16576;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17576 = x17517 + x16607;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17577 = x17518 + x16638;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17578 = x17519 + x16669;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17579 = x17520 + x16700;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17580 = x17521 + x16731;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17581 = x17522 + x16762;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17582 = x17523 + x16793;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17583 = x17524 + x16824;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17584 = x17525 + x16855;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17585 = x17526 + x16886;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17586 = x17527 + x16917;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17587 = x17528 + x16948;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17588 = x17529 + x16979;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17589 = x17530 + x17010;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17590 = x17531 + x17041;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17591 = x17532 + x17072;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17592 = x17533 + x17103;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17593 = x17534 + x17134;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17594 = x17535 + x17165;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17595 = x17536 + x17196;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17596 = x17537 + x17227;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17597 = x17538 + x17258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17598 = x17539 + x17289;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17599 = x17540 + x17320;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x17600 = x17542 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17601 = x17553 + x16515;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17602 = x17599 + x17343;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x17603 = Fp(x17600.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x17604 = x17600 - x17603;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17605 = x15211 - x17601;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17606 = x15244 - x17602;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17607 = x17547 + x16539;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17608 = x17548 + x16540;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17609 = x17549 + x16541;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17610 = x17550 + x16542;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17611 = x17551 + x16543;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17612 = x17552 + x16544;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17613 = x17554 + x16516;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17614 = x17555 + x16517;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17615 = x17556 + x16518;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17616 = x17557 + x16519;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17617 = x17558 + x16520;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17618 = x17559 + x16521;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17619 = x17560 + x16523;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17620 = x17561 + x16524;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17621 = x17562 + x16525;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17622 = x17563 + x16526;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17623 = x17564 + x16527;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17624 = x17565 + x16528;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17625 = x17566 + x16529;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17626 = x17567 + x16531;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17627 = x17568 + x16532;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17628 = x17569 + x16533;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17629 = x17570 + x16534;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17630 = x17571 + x16535;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17631 = x17572 + x16536;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17632 = x17573 + x16537;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17633 = x17574 + x16568;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17634 = x17575 + x16599;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17635 = x17576 + x16630;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17636 = x17577 + x16661;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17637 = x17578 + x16692;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17638 = x17579 + x16723;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17639 = x17580 + x16754;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17640 = x17581 + x16785;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17641 = x17582 + x16816;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17642 = x17583 + x16847;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17643 = x17584 + x16878;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17644 = x17585 + x16909;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17645 = x17586 + x16940;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17646 = x17587 + x16971;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17647 = x17588 + x17002;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17648 = x17589 + x17033;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17649 = x17590 + x17064;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17650 = x17591 + x17095;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17651 = x17592 + x17126;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17652 = x17593 + x17157;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17653 = x17594 + x17188;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17654 = x17595 + x17219;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17655 = x17596 + x17250;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17656 = x17597 + x17281;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17657 = x17598 + x17312;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17658 = x17619 + x16546;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17659 = x17657 + x17335;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x17660 = x17604 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17661 = x15272 - x17658;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17662 = x15291 - x17659;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x17663 = x17660 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17664 = x17607 + x16562;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17665 = x17608 + x16563;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17666 = x17609 + x16564;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17667 = x17610 + x16565;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17668 = x17611 + x16566;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17669 = x17612 + x16567;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17670 = x17613 + x16570;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17671 = x17614 + x16571;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17672 = x17615 + x16572;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17673 = x17616 + x16573;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17674 = x17617 + x16574;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17675 = x17618 + x16575;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17676 = x17620 + x16547;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17677 = x17621 + x16548;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17678 = x17622 + x16549;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17679 = x17623 + x16550;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17680 = x17624 + x16551;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17681 = x17625 + x16552;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17682 = x17626 + x16554;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17683 = x17627 + x16555;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17684 = x17628 + x16556;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17685 = x17629 + x16557;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17686 = x17630 + x16558;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17687 = x17631 + x16559;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17688 = x17632 + x16560;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17689 = x17633 + x16591;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17690 = x17634 + x16622;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17691 = x17635 + x16653;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17692 = x17636 + x16684;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17693 = x17637 + x16715;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17694 = x17638 + x16746;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17695 = x17639 + x16777;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17696 = x17640 + x16808;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17697 = x17641 + x16839;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17698 = x17642 + x16870;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17699 = x17643 + x16901;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17700 = x17644 + x16932;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17701 = x17645 + x16963;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17702 = x17646 + x16994;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17703 = x17647 + x17025;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17704 = x17648 + x17056;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17705 = x17649 + x17087;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17706 = x17650 + x17118;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17707 = x17651 + x17149;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17708 = x17652 + x17180;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17709 = x17653 + x17211;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17710 = x17654 + x17242;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17711 = x17655 + x17273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17712 = x17656 + x17304;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x17713 = x17422 + x17663;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17714 = x17682 + x16577;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17715 = x17712 + x17327;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17716 = x15311 - x17715;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17717 = x15330 - x17714;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17718 = x17664 + x16585;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17719 = x17665 + x16586;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17720 = x17666 + x16587;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17721 = x17667 + x16588;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17722 = x17668 + x16589;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17723 = x17669 + x16590;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17724 = x17670 + x16593;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17725 = x17671 + x16594;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17726 = x17672 + x16595;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17727 = x17673 + x16596;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17728 = x17674 + x16597;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17729 = x17675 + x16598;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17730 = x17676 + x16601;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17731 = x17677 + x16602;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17732 = x17678 + x16603;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17733 = x17679 + x16604;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17734 = x17680 + x16605;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17735 = x17681 + x16606;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17736 = x17683 + x16578;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17737 = x17684 + x16579;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17738 = x17685 + x16580;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17739 = x17686 + x16581;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17740 = x17687 + x16582;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17741 = x17688 + x16583;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17742 = x17689 + x16614;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17743 = x17690 + x16645;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17744 = x17691 + x16676;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17745 = x17692 + x16707;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17746 = x17693 + x16738;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17747 = x17694 + x16769;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17748 = x17695 + x16800;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17749 = x17696 + x16831;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17750 = x17697 + x16862;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17751 = x17698 + x16893;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17752 = x17699 + x16924;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17753 = x17700 + x16955;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17754 = x17701 + x16986;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17755 = x17702 + x17017;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17756 = x17703 + x17048;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17757 = x17704 + x17079;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17758 = x17705 + x17110;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17759 = x17706 + x17141;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17760 = x17707 + x17172;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17761 = x17708 + x17203;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17762 = x17709 + x17234;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17763 = x17710 + x17265;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17764 = x17711 + x17296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x17765 = x17713 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17766 = x17718 + x16608;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17767 = x17764 + x17350;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x17768 = Fp(x17765.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x17769 = x17765 - x17768;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17770 = x15363 - x17766;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17771 = x15403 - x17767;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17772 = x17719 + x16609;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17773 = x17720 + x16610;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17774 = x17721 + x16611;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17775 = x17722 + x16612;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17776 = x17723 + x16613;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17777 = x17724 + x16616;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17778 = x17725 + x16617;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17779 = x17726 + x16618;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17780 = x17727 + x16619;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17781 = x17728 + x16620;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17782 = x17729 + x16621;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17783 = x17730 + x16624;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17784 = x17731 + x16625;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17785 = x17732 + x16626;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17786 = x17733 + x16627;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17787 = x17734 + x16628;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17788 = x17735 + x16629;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17789 = x17736 + x16632;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17790 = x17737 + x16633;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17791 = x17738 + x16634;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17792 = x17739 + x16635;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17793 = x17740 + x16636;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17794 = x17741 + x16637;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17795 = x17742 + x16668;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17796 = x17743 + x16699;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17797 = x17744 + x16730;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17798 = x17745 + x16761;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17799 = x17746 + x16792;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17800 = x17747 + x16823;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17801 = x17748 + x16854;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17802 = x17749 + x16885;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17803 = x17750 + x16916;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17804 = x17751 + x16947;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17805 = x17752 + x16978;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17806 = x17753 + x17009;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17807 = x17754 + x17040;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17808 = x17755 + x17071;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17809 = x17756 + x17102;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17810 = x17757 + x17133;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17811 = x17758 + x17164;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17812 = x17759 + x17195;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17813 = x17760 + x17226;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17814 = x17761 + x17257;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17815 = x17762 + x17288;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17816 = x17763 + x17319;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17817 = x17777 + x16639;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17818 = x17816 + x17342;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x17819 = x17769 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17820 = x15417 - x17817;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17821 = x15445 - x17818;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x17822 = x17819 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17823 = x17772 + x16663;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17824 = x17773 + x16664;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17825 = x17774 + x16665;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17826 = x17775 + x16666;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17827 = x17776 + x16667;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17828 = x17778 + x16640;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17829 = x17779 + x16641;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17830 = x17780 + x16642;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17831 = x17781 + x16643;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17832 = x17782 + x16644;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17833 = x17783 + x16647;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17834 = x17784 + x16648;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17835 = x17785 + x16649;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17836 = x17786 + x16650;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17837 = x17787 + x16651;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17838 = x17788 + x16652;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17839 = x17789 + x16655;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17840 = x17790 + x16656;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17841 = x17791 + x16657;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17842 = x17792 + x16658;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17843 = x17793 + x16659;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17844 = x17794 + x16660;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17845 = x17795 + x16691;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17846 = x17796 + x16722;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17847 = x17797 + x16753;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17848 = x17798 + x16784;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17849 = x17799 + x16815;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17850 = x17800 + x16846;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17851 = x17801 + x16877;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17852 = x17802 + x16908;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17853 = x17803 + x16939;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17854 = x17804 + x16970;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17855 = x17805 + x17001;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17856 = x17806 + x17032;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17857 = x17807 + x17063;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17858 = x17808 + x17094;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17859 = x17809 + x17125;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17860 = x17810 + x17156;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17861 = x17811 + x17187;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17862 = x17812 + x17218;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17863 = x17813 + x17249;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17864 = x17814 + x17280;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17865 = x17815 + x17311;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x17866 = x17485 + x17822;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17867 = x17833 + x16670;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17868 = x17865 + x17334;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17869 = x15468 - x17867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17870 = x15484 - x17868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17871 = x17823 + x16686;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17872 = x17824 + x16687;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17873 = x17825 + x16688;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17874 = x17826 + x16689;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17875 = x17827 + x16690;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17876 = x17828 + x16694;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17877 = x17829 + x16695;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17878 = x17830 + x16696;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17879 = x17831 + x16697;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17880 = x17832 + x16698;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17881 = x17834 + x16671;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17882 = x17835 + x16672;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17883 = x17836 + x16673;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17884 = x17837 + x16674;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17885 = x17838 + x16675;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17886 = x17839 + x16678;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17887 = x17840 + x16679;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17888 = x17841 + x16680;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17889 = x17842 + x16681;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17890 = x17843 + x16682;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17891 = x17844 + x16683;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17892 = x17845 + x16714;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17893 = x17846 + x16745;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17894 = x17847 + x16776;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17895 = x17848 + x16807;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17896 = x17849 + x16838;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17897 = x17850 + x16869;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17898 = x17851 + x16900;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17899 = x17852 + x16931;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17900 = x17853 + x16962;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17901 = x17854 + x16993;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17902 = x17855 + x17024;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17903 = x17856 + x17055;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17904 = x17857 + x17086;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17905 = x17858 + x17117;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17906 = x17859 + x17148;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17907 = x17860 + x17179;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17908 = x17861 + x17210;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17909 = x17862 + x17241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17910 = x17863 + x17272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17911 = x17864 + x17303;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x17912 = x17866 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17913 = x17886 + x16701;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17914 = x17911 + x17326;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x17915 = Fp(x17912.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x17916 = x17912 - x17915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17917 = x15503 - x17914;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17918 = x15519 - x17913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17919 = x17871 + x16709;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17920 = x17872 + x16710;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17921 = x17873 + x16711;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17922 = x17874 + x16712;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17923 = x17875 + x16713;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17924 = x17876 + x16717;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17925 = x17877 + x16718;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17926 = x17878 + x16719;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17927 = x17879 + x16720;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17928 = x17880 + x16721;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17929 = x17881 + x16725;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17930 = x17882 + x16726;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17931 = x17883 + x16727;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17932 = x17884 + x16728;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17933 = x17885 + x16729;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17934 = x17887 + x16702;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17935 = x17888 + x16703;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17936 = x17889 + x16704;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17937 = x17890 + x16705;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17938 = x17891 + x16706;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17939 = x17892 + x16737;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17940 = x17893 + x16768;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17941 = x17894 + x16799;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17942 = x17895 + x16830;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17943 = x17896 + x16861;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17944 = x17897 + x16892;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17945 = x17898 + x16923;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17946 = x17899 + x16954;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17947 = x17900 + x16985;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17948 = x17901 + x17016;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17949 = x17902 + x17047;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17950 = x17903 + x17078;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17951 = x17904 + x17109;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17952 = x17905 + x17140;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17953 = x17906 + x17171;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17954 = x17907 + x17202;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17955 = x17908 + x17233;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17956 = x17909 + x17264;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17957 = x17910 + x17295;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17958 = x17919 + x16732;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17959 = x17957 + x17349;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x17960 = x17916 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17961 = x15546 - x17958;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x17962 = x15579 - x17959;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x17963 = x17960 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17964 = x17920 + x16733;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17965 = x17921 + x16734;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17966 = x17922 + x16735;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17967 = x17923 + x16736;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17968 = x17924 + x16740;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17969 = x17925 + x16741;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17970 = x17926 + x16742;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17971 = x17927 + x16743;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17972 = x17928 + x16744;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17973 = x17929 + x16748;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17974 = x17930 + x16749;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17975 = x17931 + x16750;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17976 = x17932 + x16751;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17977 = x17933 + x16752;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17978 = x17934 + x16756;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17979 = x17935 + x16757;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17980 = x17936 + x16758;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17981 = x17937 + x16759;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17982 = x17938 + x16760;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17983 = x17939 + x16791;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17984 = x17940 + x16822;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17985 = x17941 + x16853;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17986 = x17942 + x16884;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17987 = x17943 + x16915;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17988 = x17944 + x16946;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17989 = x17945 + x16977;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17990 = x17946 + x17008;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17991 = x17947 + x17039;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17992 = x17948 + x17070;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17993 = x17949 + x17101;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17994 = x17950 + x17132;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17995 = x17951 + x17163;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17996 = x17952 + x17194;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17997 = x17953 + x17225;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17998 = x17954 + x17256;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x17999 = x17955 + x17287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18000 = x17956 + x17318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18001 = x17545 + x17963;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18002 = x17968 + x16763;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18003 = x18000 + x17341;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18004 = x15590 - x18002;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18005 = x15613 - x18003;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18006 = x17964 + x16787;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18007 = x17965 + x16788;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18008 = x17966 + x16789;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18009 = x17967 + x16790;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18010 = x17969 + x16764;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18011 = x17970 + x16765;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18012 = x17971 + x16766;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18013 = x17972 + x16767;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18014 = x17973 + x16771;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18015 = x17974 + x16772;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18016 = x17975 + x16773;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18017 = x17976 + x16774;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18018 = x17977 + x16775;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18019 = x17978 + x16779;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18020 = x17979 + x16780;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18021 = x17980 + x16781;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18022 = x17981 + x16782;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18023 = x17982 + x16783;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18024 = x17983 + x16814;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18025 = x17984 + x16845;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18026 = x17985 + x16876;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18027 = x17986 + x16907;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18028 = x17987 + x16938;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18029 = x17988 + x16969;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18030 = x17989 + x17000;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18031 = x17990 + x17031;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18032 = x17991 + x17062;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18033 = x17992 + x17093;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18034 = x17993 + x17124;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18035 = x17994 + x17155;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18036 = x17995 + x17186;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18037 = x17996 + x17217;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18038 = x17997 + x17248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18039 = x17998 + x17279;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18040 = x17999 + x17310;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18041 = x18001 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18042 = x18014 + x16794;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18043 = x18040 + x17333;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18044 = Fp(x18041.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18045 = x18041 - x18044;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18046 = x15634 - x18042;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18047 = x15647 - x18043;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18048 = x18006 + x16810;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18049 = x18007 + x16811;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18050 = x18008 + x16812;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18051 = x18009 + x16813;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18052 = x18010 + x16818;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18053 = x18011 + x16819;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18054 = x18012 + x16820;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18055 = x18013 + x16821;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18056 = x18015 + x16795;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18057 = x18016 + x16796;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18058 = x18017 + x16797;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18059 = x18018 + x16798;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18060 = x18019 + x16802;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18061 = x18020 + x16803;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18062 = x18021 + x16804;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18063 = x18022 + x16805;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18064 = x18023 + x16806;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18065 = x18024 + x16837;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18066 = x18025 + x16868;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18067 = x18026 + x16899;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18068 = x18027 + x16930;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18069 = x18028 + x16961;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18070 = x18029 + x16992;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18071 = x18030 + x17023;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18072 = x18031 + x17054;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18073 = x18032 + x17085;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18074 = x18033 + x17116;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18075 = x18034 + x17147;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18076 = x18035 + x17178;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18077 = x18036 + x17209;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18078 = x18037 + x17240;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18079 = x18038 + x17271;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18080 = x18039 + x17302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18081 = x18060 + x16825;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18082 = x18080 + x17325;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18083 = x18045 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18084 = x15662 - x18082;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18085 = x15675 - x18081;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18086 = x18083 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18087 = x18048 + x16833;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18088 = x18049 + x16834;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18089 = x18050 + x16835;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18090 = x18051 + x16836;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18091 = x18052 + x16841;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18092 = x18053 + x16842;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18093 = x18054 + x16843;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18094 = x18055 + x16844;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18095 = x18056 + x16849;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18096 = x18057 + x16850;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18097 = x18058 + x16851;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18098 = x18059 + x16852;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18099 = x18061 + x16826;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18100 = x18062 + x16827;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18101 = x18063 + x16828;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18102 = x18064 + x16829;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18103 = x18065 + x16860;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18104 = x18066 + x16891;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18105 = x18067 + x16922;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18106 = x18068 + x16953;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18107 = x18069 + x16984;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18108 = x18070 + x17015;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18109 = x18071 + x17046;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18110 = x18072 + x17077;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18111 = x18073 + x17108;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18112 = x18074 + x17139;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18113 = x18075 + x17170;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18114 = x18076 + x17201;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18115 = x18077 + x17232;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18116 = x18078 + x17263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18117 = x18079 + x17294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18118 = x17605 + x18086;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18119 = x18087 + x16856;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18120 = x18117 + x17348;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18121 = x15696 - x18119;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18122 = x15722 - x18120;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18123 = x18088 + x16857;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18124 = x18089 + x16858;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18125 = x18090 + x16859;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18126 = x18091 + x16864;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18127 = x18092 + x16865;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18128 = x18093 + x16866;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18129 = x18094 + x16867;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18130 = x18095 + x16872;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18131 = x18096 + x16873;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18132 = x18097 + x16874;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18133 = x18098 + x16875;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18134 = x18099 + x16880;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18135 = x18100 + x16881;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18136 = x18101 + x16882;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18137 = x18102 + x16883;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18138 = x18103 + x16914;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18139 = x18104 + x16945;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18140 = x18105 + x16976;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18141 = x18106 + x17007;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18142 = x18107 + x17038;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18143 = x18108 + x17069;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18144 = x18109 + x17100;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18145 = x18110 + x17131;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18146 = x18111 + x17162;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18147 = x18112 + x17193;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18148 = x18113 + x17224;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18149 = x18114 + x17255;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18150 = x18115 + x17286;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18151 = x18116 + x17317;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18152 = x18118 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18153 = x18126 + x16887;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18154 = x18151 + x17340;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18155 = Fp(x18152.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18156 = x18152 - x18155;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18157 = x15733 - x18153;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18158 = x15751 - x18154;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18159 = x18123 + x16911;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18160 = x18124 + x16912;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18161 = x18125 + x16913;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18162 = x18127 + x16888;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18163 = x18128 + x16889;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18164 = x18129 + x16890;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18165 = x18130 + x16895;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18166 = x18131 + x16896;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18167 = x18132 + x16897;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18168 = x18133 + x16898;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18169 = x18134 + x16903;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18170 = x18135 + x16904;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18171 = x18136 + x16905;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18172 = x18137 + x16906;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18173 = x18138 + x16937;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18174 = x18139 + x16968;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18175 = x18140 + x16999;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18176 = x18141 + x17030;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18177 = x18142 + x17061;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18178 = x18143 + x17092;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18179 = x18144 + x17123;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18180 = x18145 + x17154;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18181 = x18146 + x17185;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18182 = x18147 + x17216;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18183 = x18148 + x17247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18184 = x18149 + x17278;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18185 = x18150 + x17309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18186 = x18165 + x16918;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18187 = x18185 + x17332;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18188 = x18156 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18189 = x15767 - x18186;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18190 = x15777 - x18187;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18191 = x18188 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18192 = x18159 + x16934;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18193 = x18160 + x16935;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18194 = x18161 + x16936;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18195 = x18162 + x16942;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18196 = x18163 + x16943;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18197 = x18164 + x16944;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18198 = x18166 + x16919;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18199 = x18167 + x16920;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18200 = x18168 + x16921;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18201 = x18169 + x16926;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18202 = x18170 + x16927;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18203 = x18171 + x16928;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18204 = x18172 + x16929;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18205 = x18173 + x16960;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18206 = x18174 + x16991;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18207 = x18175 + x17022;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18208 = x18176 + x17053;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18209 = x18177 + x17084;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18210 = x18178 + x17115;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18211 = x18179 + x17146;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18212 = x18180 + x17177;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18213 = x18181 + x17208;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18214 = x18182 + x17239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18215 = x18183 + x17270;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18216 = x18184 + x17301;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18217 = x17661 + x18191;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18218 = x18201 + x16949;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18219 = x18216 + x17324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18220 = x15788 - x18219;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18221 = x15798 - x18218;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18222 = x18192 + x16957;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18223 = x18193 + x16958;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18224 = x18194 + x16959;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18225 = x18195 + x16965;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18226 = x18196 + x16966;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18227 = x18197 + x16967;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18228 = x18198 + x16973;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18229 = x18199 + x16974;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18230 = x18200 + x16975;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18231 = x18202 + x16950;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18232 = x18203 + x16951;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18233 = x18204 + x16952;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18234 = x18205 + x16983;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18235 = x18206 + x17014;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18236 = x18207 + x17045;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18237 = x18208 + x17076;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18238 = x18209 + x17107;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18239 = x18210 + x17138;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18240 = x18211 + x17169;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18241 = x18212 + x17200;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18242 = x18213 + x17231;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18243 = x18214 + x17262;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18244 = x18215 + x17293;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18245 = x18217 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18246 = x18222 + x16980;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18247 = x18244 + x17347;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18248 = Fp(x18245.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18249 = x18245 - x18248;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18250 = x15816 - x18246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18251 = x15835 - x18247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18252 = x18223 + x16981;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18253 = x18224 + x16982;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18254 = x18225 + x16988;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18255 = x18226 + x16989;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18256 = x18227 + x16990;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18257 = x18228 + x16996;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18258 = x18229 + x16997;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18259 = x18230 + x16998;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18260 = x18231 + x17004;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18261 = x18232 + x17005;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18262 = x18233 + x17006;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18263 = x18234 + x17037;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18264 = x18235 + x17068;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18265 = x18236 + x17099;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18266 = x18237 + x17130;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18267 = x18238 + x17161;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18268 = x18239 + x17192;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18269 = x18240 + x17223;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18270 = x18241 + x17254;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18271 = x18242 + x17285;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18272 = x18243 + x17316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18273 = x18254 + x17011;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18274 = x18272 + x17339;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18275 = x18249 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18276 = x15843 - x18273;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18277 = x15856 - x18274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18278 = x18275 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18279 = x18252 + x17035;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18280 = x18253 + x17036;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18281 = x18255 + x17012;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18282 = x18256 + x17013;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18283 = x18257 + x17019;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18284 = x18258 + x17020;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18285 = x18259 + x17021;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18286 = x18260 + x17027;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18287 = x18261 + x17028;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18288 = x18262 + x17029;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18289 = x18263 + x17060;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18290 = x18264 + x17091;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18291 = x18265 + x17122;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18292 = x18266 + x17153;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18293 = x18267 + x17184;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18294 = x18268 + x17215;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18295 = x18269 + x17246;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18296 = x18270 + x17277;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18297 = x18271 + x17308;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18298 = x17717 + x18278;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18299 = x18283 + x17042;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18300 = x18297 + x17331;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18301 = x15867 - x18299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18302 = x15874 - x18300;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18303 = x18279 + x17058;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18304 = x18280 + x17059;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18305 = x18281 + x17066;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18306 = x18282 + x17067;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18307 = x18284 + x17043;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18308 = x18285 + x17044;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18309 = x18286 + x17050;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18310 = x18287 + x17051;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18311 = x18288 + x17052;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18312 = x18289 + x17083;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18313 = x18290 + x17114;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18314 = x18291 + x17145;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18315 = x18292 + x17176;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18316 = x18293 + x17207;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18317 = x18294 + x17238;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18318 = x18295 + x17269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18319 = x18296 + x17300;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18320 = x18298 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18321 = x18309 + x17073;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18322 = x18319 + x17323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18323 = Fp(x18320.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18324 = x18320 - x18323;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18325 = x15884 - x18322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18326 = x15891 - x18321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18327 = x18303 + x17081;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18328 = x18304 + x17082;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18329 = x18305 + x17089;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18330 = x18306 + x17090;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18331 = x18307 + x17097;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18332 = x18308 + x17098;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18333 = x18310 + x17074;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18334 = x18311 + x17075;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18335 = x18312 + x17106;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18336 = x18313 + x17137;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18337 = x18314 + x17168;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18338 = x18315 + x17199;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18339 = x18316 + x17230;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18340 = x18317 + x17261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18341 = x18318 + x17292;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18342 = x18327 + x17104;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18343 = x18341 + x17346;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18344 = x18324 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18345 = x15903 - x18342;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18346 = x15915 - x18343;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18347 = x18344 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18348 = x18328 + x17105;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18349 = x18329 + x17112;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18350 = x18330 + x17113;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18351 = x18331 + x17120;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18352 = x18332 + x17121;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18353 = x18333 + x17128;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18354 = x18334 + x17129;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18355 = x18335 + x17160;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18356 = x18336 + x17191;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18357 = x18337 + x17222;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18358 = x18338 + x17253;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18359 = x18339 + x17284;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18360 = x18340 + x17315;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18361 = x17770 + x18347;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18362 = x18349 + x17135;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18363 = x18360 + x17338;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18364 = x15920 - x18362;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18365 = x15928 - x18363;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18366 = x18348 + x17159;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18367 = x18350 + x17136;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18368 = x18351 + x17143;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18369 = x18352 + x17144;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18370 = x18353 + x17151;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18371 = x18354 + x17152;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18372 = x18355 + x17183;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18373 = x18356 + x17214;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18374 = x18357 + x17245;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18375 = x18358 + x17276;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18376 = x18359 + x17307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18377 = x18361 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18378 = x18368 + x17166;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18379 = x18376 + x17330;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18380 = Fp(x18377.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18381 = x18377 - x18380;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18382 = x15937 - x18378;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18383 = x15941 - x18379;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18384 = x18366 + x17182;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18385 = x18367 + x17190;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18386 = x18369 + x17167;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18387 = x18370 + x17174;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18388 = x18371 + x17175;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18389 = x18372 + x17206;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18390 = x18373 + x17237;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18391 = x18374 + x17268;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18392 = x18375 + x17299;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18393 = x18387 + x17197;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18394 = x18392 + x17322;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18395 = x18381 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18396 = x15947 - x18394;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18397 = x15951 - x18393;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18398 = x18395 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18399 = x18384 + x17205;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18400 = x18385 + x17213;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18401 = x18386 + x17221;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18402 = x18388 + x17198;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18403 = x18389 + x17229;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18404 = x18390 + x17260;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18405 = x18391 + x17291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18406 = x17820 + x18398;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18407 = x18399 + x17228;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18408 = x18405 + x17345;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18409 = x15957 - x18407;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18410 = x15963 - x18408;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18411 = x18400 + x17236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18412 = x18401 + x17244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18413 = x18402 + x17252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18414 = x18403 + x17283;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18415 = x18404 + x17314;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18416 = x18406 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18417 = x18411 + x17259;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18418 = x18415 + x17337;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18419 = Fp(x18416.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18420 = x18416 - x18419;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18421 = x15967 - x18417;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18422 = x15971 - x18418;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18423 = x18412 + x17267;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18424 = x18413 + x17275;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18425 = x18414 + x17306;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18426 = x18423 + x17290;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18427 = x18425 + x17329;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18428 = x18420 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18429 = x15974 - x18426;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18430 = x15976 - x18427;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18431 = x18428 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18432 = x18424 + x17298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18433 = x17869 + x18431;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":73:14)
        auto x18434 = x18432 + x17321;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":105:17)
        auto x18435 = x15978 - x18434;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18436 = x18433 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18437 = Fp(x18436.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18438 = x18436 - x18437;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18439 = x18438 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18440 = x18439 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18441 = x17918 + x18440;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18442 = x18441 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18443 = Fp(x18442.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18444 = x18442 - x18443;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18445 = x18444 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18446 = x18445 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18447 = x17961 + x18446;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18448 = x18447 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18449 = Fp(x18448.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18450 = x18448 - x18449;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18451 = x18450 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18452 = x18451 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18453 = x18004 + x18452;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18454 = x18453 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18455 = Fp(x18454.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18456 = x18454 - x18455;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18457 = x18456 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18458 = x18457 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18459 = x18046 + x18458;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18460 = x18459 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18461 = Fp(x18460.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18462 = x18460 - x18461;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18463 = x18462 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18464 = x18463 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18465 = x18085 + x18464;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18466 = x18465 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18467 = Fp(x18466.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18468 = x18466 - x18467;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18469 = x18468 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18470 = x18469 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18471 = x18121 + x18470;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18472 = x18471 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18473 = Fp(x18472.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18474 = x18472 - x18473;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18475 = x18474 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18476 = x18475 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18477 = x18157 + x18476;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18478 = x18477 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18479 = Fp(x18478.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18480 = x18478 - x18479;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18481 = x18480 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18482 = x18481 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18483 = x18189 + x18482;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18484 = x18483 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18485 = Fp(x18484.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18486 = x18484 - x18485;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18487 = x18486 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18488 = x18487 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18489 = x18221 + x18488;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18490 = x18489 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18491 = Fp(x18490.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18492 = x18490 - x18491;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18493 = x18492 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18494 = x18493 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18495 = x18250 + x18494;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18496 = x18495 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18497 = Fp(x18496.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18498 = x18496 - x18497;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18499 = x18498 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18500 = x18499 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18501 = x18276 + x18500;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18502 = x18501 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18503 = Fp(x18502.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18504 = x18502 - x18503;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18505 = x18504 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18506 = x18505 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18507 = x18301 + x18506;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18508 = x18507 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18509 = Fp(x18508.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18510 = x18508 - x18509;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18511 = x18510 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18512 = x18511 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18513 = x18326 + x18512;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18514 = x18513 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18515 = Fp(x18514.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18516 = x18514 - x18515;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18517 = x18516 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18518 = x18517 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18519 = x18345 + x18518;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18520 = x18519 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18521 = Fp(x18520.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18522 = x18520 - x18521;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18523 = x18522 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18524 = x18523 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18525 = x18364 + x18524;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18526 = x18525 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18527 = Fp(x18526.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18528 = x18526 - x18527;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18529 = x18528 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18530 = x18529 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18531 = x18382 + x18530;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18532 = x18531 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18533 = Fp(x18532.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18534 = x18532 - x18533;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18535 = x18534 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18536 = x18535 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18537 = x18397 + x18536;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18538 = x18537 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18539 = Fp(x18538.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18540 = x18538 - x18539;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18541 = x18540 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18542 = x18541 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18543 = x18409 + x18542;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18544 = x18543 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18545 = Fp(x18544.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18546 = x18544 - x18545;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18547 = x18546 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18548 = x18547 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18549 = x18421 + x18548;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18550 = x18549 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18551 = Fp(x18550.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18552 = x18550 - x18551;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18553 = x18552 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18554 = x18553 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18555 = x18429 + x18554;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18556 = x18555 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18557 = Fp(x18556.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18558 = x18556 - x18557;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18559 = x18558 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18560 = x18559 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18561 = x18435 + x18560;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18562 = x18561 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18563 = Fp(x18562.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18564 = x18562 - x18563;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18565 = x18564 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18566 = x18565 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18567 = x18430 + x18566;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18568 = x18567 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18569 = Fp(x18568.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18570 = x18568 - x18569;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18571 = x18570 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18572 = x18571 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18573 = x18422 + x18572;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18574 = x18573 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18575 = Fp(x18574.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18576 = x18574 - x18575;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18577 = x18576 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18578 = x18577 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18579 = x18410 + x18578;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18580 = x18579 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18581 = Fp(x18580.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18582 = x18580 - x18581;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18583 = x18582 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18584 = x18583 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18585 = x18396 + x18584;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18586 = x18585 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18587 = Fp(x18586.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18588 = x18586 - x18587;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18589 = x18588 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18590 = x18589 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18591 = x18383 + x18590;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18592 = x18591 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18593 = Fp(x18592.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18594 = x18592 - x18593;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18595 = x18594 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18596 = x18595 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18597 = x18365 + x18596;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18598 = x18597 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18599 = Fp(x18598.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18600 = x18598 - x18599;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18601 = x18600 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18602 = x18601 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18603 = x18346 + x18602;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18604 = x18603 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18605 = Fp(x18604.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18606 = x18604 - x18605;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18607 = x18606 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18608 = x18607 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18609 = x18325 + x18608;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18610 = x18609 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18611 = Fp(x18610.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18612 = x18610 - x18611;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18613 = x18612 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18614 = x18613 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18615 = x18302 + x18614;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18616 = x18615 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18617 = Fp(x18616.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18618 = x18616 - x18617;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18619 = x18618 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18620 = x18619 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18621 = x18277 + x18620;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18622 = x18621 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18623 = Fp(x18622.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18624 = x18622 - x18623;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18625 = x18624 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18626 = x18625 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18627 = x18251 + x18626;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18628 = x18627 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18629 = Fp(x18628.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18630 = x18628 - x18629;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18631 = x18630 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18632 = x18631 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18633 = x18220 + x18632;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18634 = x18633 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18635 = Fp(x18634.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18636 = x18634 - x18635;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18637 = x18636 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18638 = x18637 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18639 = x18190 + x18638;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18640 = x18639 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18641 = Fp(x18640.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18642 = x18640 - x18641;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18643 = x18642 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18644 = x18643 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18645 = x18158 + x18644;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18646 = x18645 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18647 = Fp(x18646.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18648 = x18646 - x18647;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18649 = x18648 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18650 = x18649 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18651 = x18122 + x18650;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18652 = x18651 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18653 = Fp(x18652.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18654 = x18652 - x18653;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18655 = x18654 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18656 = x18655 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18657 = x18084 + x18656;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18658 = x18657 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18659 = Fp(x18658.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18660 = x18658 - x18659;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18661 = x18660 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18662 = x18661 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18663 = x18047 + x18662;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18664 = x18663 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18665 = Fp(x18664.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18666 = x18664 - x18665;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18667 = x18666 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18668 = x18667 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18669 = x18005 + x18668;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18670 = x18669 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18671 = Fp(x18670.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18672 = x18670 - x18671;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18673 = x18672 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18674 = x18673 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18675 = x17962 + x18674;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18676 = x18675 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18677 = Fp(x18676.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18678 = x18676 - x18677;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18679 = x18678 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18680 = x18679 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18681 = x17917 + x18680;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18682 = x18681 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18683 = Fp(x18682.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18684 = x18682 - x18683;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18685 = x18684 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18686 = x18685 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18687 = x17870 + x18686;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18688 = x18687 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18689 = Fp(x18688.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18690 = x18688 - x18689;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18691 = x18690 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18692 = x18691 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18693 = x17821 + x18692;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18694 = x18693 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18695 = Fp(x18694.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18696 = x18694 - x18695;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18697 = x18696 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18698 = x18697 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18699 = x17771 + x18698;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18700 = x18699 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18701 = Fp(x18700.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18702 = x18700 - x18701;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18703 = x18702 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18704 = x18703 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18705 = x17716 + x18704;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18706 = x18705 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18707 = Fp(x18706.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18708 = x18706 - x18707;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18709 = x18708 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18710 = x18709 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18711 = x17662 + x18710;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18712 = x18711 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18713 = Fp(x18712.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18714 = x18712 - x18713;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18715 = x18714 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18716 = x18715 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18717 = x17606 + x18716;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18718 = x18717 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18719 = Fp(x18718.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18720 = x18718 - x18719;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18721 = x18720 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18722 = x18721 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18723 = x17546 + x18722;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18724 = x18723 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18725 = Fp(x18724.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18726 = x18724 - x18725;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18727 = x18726 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18728 = x18727 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18729 = x17484 + x18728;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18730 = x18729 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18731 = Fp(x18730.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18732 = x18730 - x18731;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18733 = x18732 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18734 = x18733 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18735 = x17423 + x18734;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18736 = x18735 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18737 = Fp(x18736.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18738 = x18736 - x18737;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18739 = x18738 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18740 = x18739 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18741 = x17355 + x18740;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18742 = x18741 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18743 = Fp(x18742.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18744 = x18742 - x18743;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18745 = x18744 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18746 = x18745 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18747 = x17357 + x18746;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":128:15)
        auto x18748 = x18747 + x2;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":129:16)
        auto x18749 = Fp(x18748.asUInt32() & x92.asUInt32());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:15)
        auto x18750 = x18748 - x18749;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:14)
        auto x18751 = x18750 * x91;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":130:13)
        auto x18752 = x18751 - x11;
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[18 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18753 = Fp(x16296.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18753);
                reg = x18753;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18754 = Fp(x16312.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18754);
                reg = x18754;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:31)
            auto x18755 = x17486 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:30)
            auto x18756 = Fp(x18755.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18757 = Fp(x18756.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18757);
                reg = x18757;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:31)
            auto x18758 = x18398 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:30)
            auto x18759 = Fp(x18758.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18760 = Fp(x18759.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18760);
                reg = x18760;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:31)
            auto x18761 = x18476 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:30)
            auto x18762 = Fp(x18761.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18763 = Fp(x18762.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18763);
                reg = x18763;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:31)
            auto x18764 = x18524 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:30)
            auto x18765 = Fp(x18764.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18766 = Fp(x18765.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18766);
                reg = x18766;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18767 = Fp(x17420.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18767);
                reg = x18767;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18768 = Fp(x18473.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[18 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18768);
                reg = x18768;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[19 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18769 = Fp(x16297.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18769);
                reg = x18769;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18770 = Fp(x16313.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18770);
                reg = x18770;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:32)
            auto x18771 = x17486 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:31)
            auto x18772 = Fp(x18771.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:30)
            auto x18773 = x18772 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18774 = Fp(x18773.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18774);
                reg = x18774;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:32)
            auto x18775 = x18398 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:31)
            auto x18776 = Fp(x18775.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:30)
            auto x18777 = x18776 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18778 = Fp(x18777.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18778);
                reg = x18778;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:32)
            auto x18779 = x18476 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:31)
            auto x18780 = Fp(x18779.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:30)
            auto x18781 = x18780 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18782 = Fp(x18781.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18782);
                reg = x18782;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:32)
            auto x18783 = x18524 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:31)
            auto x18784 = Fp(x18783.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:30)
            auto x18785 = x18784 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18786 = Fp(x18785.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18786);
                reg = x18786;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18787 = Fp(x17603.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18787);
                reg = x18787;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18788 = Fp(x18479.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[19 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18788);
                reg = x18788;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[20 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18789 = Fp(x16298.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18789);
                reg = x18789;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18790 = Fp(x16314.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18790);
                reg = x18790;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:31)
            auto x18791 = x17663 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:30)
            auto x18792 = Fp(x18791.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18793 = Fp(x18792.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18793);
                reg = x18793;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:31)
            auto x18794 = x18431 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:30)
            auto x18795 = Fp(x18794.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18796 = Fp(x18795.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18796);
                reg = x18796;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:31)
            auto x18797 = x18482 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:30)
            auto x18798 = Fp(x18797.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18799 = Fp(x18798.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18799);
                reg = x18799;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:31)
            auto x18800 = x18530 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:30)
            auto x18801 = Fp(x18800.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18802 = Fp(x18801.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18802);
                reg = x18802;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18803 = Fp(x17768.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18803);
                reg = x18803;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18804 = Fp(x18485.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[20 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18804);
                reg = x18804;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[21 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18805 = Fp(x16299.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18805);
                reg = x18805;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18806 = Fp(x16315.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18806);
                reg = x18806;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:32)
            auto x18807 = x17663 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:31)
            auto x18808 = Fp(x18807.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:30)
            auto x18809 = x18808 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18810 = Fp(x18809.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18810);
                reg = x18810;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:32)
            auto x18811 = x18431 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:31)
            auto x18812 = Fp(x18811.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:30)
            auto x18813 = x18812 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18814 = Fp(x18813.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18814);
                reg = x18814;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:32)
            auto x18815 = x18482 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:31)
            auto x18816 = Fp(x18815.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:30)
            auto x18817 = x18816 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18818 = Fp(x18817.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18818);
                reg = x18818;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:32)
            auto x18819 = x18530 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:31)
            auto x18820 = Fp(x18819.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:30)
            auto x18821 = x18820 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18822 = Fp(x18821.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18822);
                reg = x18822;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18823 = Fp(x17915.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18823);
                reg = x18823;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18824 = Fp(x18491.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[21 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18824);
                reg = x18824;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[22 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18825 = Fp(x16300.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18825);
                reg = x18825;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18826 = Fp(x16316.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18826);
                reg = x18826;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:31)
            auto x18827 = x17822 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:30)
            auto x18828 = Fp(x18827.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18829 = Fp(x18828.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18829);
                reg = x18829;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:31)
            auto x18830 = x18440 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:30)
            auto x18831 = Fp(x18830.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18832 = Fp(x18831.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18832);
                reg = x18832;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:31)
            auto x18833 = x18488 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:30)
            auto x18834 = Fp(x18833.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18835 = Fp(x18834.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18835);
                reg = x18835;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:31)
            auto x18836 = x18536 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:30)
            auto x18837 = Fp(x18836.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18838 = Fp(x18837.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18838);
                reg = x18838;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18839 = Fp(x18044.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18839);
                reg = x18839;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18840 = Fp(x18497.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[22 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18840);
                reg = x18840;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[23 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18841 = Fp(x16301.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18841);
                reg = x18841;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18842 = Fp(x16317.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18842);
                reg = x18842;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:32)
            auto x18843 = x17822 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:31)
            auto x18844 = Fp(x18843.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:30)
            auto x18845 = x18844 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18846 = Fp(x18845.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18846);
                reg = x18846;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:32)
            auto x18847 = x18440 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:31)
            auto x18848 = Fp(x18847.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:30)
            auto x18849 = x18848 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18850 = Fp(x18849.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18850);
                reg = x18850;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:32)
            auto x18851 = x18488 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:31)
            auto x18852 = Fp(x18851.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:30)
            auto x18853 = x18852 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18854 = Fp(x18853.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18854);
                reg = x18854;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:32)
            auto x18855 = x18536 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:31)
            auto x18856 = Fp(x18855.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:30)
            auto x18857 = x18856 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18858 = Fp(x18857.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18858);
                reg = x18858;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18859 = Fp(x18155.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18859);
                reg = x18859;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18860 = Fp(x18503.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[23 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18860);
                reg = x18860;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[24 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18861 = Fp(x16302.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18861);
                reg = x18861;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18862 = Fp(x16318.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18862);
                reg = x18862;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:31)
            auto x18863 = x17963 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:30)
            auto x18864 = Fp(x18863.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18865 = Fp(x18864.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18865);
                reg = x18865;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:31)
            auto x18866 = x18446 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:30)
            auto x18867 = Fp(x18866.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18868 = Fp(x18867.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18868);
                reg = x18868;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:31)
            auto x18869 = x18494 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:30)
            auto x18870 = Fp(x18869.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18871 = Fp(x18870.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18871);
                reg = x18871;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:31)
            auto x18872 = x18542 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:30)
            auto x18873 = Fp(x18872.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18874 = Fp(x18873.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18874);
                reg = x18874;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18875 = Fp(x18248.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18875);
                reg = x18875;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18876 = Fp(x18509.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[24 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18876);
                reg = x18876;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[25 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18877 = Fp(x16303.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18877);
                reg = x18877;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18878 = Fp(x16319.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18878);
                reg = x18878;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:32)
            auto x18879 = x17963 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:31)
            auto x18880 = Fp(x18879.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:30)
            auto x18881 = x18880 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18882 = Fp(x18881.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18882);
                reg = x18882;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:32)
            auto x18883 = x18446 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:31)
            auto x18884 = Fp(x18883.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:30)
            auto x18885 = x18884 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18886 = Fp(x18885.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18886);
                reg = x18886;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:32)
            auto x18887 = x18494 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:31)
            auto x18888 = Fp(x18887.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:30)
            auto x18889 = x18888 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18890 = Fp(x18889.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18890);
                reg = x18890;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:32)
            auto x18891 = x18542 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:31)
            auto x18892 = Fp(x18891.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:30)
            auto x18893 = x18892 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18894 = Fp(x18893.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18894);
                reg = x18894;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18895 = Fp(x18323.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18895);
                reg = x18895;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18896 = Fp(x18515.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[25 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18896);
                reg = x18896;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[26 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18897 = Fp(x16304.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18897);
                reg = x18897;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18898 = Fp(x16320.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18898);
                reg = x18898;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:31)
            auto x18899 = x18086 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:30)
            auto x18900 = Fp(x18899.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18901 = Fp(x18900.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18901);
                reg = x18901;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:31)
            auto x18902 = x18452 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:30)
            auto x18903 = Fp(x18902.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18904 = Fp(x18903.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18904);
                reg = x18904;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:31)
            auto x18905 = x18500 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:30)
            auto x18906 = Fp(x18905.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18907 = Fp(x18906.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18907);
                reg = x18907;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:31)
            auto x18908 = x18548 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:30)
            auto x18909 = Fp(x18908.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18910 = Fp(x18909.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18910);
                reg = x18910;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18911 = Fp(x18380.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18911);
                reg = x18911;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18912 = Fp(x18521.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[26 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18912);
                reg = x18912;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[27 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18913 = Fp(x16305.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18913);
                reg = x18913;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18914 = Fp(x16321.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18914);
                reg = x18914;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:32)
            auto x18915 = x18086 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:31)
            auto x18916 = Fp(x18915.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:30)
            auto x18917 = x18916 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18918 = Fp(x18917.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18918);
                reg = x18918;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:32)
            auto x18919 = x18452 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:31)
            auto x18920 = Fp(x18919.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:30)
            auto x18921 = x18920 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18922 = Fp(x18921.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18922);
                reg = x18922;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:32)
            auto x18923 = x18500 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:31)
            auto x18924 = Fp(x18923.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:30)
            auto x18925 = x18924 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18926 = Fp(x18925.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18926);
                reg = x18926;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:32)
            auto x18927 = x18548 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:31)
            auto x18928 = Fp(x18927.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:30)
            auto x18929 = x18928 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18930 = Fp(x18929.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18930);
                reg = x18930;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18931 = Fp(x18419.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18931);
                reg = x18931;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18932 = Fp(x18527.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[27 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18932);
                reg = x18932;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[28 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18933 = Fp(x16306.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18933);
                reg = x18933;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18934 = Fp(x16322.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18934);
                reg = x18934;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:31)
            auto x18935 = x18191 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:30)
            auto x18936 = Fp(x18935.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18937 = Fp(x18936.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18937);
                reg = x18937;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:31)
            auto x18938 = x18458 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:30)
            auto x18939 = Fp(x18938.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18940 = Fp(x18939.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18940);
                reg = x18940;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:31)
            auto x18941 = x18506 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:30)
            auto x18942 = Fp(x18941.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18943 = Fp(x18942.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18943);
                reg = x18943;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:31)
            auto x18944 = x18554 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:30)
            auto x18945 = Fp(x18944.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18946 = Fp(x18945.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18946);
                reg = x18946;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18947 = Fp(x18437.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18947);
                reg = x18947;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18948 = Fp(x18533.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[28 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18948);
                reg = x18948;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[29 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18949 = Fp(x16307.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18949);
                reg = x18949;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18950 = Fp(x16323.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18950);
                reg = x18950;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:32)
            auto x18951 = x18191 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:31)
            auto x18952 = Fp(x18951.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:30)
            auto x18953 = x18952 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18954 = Fp(x18953.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18954);
                reg = x18954;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:32)
            auto x18955 = x18458 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:31)
            auto x18956 = Fp(x18955.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:30)
            auto x18957 = x18956 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18958 = Fp(x18957.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18958);
                reg = x18958;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:32)
            auto x18959 = x18506 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:31)
            auto x18960 = Fp(x18959.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:30)
            auto x18961 = x18960 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18962 = Fp(x18961.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18962);
                reg = x18962;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:32)
            auto x18963 = x18554 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:31)
            auto x18964 = Fp(x18963.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:30)
            auto x18965 = x18964 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18966 = Fp(x18965.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18966);
                reg = x18966;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18967 = Fp(x18443.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18967);
                reg = x18967;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18968 = Fp(x18539.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[29 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18968);
                reg = x18968;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[30 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18969 = Fp(x16308.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18969);
                reg = x18969;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18970 = Fp(x16324.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18970);
                reg = x18970;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:31)
            auto x18971 = x18278 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:30)
            auto x18972 = Fp(x18971.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18973 = Fp(x18972.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18973);
                reg = x18973;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:31)
            auto x18974 = x18464 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:30)
            auto x18975 = Fp(x18974.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18976 = Fp(x18975.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18976);
                reg = x18976;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:31)
            auto x18977 = x18512 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:30)
            auto x18978 = Fp(x18977.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18979 = Fp(x18978.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18979);
                reg = x18979;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:31)
            auto x18980 = x18560 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:30)
            auto x18981 = Fp(x18980.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18982 = Fp(x18981.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18982);
                reg = x18982;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18983 = Fp(x18449.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18983);
                reg = x18983;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18984 = Fp(x18545.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[30 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18984);
                reg = x18984;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[31 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18985 = Fp(x16309.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18985);
                reg = x18985;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18986 = Fp(x16325.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18986);
                reg = x18986;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:32)
            auto x18987 = x18278 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:31)
            auto x18988 = Fp(x18987.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:30)
            auto x18989 = x18988 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18990 = Fp(x18989.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18990);
                reg = x18990;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:32)
            auto x18991 = x18464 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:31)
            auto x18992 = Fp(x18991.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:30)
            auto x18993 = x18992 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18994 = Fp(x18993.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18994);
                reg = x18994;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:32)
            auto x18995 = x18512 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:31)
            auto x18996 = Fp(x18995.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:30)
            auto x18997 = x18996 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x18998 = Fp(x18997.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x18998);
                reg = x18998;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:32)
            auto x18999 = x18560 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:31)
            auto x19000 = Fp(x18999.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:30)
            auto x19001 = x19000 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19002 = Fp(x19001.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19002);
                reg = x19002;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19003 = Fp(x18455.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19003);
                reg = x19003;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19004 = Fp(x18551.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[31 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19004);
                reg = x19004;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[32 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19005 = Fp(x16310.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19005);
                reg = x19005;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19006 = Fp(x16326.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19006);
                reg = x19006;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:31)
            auto x19007 = x18347 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":296:30)
            auto x19008 = Fp(x19007.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19009 = Fp(x19008.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19009);
                reg = x19009;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:31)
            auto x19010 = x18470 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":304:30)
            auto x19011 = Fp(x19010.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19012 = Fp(x19011.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19012);
                reg = x19012;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:31)
            auto x19013 = x18518 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":314:30)
            auto x19014 = Fp(x19013.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19015 = Fp(x19014.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19015);
                reg = x19015;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:31)
            auto x19016 = x18566 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":322:30)
            auto x19017 = Fp(x19016.asUInt32() & x92.asUInt32());
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19018 = Fp(x19017.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19018);
                reg = x19018;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19019 = Fp(x18461.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19019);
                reg = x19019;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19020 = Fp(x18557.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[32 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19020);
                reg = x19020;
              }
            }
          }
        }
        if (x13640 != 0) {
          {
            // loc("zirgen/components/bytes.cpp":96:12)
            {
              auto& reg = arg2[33 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13630 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19021 = Fp(x16311.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19021);
                reg = x19021;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19022 = Fp(x16327.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19022);
                reg = x19022;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:32)
            auto x19023 = x18347 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:31)
            auto x19024 = Fp(x19023.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":298:30)
            auto x19025 = x19024 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19026 = Fp(x19025.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19026);
                reg = x19026;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:32)
            auto x19027 = x18470 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:31)
            auto x19028 = Fp(x19027.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":306:30)
            auto x19029 = x19028 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19030 = Fp(x19029.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19030);
                reg = x19030;
              }
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:32)
            auto x19031 = x18518 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:31)
            auto x19032 = Fp(x19031.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":316:30)
            auto x19033 = x19032 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19034 = Fp(x19033.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19034);
                reg = x19034;
              }
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:32)
            auto x19035 = x18566 + x11;
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:31)
            auto x19036 = Fp(x19035.asUInt32() & x1.asUInt32());
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":324:30)
            auto x19037 = x19036 * x91;
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19038 = Fp(x19037.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19038);
                reg = x19038;
              }
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19039 = Fp(x18467.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19039);
                reg = x19039;
              }
            }
          }
          if (x13626 != 0) {
            {
              // loc("zirgen/components/bytes.cpp":96:21)
              auto x19040 = Fp(x18563.asUInt32() & x92.asUInt32());
              // loc("zirgen/components/bytes.cpp":96:12)
              {
                auto& reg = arg2[33 * steps + cycle];
                assert(reg == Fp::invalid() || reg == x19040);
                reg = x19040;
              }
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":343:31)
            {
              auto& reg = arg2[212 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18572);
              reg = x18572;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":344:27)
            {
              auto& reg = arg2[212 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18620);
              reg = x18620;
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":348:11)
            {
              auto& reg = arg2[212 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18668);
              reg = x18668;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":351:11)
            {
              auto& reg = arg2[212 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18716);
              reg = x18716;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":343:31)
            {
              auto& reg = arg2[213 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18578);
              reg = x18578;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":344:27)
            {
              auto& reg = arg2[213 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18626);
              reg = x18626;
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":348:11)
            {
              auto& reg = arg2[213 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18674);
              reg = x18674;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":351:11)
            {
              auto& reg = arg2[213 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18722);
              reg = x18722;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":343:31)
            {
              auto& reg = arg2[214 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18584);
              reg = x18584;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":344:27)
            {
              auto& reg = arg2[214 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18632);
              reg = x18632;
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":348:11)
            {
              auto& reg = arg2[214 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18680);
              reg = x18680;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":351:11)
            {
              auto& reg = arg2[214 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18728);
              reg = x18728;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":343:31)
            {
              auto& reg = arg2[215 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18590);
              reg = x18590;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":344:27)
            {
              auto& reg = arg2[215 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18638);
              reg = x18638;
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":348:11)
            {
              auto& reg = arg2[215 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18686);
              reg = x18686;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":351:11)
            {
              auto& reg = arg2[215 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18734);
              reg = x18734;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":343:31)
            {
              auto& reg = arg2[216 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18596);
              reg = x18596;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":344:27)
            {
              auto& reg = arg2[216 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18644);
              reg = x18644;
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":348:11)
            {
              auto& reg = arg2[216 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18692);
              reg = x18692;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":351:11)
            {
              auto& reg = arg2[216 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18740);
              reg = x18740;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":343:31)
            {
              auto& reg = arg2[217 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18602);
              reg = x18602;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":344:27)
            {
              auto& reg = arg2[217 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18650);
              reg = x18650;
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":348:11)
            {
              auto& reg = arg2[217 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18698);
              reg = x18698;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":351:11)
            {
              auto& reg = arg2[217 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18746);
              reg = x18746;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":343:31)
            {
              auto& reg = arg2[218 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18608);
              reg = x18608;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":344:27)
            {
              auto& reg = arg2[218 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18656);
              reg = x18656;
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":348:11)
            {
              auto& reg = arg2[218 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18704);
              reg = x18704;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":351:11)
            {
              auto& reg = arg2[218 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18752);
              reg = x18752;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":343:31)
            {
              auto& reg = arg2[219 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18614);
              reg = x18614;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":344:27)
            {
              auto& reg = arg2[219 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18662);
              reg = x18662;
            }
          }
        }
        if (x13631 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":348:11)
            {
              auto& reg = arg2[219 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18710);
              reg = x18710;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":351:11)
            {
              auto& reg = arg2[219 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[180 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x16328);
              reg = x16328;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[180 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18427);
              reg = x18427;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[180 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17356);
              reg = x17356;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[180 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18430);
              reg = x18430;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[181 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17352);
              reg = x17352;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[181 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18418);
              reg = x18418;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[181 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17354);
              reg = x17354;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[181 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18422);
              reg = x18422;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[182 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17418);
              reg = x17418;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[182 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18408);
              reg = x18408;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[182 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17422);
              reg = x17422;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[182 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18410);
              reg = x18410;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[183 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17481);
              reg = x17481;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[183 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18394);
              reg = x18394;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[183 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17485);
              reg = x17485;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[183 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18396);
              reg = x18396;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[184 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17543);
              reg = x17543;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[184 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18379);
              reg = x18379;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[184 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17545);
              reg = x17545;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[184 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18383);
              reg = x18383;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[185 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17601);
              reg = x17601;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[185 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18363);
              reg = x18363;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[185 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17605);
              reg = x17605;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[185 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18365);
              reg = x18365;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[186 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17658);
              reg = x17658;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[186 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18343);
              reg = x18343;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[186 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17661);
              reg = x17661;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[186 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18346);
              reg = x18346;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[187 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17714);
              reg = x17714;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[187 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18322);
              reg = x18322;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[187 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17717);
              reg = x17717;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[187 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18325);
              reg = x18325;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[188 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17766);
              reg = x17766;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[188 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18300);
              reg = x18300;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[188 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17770);
              reg = x17770;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[188 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18302);
              reg = x18302;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[189 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17817);
              reg = x17817;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[189 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18274);
              reg = x18274;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[189 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17820);
              reg = x17820;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[189 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18277);
              reg = x18277;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[190 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17867);
              reg = x17867;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[190 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18247);
              reg = x18247;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[190 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17869);
              reg = x17869;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[190 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18251);
              reg = x18251;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[191 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17913);
              reg = x17913;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[191 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18219);
              reg = x18219;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[191 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17918);
              reg = x17918;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[191 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18220);
              reg = x18220;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[192 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17958);
              reg = x17958;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[192 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18187);
              reg = x18187;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[192 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17961);
              reg = x17961;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[192 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18190);
              reg = x18190;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[193 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18002);
              reg = x18002;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[193 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18154);
              reg = x18154;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[193 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18004);
              reg = x18004;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[193 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18158);
              reg = x18158;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[194 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18042);
              reg = x18042;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[194 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18120);
              reg = x18120;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[194 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18046);
              reg = x18046;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[194 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18122);
              reg = x18122;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[195 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18081);
              reg = x18081;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[195 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18082);
              reg = x18082;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[195 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18085);
              reg = x18085;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[195 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18084);
              reg = x18084;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[196 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18119);
              reg = x18119;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[196 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18043);
              reg = x18043;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[196 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18121);
              reg = x18121;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[196 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18047);
              reg = x18047;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[197 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18153);
              reg = x18153;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[197 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18003);
              reg = x18003;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[197 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18157);
              reg = x18157;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[197 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18005);
              reg = x18005;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[198 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18186);
              reg = x18186;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[198 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17959);
              reg = x17959;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[198 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18189);
              reg = x18189;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[198 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17962);
              reg = x17962;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[199 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18218);
              reg = x18218;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[199 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17914);
              reg = x17914;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[199 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18221);
              reg = x18221;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[199 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17917);
              reg = x17917;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[200 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18246);
              reg = x18246;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[200 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17868);
              reg = x17868;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[200 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18250);
              reg = x18250;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[200 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17870);
              reg = x17870;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[201 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18273);
              reg = x18273;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[201 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17818);
              reg = x17818;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[201 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18276);
              reg = x18276;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[201 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17821);
              reg = x17821;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[202 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18299);
              reg = x18299;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[202 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17767);
              reg = x17767;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[202 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18301);
              reg = x18301;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[202 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17771);
              reg = x17771;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[203 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18321);
              reg = x18321;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[203 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17715);
              reg = x17715;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[203 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18326);
              reg = x18326;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[203 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17716);
              reg = x17716;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[204 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18342);
              reg = x18342;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[204 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17659);
              reg = x17659;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[204 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18345);
              reg = x18345;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[204 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17662);
              reg = x17662;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[205 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18362);
              reg = x18362;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[205 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17602);
              reg = x17602;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[205 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18364);
              reg = x18364;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[205 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17606);
              reg = x17606;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[206 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18378);
              reg = x18378;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[206 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17544);
              reg = x17544;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[206 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18382);
              reg = x18382;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[206 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17546);
              reg = x17546;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[207 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18393);
              reg = x18393;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[207 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17482);
              reg = x17482;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[207 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18397);
              reg = x18397;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[207 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17484);
              reg = x17484;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[208 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18407);
              reg = x18407;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[208 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17419);
              reg = x17419;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[208 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18409);
              reg = x18409;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[208 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17423);
              reg = x17423;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[209 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18417);
              reg = x18417;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[209 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17353);
              reg = x17353;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[209 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18421);
              reg = x18421;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[209 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17355);
              reg = x17355;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[210 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18426);
              reg = x18426;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[210 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x16390);
              reg = x16390;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[210 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18429);
              reg = x18429;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[210 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x17357);
              reg = x17357;
            }
          }
        }
        if (x13624 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":360:31)
            {
              auto& reg = arg2[211 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18434);
              reg = x18434;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":361:27)
            {
              auto& reg = arg2[211 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
        if (x13625 != 0) {
          if (x13673 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":364:31)
            {
              auto& reg = arg2[211 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x18435);
              reg = x18435;
            }
          }
          if (x13626 != 0) {
            // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":365:27)
            {
              auto& reg = arg2[211 * steps + cycle];
              assert(reg == Fp::invalid() || reg == x95);
              reg = x95;
            }
          }
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19041 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x19041 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19041);
          reg = x19041;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19042 = arg2[119 * steps + ((cycle - 2) & mask)];
        assert(x19042 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[180 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19042);
          reg = x19042;
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":379:35)
      auto x19043 = x13630 + x13631;
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19044 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x19044 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[196 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19044);
          reg = x19044;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19045 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x19045 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19045);
          reg = x19045;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19046 = arg2[120 * steps + ((cycle - 2) & mask)];
        assert(x19046 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[181 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19046);
          reg = x19046;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19047 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x19047 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[197 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19047);
          reg = x19047;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19048 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x19048 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19048);
          reg = x19048;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19049 = arg2[121 * steps + ((cycle - 2) & mask)];
        assert(x19049 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[182 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19049);
          reg = x19049;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19050 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x19050 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[198 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19050);
          reg = x19050;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19051 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x19051 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[183 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19051);
          reg = x19051;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19052 = arg2[122 * steps + ((cycle - 2) & mask)];
        assert(x19052 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[183 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19052);
          reg = x19052;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19053 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x19053 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[199 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19053);
          reg = x19053;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19054 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x19054 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[184 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19054);
          reg = x19054;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19055 = arg2[126 * steps + ((cycle - 2) & mask)];
        assert(x19055 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[184 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19055);
          reg = x19055;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19056 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x19056 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[200 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19056);
          reg = x19056;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19057 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x19057 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[185 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19057);
          reg = x19057;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19058 = arg2[127 * steps + ((cycle - 2) & mask)];
        assert(x19058 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[185 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19058);
          reg = x19058;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19059 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x19059 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[201 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19059);
          reg = x19059;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19060 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x19060 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[186 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19060);
          reg = x19060;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19061 = arg2[128 * steps + ((cycle - 2) & mask)];
        assert(x19061 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[186 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19061);
          reg = x19061;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19062 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x19062 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[202 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19062);
          reg = x19062;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19063 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x19063 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[187 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19063);
          reg = x19063;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19064 = arg2[129 * steps + ((cycle - 2) & mask)];
        assert(x19064 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[187 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19064);
          reg = x19064;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19065 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x19065 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[203 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19065);
          reg = x19065;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19066 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x19066 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[188 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19066);
          reg = x19066;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19067 = arg2[133 * steps + ((cycle - 2) & mask)];
        assert(x19067 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[188 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19067);
          reg = x19067;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19068 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x19068 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[204 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19068);
          reg = x19068;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19069 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x19069 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19069);
          reg = x19069;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19070 = arg2[134 * steps + ((cycle - 2) & mask)];
        assert(x19070 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[189 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19070);
          reg = x19070;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19071 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x19071 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[205 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19071);
          reg = x19071;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19072 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x19072 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19072);
          reg = x19072;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19073 = arg2[135 * steps + ((cycle - 2) & mask)];
        assert(x19073 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[190 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19073);
          reg = x19073;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19074 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x19074 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[206 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19074);
          reg = x19074;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19075 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x19075 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19075);
          reg = x19075;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19076 = arg2[136 * steps + ((cycle - 2) & mask)];
        assert(x19076 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[191 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19076);
          reg = x19076;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19077 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x19077 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[207 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19077);
          reg = x19077;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19078 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x19078 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19078);
          reg = x19078;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19079 = arg2[140 * steps + ((cycle - 2) & mask)];
        assert(x19079 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[192 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19079);
          reg = x19079;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19080 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x19080 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[208 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19080);
          reg = x19080;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19081 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x19081 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19081);
          reg = x19081;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19082 = arg2[141 * steps + ((cycle - 2) & mask)];
        assert(x19082 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[193 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19082);
          reg = x19082;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19083 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x19083 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[209 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19083);
          reg = x19083;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19084 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x19084 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19084);
          reg = x19084;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19085 = arg2[142 * steps + ((cycle - 2) & mask)];
        assert(x19085 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[194 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19085);
          reg = x19085;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19086 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x19086 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[210 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19086);
          reg = x19086;
        }
      }
      if (x13630 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19087 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x19087 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":373:24)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19087);
          reg = x19087;
        }
      }
      if (x13631 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19088 = arg2[143 * steps + ((cycle - 2) & mask)];
        assert(x19088 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":376:7)
        {
          auto& reg = arg2[195 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19088);
          reg = x19088;
        }
      }
      if (x19043 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19089 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x19089 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":380:7)
        {
          auto& reg = arg2[211 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19089);
          reg = x19089;
        }
      }
      if (x13633 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19090 = arg2[180 * steps + ((cycle - 1) & mask)];
        assert(x19090 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19091 = arg2[18 * steps + ((cycle - 1) & mask)];
        assert(x19091 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19092 = arg2[18 * steps + ((cycle - 5) & mask)];
        assert(x19092 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19093 = arg2[19 * steps + ((cycle - 5) & mask)];
        assert(x19093 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19094 = x19093 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19095 = x19092 + x19094;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19096 = x19095 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19097 = x19096 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19098 = x19097 + x19091;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19099 = x19090 - x19098;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19099 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19100 = arg2[181 * steps + ((cycle - 1) & mask)];
        assert(x19100 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19101 = arg2[19 * steps + ((cycle - 1) & mask)];
        assert(x19101 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19102 = arg2[20 * steps + ((cycle - 5) & mask)];
        assert(x19102 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19103 = arg2[21 * steps + ((cycle - 5) & mask)];
        assert(x19103 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19104 = x19103 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19105 = x19100 + x19096;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19106 = x19102 + x19104;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19107 = x19106 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19108 = x19107 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19109 = x19108 + x19101;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19110 = x19105 - x19109;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19110 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19111 = arg2[182 * steps + ((cycle - 1) & mask)];
        assert(x19111 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19112 = arg2[20 * steps + ((cycle - 1) & mask)];
        assert(x19112 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19113 = arg2[22 * steps + ((cycle - 5) & mask)];
        assert(x19113 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19114 = arg2[23 * steps + ((cycle - 5) & mask)];
        assert(x19114 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19115 = x19114 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19116 = x19111 + x19107;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19117 = x19113 + x19115;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19118 = x19117 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19119 = x19118 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19120 = x19119 + x19112;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19121 = x19116 - x19120;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19121 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19122 = arg2[183 * steps + ((cycle - 1) & mask)];
        assert(x19122 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19123 = arg2[21 * steps + ((cycle - 1) & mask)];
        assert(x19123 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19124 = arg2[24 * steps + ((cycle - 5) & mask)];
        assert(x19124 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19125 = arg2[25 * steps + ((cycle - 5) & mask)];
        assert(x19125 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19126 = x19125 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19127 = x19122 + x19118;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19128 = x19124 + x19126;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19129 = x19128 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19130 = x19129 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19131 = x19130 + x19123;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19132 = x19127 - x19131;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19132 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19133 = arg2[184 * steps + ((cycle - 1) & mask)];
        assert(x19133 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19134 = arg2[22 * steps + ((cycle - 1) & mask)];
        assert(x19134 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19135 = arg2[26 * steps + ((cycle - 5) & mask)];
        assert(x19135 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19136 = arg2[27 * steps + ((cycle - 5) & mask)];
        assert(x19136 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19137 = x19136 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19138 = x19133 + x19129;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19139 = x19135 + x19137;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19140 = x19139 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19141 = x19140 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19142 = x19141 + x19134;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19143 = x19138 - x19142;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19143 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19144 = arg2[185 * steps + ((cycle - 1) & mask)];
        assert(x19144 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19145 = arg2[23 * steps + ((cycle - 1) & mask)];
        assert(x19145 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19146 = arg2[28 * steps + ((cycle - 5) & mask)];
        assert(x19146 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19147 = arg2[29 * steps + ((cycle - 5) & mask)];
        assert(x19147 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19148 = x19147 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19149 = x19144 + x19140;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19150 = x19146 + x19148;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19151 = x19150 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19152 = x19151 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19153 = x19152 + x19145;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19154 = x19149 - x19153;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19154 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19155 = arg2[186 * steps + ((cycle - 1) & mask)];
        assert(x19155 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19156 = arg2[24 * steps + ((cycle - 1) & mask)];
        assert(x19156 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19157 = arg2[30 * steps + ((cycle - 5) & mask)];
        assert(x19157 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19158 = arg2[31 * steps + ((cycle - 5) & mask)];
        assert(x19158 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19159 = x19158 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19160 = x19155 + x19151;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19161 = x19157 + x19159;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19162 = x19161 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19163 = x19162 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19164 = x19163 + x19156;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19165 = x19160 - x19164;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19165 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19166 = arg2[187 * steps + ((cycle - 1) & mask)];
        assert(x19166 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19167 = arg2[25 * steps + ((cycle - 1) & mask)];
        assert(x19167 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19168 = arg2[32 * steps + ((cycle - 5) & mask)];
        assert(x19168 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19169 = arg2[33 * steps + ((cycle - 5) & mask)];
        assert(x19169 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19170 = x19169 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19171 = x19166 + x19162;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19172 = x19168 + x19170;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19173 = x19172 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19174 = x19173 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19175 = x19174 + x19167;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19176 = x19171 - x19175;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19176 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19177 = arg2[188 * steps + ((cycle - 1) & mask)];
        assert(x19177 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19178 = arg2[26 * steps + ((cycle - 1) & mask)];
        assert(x19178 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19179 = arg2[18 * steps + ((cycle - 4) & mask)];
        assert(x19179 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19180 = arg2[19 * steps + ((cycle - 4) & mask)];
        assert(x19180 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19181 = x19180 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19182 = x19177 + x19173;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19183 = x19179 + x19181;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19184 = x19183 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19185 = x19184 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19186 = x19185 + x19178;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19187 = x19182 - x19186;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19187 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19188 = arg2[189 * steps + ((cycle - 1) & mask)];
        assert(x19188 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19189 = arg2[27 * steps + ((cycle - 1) & mask)];
        assert(x19189 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19190 = arg2[20 * steps + ((cycle - 4) & mask)];
        assert(x19190 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19191 = arg2[21 * steps + ((cycle - 4) & mask)];
        assert(x19191 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19192 = x19191 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19193 = x19188 + x19184;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19194 = x19190 + x19192;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19195 = x19194 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19196 = x19195 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19197 = x19196 + x19189;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19198 = x19193 - x19197;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19198 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19199 = arg2[190 * steps + ((cycle - 1) & mask)];
        assert(x19199 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19200 = arg2[28 * steps + ((cycle - 1) & mask)];
        assert(x19200 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19201 = arg2[22 * steps + ((cycle - 4) & mask)];
        assert(x19201 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19202 = arg2[23 * steps + ((cycle - 4) & mask)];
        assert(x19202 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19203 = x19202 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19204 = x19199 + x19195;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19205 = x19201 + x19203;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19206 = x19205 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19207 = x19206 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19208 = x19207 + x19200;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19209 = x19204 - x19208;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19209 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19210 = arg2[191 * steps + ((cycle - 1) & mask)];
        assert(x19210 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19211 = arg2[29 * steps + ((cycle - 1) & mask)];
        assert(x19211 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19212 = arg2[24 * steps + ((cycle - 4) & mask)];
        assert(x19212 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19213 = arg2[25 * steps + ((cycle - 4) & mask)];
        assert(x19213 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19214 = x19213 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19215 = x19210 + x19206;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19216 = x19212 + x19214;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19217 = x19216 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19218 = x19217 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19219 = x19218 + x19211;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19220 = x19215 - x19219;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19220 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19221 = arg2[192 * steps + ((cycle - 1) & mask)];
        assert(x19221 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19222 = arg2[30 * steps + ((cycle - 1) & mask)];
        assert(x19222 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19223 = arg2[26 * steps + ((cycle - 4) & mask)];
        assert(x19223 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19224 = arg2[27 * steps + ((cycle - 4) & mask)];
        assert(x19224 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19225 = x19224 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19226 = x19221 + x19217;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19227 = x19223 + x19225;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19228 = x19227 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19229 = x19228 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19230 = x19229 + x19222;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19231 = x19226 - x19230;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19231 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19232 = arg2[193 * steps + ((cycle - 1) & mask)];
        assert(x19232 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19233 = arg2[31 * steps + ((cycle - 1) & mask)];
        assert(x19233 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19234 = arg2[28 * steps + ((cycle - 4) & mask)];
        assert(x19234 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19235 = arg2[29 * steps + ((cycle - 4) & mask)];
        assert(x19235 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19236 = x19235 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19237 = x19232 + x19228;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19238 = x19234 + x19236;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19239 = x19238 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19240 = x19239 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19241 = x19240 + x19233;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19242 = x19237 - x19241;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19242 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19243 = arg2[194 * steps + ((cycle - 1) & mask)];
        assert(x19243 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19244 = arg2[32 * steps + ((cycle - 1) & mask)];
        assert(x19244 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19245 = arg2[30 * steps + ((cycle - 4) & mask)];
        assert(x19245 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19246 = arg2[31 * steps + ((cycle - 4) & mask)];
        assert(x19246 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19247 = x19246 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19248 = x19243 + x19239;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19249 = x19245 + x19247;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19250 = x19249 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19251 = x19250 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19252 = x19251 + x19244;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19253 = x19248 - x19252;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19253 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19254 = arg2[195 * steps + ((cycle - 1) & mask)];
        assert(x19254 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19255 = arg2[33 * steps + ((cycle - 1) & mask)];
        assert(x19255 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19256 = arg2[32 * steps + ((cycle - 4) & mask)];
        assert(x19256 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19257 = arg2[33 * steps + ((cycle - 4) & mask)];
        assert(x19257 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19258 = x19257 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19259 = x19254 + x19250;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19260 = x19256 + x19258;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19261 = x19260 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19262 = x19261 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19263 = x19262 + x19255;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19264 = x19259 - x19263;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19264 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19265 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x19265 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19266 = arg2[196 * steps + ((cycle - 1) & mask)];
        assert(x19266 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19267 = arg2[18 * steps + ((cycle - 3) & mask)];
        assert(x19267 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19268 = arg2[19 * steps + ((cycle - 3) & mask)];
        assert(x19268 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19269 = x19268 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19270 = x19266 + x19261;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19271 = x19267 + x19269;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19272 = x19271 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19273 = x19272 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19274 = x19273 + x19265;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19275 = x19270 - x19274;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19275 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19276 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x19276 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19277 = arg2[197 * steps + ((cycle - 1) & mask)];
        assert(x19277 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19278 = arg2[20 * steps + ((cycle - 3) & mask)];
        assert(x19278 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19279 = arg2[21 * steps + ((cycle - 3) & mask)];
        assert(x19279 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19280 = x19279 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19281 = x19277 + x19272;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19282 = x19278 + x19280;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19283 = x19282 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19284 = x19283 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19285 = x19284 + x19276;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19286 = x19281 - x19285;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19286 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19287 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x19287 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19288 = arg2[198 * steps + ((cycle - 1) & mask)];
        assert(x19288 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19289 = arg2[22 * steps + ((cycle - 3) & mask)];
        assert(x19289 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19290 = arg2[23 * steps + ((cycle - 3) & mask)];
        assert(x19290 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19291 = x19290 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19292 = x19288 + x19283;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19293 = x19289 + x19291;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19294 = x19293 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19295 = x19294 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19296 = x19295 + x19287;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19297 = x19292 - x19296;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19297 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19298 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x19298 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19299 = arg2[199 * steps + ((cycle - 1) & mask)];
        assert(x19299 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19300 = arg2[24 * steps + ((cycle - 3) & mask)];
        assert(x19300 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19301 = arg2[25 * steps + ((cycle - 3) & mask)];
        assert(x19301 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19302 = x19301 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19303 = x19299 + x19294;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19304 = x19300 + x19302;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19305 = x19304 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19306 = x19305 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19307 = x19306 + x19298;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19308 = x19303 - x19307;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19308 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19309 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x19309 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19310 = arg2[200 * steps + ((cycle - 1) & mask)];
        assert(x19310 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19311 = arg2[26 * steps + ((cycle - 3) & mask)];
        assert(x19311 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19312 = arg2[27 * steps + ((cycle - 3) & mask)];
        assert(x19312 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19313 = x19312 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19314 = x19310 + x19305;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19315 = x19311 + x19313;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19316 = x19315 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19317 = x19316 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19318 = x19317 + x19309;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19319 = x19314 - x19318;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19319 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19320 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x19320 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19321 = arg2[201 * steps + ((cycle - 1) & mask)];
        assert(x19321 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19322 = arg2[28 * steps + ((cycle - 3) & mask)];
        assert(x19322 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19323 = arg2[29 * steps + ((cycle - 3) & mask)];
        assert(x19323 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19324 = x19323 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19325 = x19321 + x19316;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19326 = x19322 + x19324;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19327 = x19326 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19328 = x19327 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19329 = x19328 + x19320;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19330 = x19325 - x19329;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19330 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19331 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x19331 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19332 = arg2[202 * steps + ((cycle - 1) & mask)];
        assert(x19332 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19333 = arg2[30 * steps + ((cycle - 3) & mask)];
        assert(x19333 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19334 = arg2[31 * steps + ((cycle - 3) & mask)];
        assert(x19334 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19335 = x19334 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19336 = x19332 + x19327;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19337 = x19333 + x19335;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19338 = x19337 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19339 = x19338 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19340 = x19339 + x19331;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19341 = x19336 - x19340;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19341 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19342 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x19342 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19343 = arg2[203 * steps + ((cycle - 1) & mask)];
        assert(x19343 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19344 = arg2[32 * steps + ((cycle - 3) & mask)];
        assert(x19344 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19345 = arg2[33 * steps + ((cycle - 3) & mask)];
        assert(x19345 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19346 = x19345 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19347 = x19343 + x19338;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19348 = x19344 + x19346;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19349 = x19348 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19350 = x19349 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19351 = x19350 + x19342;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19352 = x19347 - x19351;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19352 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19353 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x19353 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19354 = arg2[204 * steps + ((cycle - 1) & mask)];
        assert(x19354 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19355 = arg2[18 * steps + ((cycle - 2) & mask)];
        assert(x19355 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19356 = arg2[19 * steps + ((cycle - 2) & mask)];
        assert(x19356 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19357 = x19356 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19358 = x19354 + x19349;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19359 = x19355 + x19357;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19360 = x19359 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19361 = x19360 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19362 = x19361 + x19353;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19363 = x19358 - x19362;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19363 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19364 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x19364 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19365 = arg2[205 * steps + ((cycle - 1) & mask)];
        assert(x19365 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19366 = arg2[20 * steps + ((cycle - 2) & mask)];
        assert(x19366 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19367 = arg2[21 * steps + ((cycle - 2) & mask)];
        assert(x19367 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19368 = x19367 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19369 = x19365 + x19360;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19370 = x19366 + x19368;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19371 = x19370 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19372 = x19371 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19373 = x19372 + x19364;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19374 = x19369 - x19373;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19374 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19375 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x19375 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19376 = arg2[206 * steps + ((cycle - 1) & mask)];
        assert(x19376 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19377 = arg2[22 * steps + ((cycle - 2) & mask)];
        assert(x19377 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19378 = arg2[23 * steps + ((cycle - 2) & mask)];
        assert(x19378 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19379 = x19378 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19380 = x19376 + x19371;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19381 = x19377 + x19379;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19382 = x19381 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19383 = x19382 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19384 = x19383 + x19375;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19385 = x19380 - x19384;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19385 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19386 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x19386 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19387 = arg2[207 * steps + ((cycle - 1) & mask)];
        assert(x19387 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19388 = arg2[24 * steps + ((cycle - 2) & mask)];
        assert(x19388 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19389 = arg2[25 * steps + ((cycle - 2) & mask)];
        assert(x19389 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19390 = x19389 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19391 = x19387 + x19382;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19392 = x19388 + x19390;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19393 = x19392 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19394 = x19393 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19395 = x19394 + x19386;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19396 = x19391 - x19395;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19396 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19397 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x19397 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19398 = arg2[208 * steps + ((cycle - 1) & mask)];
        assert(x19398 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19399 = arg2[26 * steps + ((cycle - 2) & mask)];
        assert(x19399 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19400 = arg2[27 * steps + ((cycle - 2) & mask)];
        assert(x19400 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19401 = x19400 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19402 = x19398 + x19393;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19403 = x19399 + x19401;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19404 = x19403 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19405 = x19404 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19406 = x19405 + x19397;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19407 = x19402 - x19406;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19407 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19408 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x19408 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19409 = arg2[209 * steps + ((cycle - 1) & mask)];
        assert(x19409 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19410 = arg2[28 * steps + ((cycle - 2) & mask)];
        assert(x19410 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19411 = arg2[29 * steps + ((cycle - 2) & mask)];
        assert(x19411 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19412 = x19411 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19413 = x19409 + x19404;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19414 = x19410 + x19412;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19415 = x19414 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19416 = x19415 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19417 = x19416 + x19408;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19418 = x19413 - x19417;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19418 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19419 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x19419 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19420 = arg2[210 * steps + ((cycle - 1) & mask)];
        assert(x19420 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19421 = arg2[30 * steps + ((cycle - 2) & mask)];
        assert(x19421 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19422 = arg2[31 * steps + ((cycle - 2) & mask)];
        assert(x19422 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19423 = x19422 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19424 = x19420 + x19415;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19425 = x19421 + x19423;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19426 = x19425 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19427 = x19426 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19428 = x19427 + x19419;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19429 = x19424 - x19428;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19429 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19430 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x19430 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19431 = arg2[211 * steps + ((cycle - 1) & mask)];
        assert(x19431 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19432 = arg2[32 * steps + ((cycle - 2) & mask)];
        assert(x19432 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19433 = arg2[33 * steps + ((cycle - 2) & mask)];
        assert(x19433 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":405:67)
        auto x19434 = x19433 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19435 = x19431 + x19426;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:63)
        auto x19436 = x19432 + x19434;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":404:16)
        auto x19437 = x19436 - x11;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19438 = x19437 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19439 = x19438 + x19430;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19440 = x19435 - x19439;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19440 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19441 = arg2[180 * steps + ((cycle - 0) & mask)];
        assert(x19441 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19442 = arg2[212 * steps + ((cycle - 5) & mask)];
        assert(x19442 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19443 = x19442 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19444 = x19441 + x19437;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19445 = x19444 - x19443;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19445 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19446 = arg2[181 * steps + ((cycle - 0) & mask)];
        assert(x19446 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19447 = arg2[213 * steps + ((cycle - 5) & mask)];
        assert(x19447 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19448 = x19447 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19449 = x19446 + x19442;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19450 = x19449 - x19448;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19450 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19451 = arg2[182 * steps + ((cycle - 0) & mask)];
        assert(x19451 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19452 = arg2[214 * steps + ((cycle - 5) & mask)];
        assert(x19452 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19453 = x19452 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19454 = x19451 + x19447;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19455 = x19454 - x19453;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19455 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19456 = arg2[183 * steps + ((cycle - 0) & mask)];
        assert(x19456 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19457 = arg2[215 * steps + ((cycle - 5) & mask)];
        assert(x19457 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19458 = x19457 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19459 = x19456 + x19452;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19460 = x19459 - x19458;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19460 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19461 = arg2[184 * steps + ((cycle - 0) & mask)];
        assert(x19461 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19462 = arg2[216 * steps + ((cycle - 5) & mask)];
        assert(x19462 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19463 = x19462 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19464 = x19461 + x19457;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19465 = x19464 - x19463;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19465 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19466 = arg2[185 * steps + ((cycle - 0) & mask)];
        assert(x19466 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19467 = arg2[217 * steps + ((cycle - 5) & mask)];
        assert(x19467 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19468 = x19467 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19469 = x19466 + x19462;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19470 = x19469 - x19468;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19470 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19471 = arg2[186 * steps + ((cycle - 0) & mask)];
        assert(x19471 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19472 = arg2[218 * steps + ((cycle - 5) & mask)];
        assert(x19472 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19473 = x19472 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19474 = x19471 + x19467;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19475 = x19474 - x19473;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19475 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19476 = arg2[187 * steps + ((cycle - 0) & mask)];
        assert(x19476 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19477 = arg2[219 * steps + ((cycle - 5) & mask)];
        assert(x19477 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19478 = x19477 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19479 = x19476 + x19472;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19480 = x19479 - x19478;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19480 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19481 = arg2[188 * steps + ((cycle - 0) & mask)];
        assert(x19481 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19482 = arg2[212 * steps + ((cycle - 4) & mask)];
        assert(x19482 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19483 = x19482 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19484 = x19481 + x19477;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19485 = x19484 - x19483;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19485 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19486 = arg2[189 * steps + ((cycle - 0) & mask)];
        assert(x19486 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19487 = arg2[213 * steps + ((cycle - 4) & mask)];
        assert(x19487 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19488 = x19487 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19489 = x19486 + x19482;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19490 = x19489 - x19488;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19490 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19491 = arg2[190 * steps + ((cycle - 0) & mask)];
        assert(x19491 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19492 = arg2[214 * steps + ((cycle - 4) & mask)];
        assert(x19492 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19493 = x19492 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19494 = x19491 + x19487;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19495 = x19494 - x19493;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19495 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19496 = arg2[191 * steps + ((cycle - 0) & mask)];
        assert(x19496 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19497 = arg2[215 * steps + ((cycle - 4) & mask)];
        assert(x19497 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19498 = x19497 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19499 = x19496 + x19492;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19500 = x19499 - x19498;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19500 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19501 = arg2[192 * steps + ((cycle - 0) & mask)];
        assert(x19501 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19502 = arg2[216 * steps + ((cycle - 4) & mask)];
        assert(x19502 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19503 = x19502 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19504 = x19501 + x19497;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19505 = x19504 - x19503;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19505 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19506 = arg2[193 * steps + ((cycle - 0) & mask)];
        assert(x19506 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19507 = arg2[217 * steps + ((cycle - 4) & mask)];
        assert(x19507 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19508 = x19507 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19509 = x19506 + x19502;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19510 = x19509 - x19508;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19510 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19511 = arg2[194 * steps + ((cycle - 0) & mask)];
        assert(x19511 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19512 = arg2[218 * steps + ((cycle - 4) & mask)];
        assert(x19512 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19513 = x19512 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19514 = x19511 + x19507;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19515 = x19514 - x19513;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19515 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19516 = arg2[195 * steps + ((cycle - 0) & mask)];
        assert(x19516 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19517 = arg2[219 * steps + ((cycle - 4) & mask)];
        assert(x19517 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19518 = x19517 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19519 = x19516 + x19512;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19520 = x19519 - x19518;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19520 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19521 = arg2[196 * steps + ((cycle - 0) & mask)];
        assert(x19521 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19522 = arg2[212 * steps + ((cycle - 3) & mask)];
        assert(x19522 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19523 = x19522 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19524 = x19521 + x19517;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19525 = x19524 - x19523;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19525 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19526 = arg2[197 * steps + ((cycle - 0) & mask)];
        assert(x19526 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19527 = arg2[213 * steps + ((cycle - 3) & mask)];
        assert(x19527 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19528 = x19527 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19529 = x19526 + x19522;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19530 = x19529 - x19528;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19530 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19531 = arg2[198 * steps + ((cycle - 0) & mask)];
        assert(x19531 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19532 = arg2[214 * steps + ((cycle - 3) & mask)];
        assert(x19532 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19533 = x19532 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19534 = x19531 + x19527;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19535 = x19534 - x19533;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19535 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19536 = arg2[199 * steps + ((cycle - 0) & mask)];
        assert(x19536 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19537 = arg2[215 * steps + ((cycle - 3) & mask)];
        assert(x19537 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19538 = x19537 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19539 = x19536 + x19532;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19540 = x19539 - x19538;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19540 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19541 = arg2[200 * steps + ((cycle - 0) & mask)];
        assert(x19541 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19542 = arg2[216 * steps + ((cycle - 3) & mask)];
        assert(x19542 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19543 = x19542 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19544 = x19541 + x19537;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19545 = x19544 - x19543;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19545 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19546 = arg2[201 * steps + ((cycle - 0) & mask)];
        assert(x19546 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19547 = arg2[217 * steps + ((cycle - 3) & mask)];
        assert(x19547 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19548 = x19547 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19549 = x19546 + x19542;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19550 = x19549 - x19548;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19550 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19551 = arg2[202 * steps + ((cycle - 0) & mask)];
        assert(x19551 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19552 = arg2[218 * steps + ((cycle - 3) & mask)];
        assert(x19552 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19553 = x19552 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19554 = x19551 + x19547;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19555 = x19554 - x19553;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19555 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19556 = arg2[203 * steps + ((cycle - 0) & mask)];
        assert(x19556 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19557 = arg2[219 * steps + ((cycle - 3) & mask)];
        assert(x19557 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19558 = x19557 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19559 = x19556 + x19552;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19560 = x19559 - x19558;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19560 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19561 = arg2[204 * steps + ((cycle - 0) & mask)];
        assert(x19561 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19562 = arg2[212 * steps + ((cycle - 2) & mask)];
        assert(x19562 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19563 = x19562 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19564 = x19561 + x19557;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19565 = x19564 - x19563;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19565 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19566 = arg2[205 * steps + ((cycle - 0) & mask)];
        assert(x19566 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19567 = arg2[213 * steps + ((cycle - 2) & mask)];
        assert(x19567 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19568 = x19567 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19569 = x19566 + x19562;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19570 = x19569 - x19568;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19570 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19571 = arg2[206 * steps + ((cycle - 0) & mask)];
        assert(x19571 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19572 = arg2[214 * steps + ((cycle - 2) & mask)];
        assert(x19572 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19573 = x19572 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19574 = x19571 + x19567;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19575 = x19574 - x19573;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19575 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19576 = arg2[207 * steps + ((cycle - 0) & mask)];
        assert(x19576 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19577 = arg2[215 * steps + ((cycle - 2) & mask)];
        assert(x19577 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19578 = x19577 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19579 = x19576 + x19572;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19580 = x19579 - x19578;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19580 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19581 = arg2[208 * steps + ((cycle - 0) & mask)];
        assert(x19581 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19582 = arg2[216 * steps + ((cycle - 2) & mask)];
        assert(x19582 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19583 = x19582 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19584 = x19581 + x19577;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19585 = x19584 - x19583;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19585 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19586 = arg2[209 * steps + ((cycle - 0) & mask)];
        assert(x19586 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":415:64))
        auto x19587 = arg2[217 * steps + ((cycle - 2) & mask)];
        assert(x19587 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:26)
        auto x19588 = x19587 * x90;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19589 = x19586 + x19582;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19590 = x19589 - x19588;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19590 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":425:66))
        auto x19591 = arg2[210 * steps + ((cycle - 0) & mask)];
        assert(x19591 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        auto x19592 = x19591 + x19587;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":428:10)
        assert(x19592 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/bigint.cpp:428");
      }
      if (x13625 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x19593 = arg2[171 * steps + ((cycle - 0) & mask)];
        assert(x19593 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19594 = arg2[18 * steps + ((cycle - 0) & mask)];
        assert(x19594 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19595 = arg2[19 * steps + ((cycle - 0) & mask)];
        assert(x19595 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19596 = arg2[20 * steps + ((cycle - 0) & mask)];
        assert(x19596 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19597 = arg2[21 * steps + ((cycle - 0) & mask)];
        assert(x19597 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":438:34)
        auto x19598 = x13626 * x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":438:25)
        auto x19599 = x19593 + x19598;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19594);
          reg = x19594;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19595);
          reg = x19595;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19596);
          reg = x19596;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19597);
          reg = x19597;
        }
        {
          extern_args[0] = x19599;
          extern_args[1] = x19594;
          extern_args[2] = x19595;
          extern_args[3] = x19596;
          extern_args[4] = x19597;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19600 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x19600 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19601 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x19601 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19602 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x19602 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19603 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x19603 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19599);
          reg = x19599;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[119 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19600);
          reg = x19600;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[120 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19601);
          reg = x19601;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[121 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19602);
          reg = x19602;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[122 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19603);
          reg = x19603;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19604 = arg2[22 * steps + ((cycle - 0) & mask)];
        assert(x19604 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19605 = arg2[23 * steps + ((cycle - 0) & mask)];
        assert(x19605 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19606 = arg2[24 * steps + ((cycle - 0) & mask)];
        assert(x19606 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19607 = arg2[25 * steps + ((cycle - 0) & mask)];
        assert(x19607 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":438:25)
        auto x19608 = x19599 + x96;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19604);
          reg = x19604;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19605);
          reg = x19605;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19606);
          reg = x19606;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19607);
          reg = x19607;
        }
        {
          extern_args[0] = x19608;
          extern_args[1] = x19604;
          extern_args[2] = x19605;
          extern_args[3] = x19606;
          extern_args[4] = x19607;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19609 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x19609 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19610 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x19610 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19611 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x19611 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19612 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x19612 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[123 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19608);
          reg = x19608;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[124 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[125 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[126 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19609);
          reg = x19609;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[127 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19610);
          reg = x19610;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[128 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19611);
          reg = x19611;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[129 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19612);
          reg = x19612;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19613 = arg2[26 * steps + ((cycle - 0) & mask)];
        assert(x19613 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19614 = arg2[27 * steps + ((cycle - 0) & mask)];
        assert(x19614 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19615 = arg2[28 * steps + ((cycle - 0) & mask)];
        assert(x19615 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19616 = arg2[29 * steps + ((cycle - 0) & mask)];
        assert(x19616 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":438:25)
        auto x19617 = x19599 + x93;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19613);
          reg = x19613;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19614);
          reg = x19614;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19615);
          reg = x19615;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19616);
          reg = x19616;
        }
        {
          extern_args[0] = x19617;
          extern_args[1] = x19613;
          extern_args[2] = x19614;
          extern_args[3] = x19615;
          extern_args[4] = x19616;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19618 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x19618 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19619 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x19619 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19620 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x19620 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19621 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x19621 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[130 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19617);
          reg = x19617;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[131 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[132 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[133 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19618);
          reg = x19618;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[134 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19619);
          reg = x19619;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[135 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19620);
          reg = x19620;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[136 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19621);
          reg = x19621;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19622 = arg2[30 * steps + ((cycle - 0) & mask)];
        assert(x19622 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19623 = arg2[31 * steps + ((cycle - 0) & mask)];
        assert(x19623 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19624 = arg2[32 * steps + ((cycle - 0) & mask)];
        assert(x19624 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":92:10))
        auto x19625 = arg2[33 * steps + ((cycle - 0) & mask)];
        assert(x19625 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":438:25)
        auto x19626 = x19599 + x76;
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19622);
          reg = x19622;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19623);
          reg = x19623;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19624);
          reg = x19624;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19625);
          reg = x19625;
        }
        {
          extern_args[0] = x19626;
          extern_args[1] = x19622;
          extern_args[2] = x19623;
          extern_args[3] = x19624;
          extern_args[4] = x19625;
          extern_args[5] = x93;
          extern_ramWrite(ctx, cycle, "", extern_args, extern_outs);
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19627 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x19627 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19628 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x19628 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19629 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x19629 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19630 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x19630 != Fp::invalid());
        // loc("zirgen/components/ram.cpp":168:3)
        {
          auto& reg = arg2[137 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19626);
          reg = x19626;
        }
        // loc("zirgen/components/ram.cpp":169:3)
        {
          auto& reg = arg2[138 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x949);
          reg = x949;
        }
        // loc("zirgen/components/ram.cpp":170:3)
        {
          auto& reg = arg2[139 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[140 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19627);
          reg = x19627;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[141 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19628);
          reg = x19628;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[142 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19629);
          reg = x19629;
        }
        // loc("zirgen/components/u32.cpp":34:5)
        {
          auto& reg = arg2[143 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19630);
          reg = x19630;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":445:10)
        auto x19631 = x19593 * x78;
        // loc("./zirgen/components/u32.h":25:12)
        auto x19632 = x19601 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x19633 = x19602 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x19634 = x19603 * x79;
        // loc("./zirgen/components/u32.h":25:12)
        auto x19635 = x19610 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x19636 = x19611 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x19637 = x19612 * x79;
        // loc("./zirgen/components/u32.h":25:12)
        auto x19638 = x19619 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x19639 = x19620 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x19640 = x19621 * x79;
        // loc("./zirgen/components/u32.h":25:12)
        auto x19641 = x19628 * x90;
        // loc("./zirgen/components/u32.h":26:12)
        auto x19642 = x19629 * x77;
        // loc("./zirgen/components/u32.h":27:12)
        auto x19643 = x19630 * x79;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19644 = x19600 + x19632;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19645 = x19609 + x19635;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19646 = x19618 + x19638;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19647 = x19627 + x19641;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19648 = x19644 + x19633;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19649 = x19645 + x19636;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19650 = x19646 + x19639;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19651 = x19647 + x19642;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19652 = x19648 + x19634;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19653 = x19649 + x19637;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19654 = x19650 + x19640;
        // loc("./zirgen/components/u32.h":24:12)
        auto x19655 = x19651 + x19643;
        extern_args[0] = x19631;
        extern_args[1] = x19652;
        extern_args[2] = x19653;
        extern_args[3] = x19654;
        extern_args[4] = x19655;
        extern_log(ctx, cycle, "  Writing: ioAddr = 0x%x, data = { %u, %u, %u, %u }", extern_args, extern_outs);
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":453:18)
      auto x19656 = x96 - x13633;
      if (x19656 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x19657 = x963 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x19658 = Fp(x19657.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x19658);
            reg = x19658;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x19659 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x19659 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x19660 = x19657 - x19659;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x19661 = x19660 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x19662 = Fp(x19661.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x19662);
            reg = x19662;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x19663 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x19663 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x19664 = x19661 - x19663;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x19665 = x19664 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x19666 = Fp(x19665.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x19666);
            reg = x19666;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x19667 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x19667 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x19668 = x19665 - x19667;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x19669 = x19668 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x19670 = Fp(x19669.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x19670);
            reg = x19670;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19671 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x19671 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x19672 = x19669 - x19671;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x19673 = x19672 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19673);
          reg = x19673;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19674 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x19674 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x19675 = x96 - x19674;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x19676 = x19674 * x19675;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19676);
          reg = x19676;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x19677 = x93 - x19674;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x19678 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x19678 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x19679 = x19678 * x19677;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x19679 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":455:5)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x69);
          reg = x69;
        }
      }
      if (x13633 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":458:19)
        auto x19680 = x963 + x78;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
        auto x19681 = x19680 + x78;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x19682 = Fp(x19681.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[6 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x19682);
            reg = x19682;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x19683 = arg2[6 * steps + ((cycle - 0) & mask)];
        assert(x19683 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x19684 = x19681 - x19683;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x19685 = x19684 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x19686 = Fp(x19685.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[7 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x19686);
            reg = x19686;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x19687 = arg2[7 * steps + ((cycle - 0) & mask)];
        assert(x19687 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x19688 = x19685 - x19687;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x19689 = x19688 * x91;
        {
          // loc("zirgen/components/bytes.cpp":96:21)
          auto x19690 = Fp(x19689.asUInt32() & x92.asUInt32());
          // loc("zirgen/components/bytes.cpp":96:12)
          {
            auto& reg = arg2[8 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x19690);
            reg = x19690;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
        auto x19691 = arg2[8 * steps + ((cycle - 0) & mask)];
        assert(x19691 != Fp::invalid());
        // loc("zirgen/components/bytes.cpp":97:11)
        auto x19692 = x19689 - x19691;
        // loc("zirgen/components/bytes.cpp":97:10)
        auto x19693 = x19692 * x91;
        {
          // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
          auto x19694 = Fp(x19693.asUInt32() & x76.asUInt32());
          // loc("./zirgen/components/bits.h":68:23)
          {
            auto& reg = arg2[70 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x19694);
            reg = x19694;
          }
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19695 = arg2[70 * steps + ((cycle - 0) & mask)];
        assert(x19695 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
        auto x19696 = x19693 - x19695;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
        auto x19697 = x19696 * x75;
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[71 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19697);
          reg = x19697;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19698 = arg2[71 * steps + ((cycle - 0) & mask)];
        assert(x19698 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
        auto x19699 = x96 - x19698;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
        auto x19700 = x19698 * x19699;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
        {
          auto& reg = arg2[98 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19700);
          reg = x19700;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
        auto x19701 = x93 - x19698;
        // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
        auto x19702 = arg2[98 * steps + ((cycle - 0) & mask)];
        assert(x19702 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        auto x19703 = x19702 * x19701;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
        assert(x19703 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
        // loc("zirgen/circuit/rv32im/v1/edsl/bigint.cpp":459:5)
        {
          auto& reg = arg2[99 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x62);
          reg = x62;
        }
      }
    }
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[15](Reg)"("./zirgen/components/mux.h":49:25))
    auto x19704 = arg2[115 * steps + ((cycle - 0) & mask)];
    assert(x19704 != Fp::invalid());
    if (x19704 != 0) {
      // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[15](Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":137:63))
      auto x19705 = arg2[115 * steps + ((cycle - 1) & mask)];
      assert(x19705 != Fp::invalid());
      if (x19705 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/15(HaltCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":139:48))
        auto x19706 = arg2[116 * steps + ((cycle - 1) & mask)];
        assert(x19706 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":139:5)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19706);
          reg = x19706;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/15(HaltCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":140:50))
        auto x19707 = arg2[117 * steps + ((cycle - 1) & mask)];
        assert(x19707 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":140:5)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19707);
          reg = x19707;
        }
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/15(HaltCycle)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":141:44))
        auto x19708 = arg2[118 * steps + ((cycle - 1) & mask)];
        assert(x19708 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":141:5)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19708);
          reg = x19708;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[8](Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":144:69))
      auto x19709 = arg2[108 * steps + ((cycle - 1) & mask)];
      assert(x19709 != Fp::invalid());
      if (x19709 != 0) {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":147:75))
        auto x19710 = arg2[187 * steps + ((cycle - 1) & mask)];
        assert(x19710 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":148:8)
        auto x19711 = x96 - x19710;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":148:8)
        assert(x19711 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:148");
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/Mux/0(ECallHalt)/Reg"("zirgen/circuit/rv32im/v1/edsl/body.cpp":152:55))
        auto x19712 = arg2[192 * steps + ((cycle - 1) & mask)];
        assert(x19712 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19713 = arg2[133 * steps + ((cycle - 1) & mask)];
        assert(x19713 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19714 = arg2[134 * steps + ((cycle - 1) & mask)];
        assert(x19714 != Fp::invalid());
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":152:5)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19712);
          reg = x19712;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":153:5)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19713);
          reg = x19713;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":154:5)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19714);
          reg = x19714;
        }
        extern_args[0] = x19713;
        extern_log(ctx, cycle, "isFromEcall, set sysExitCode: %u", extern_args, extern_outs);
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":156:5)
        arg1[104] = x19713;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":157:5)
        arg1[105] = x19714;
        {
          extern_args[0] = x19713;
          extern_args[1] = x963;
          extern_halt(ctx, cycle, "", extern_args, extern_outs);
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[12](Reg)"("zirgen/circuit/rv32im/v1/edsl/body.cpp":163:77))
      auto x19715 = arg2[112 * steps + ((cycle - 1) & mask)];
      assert(x19715 != Fp::invalid());
      if (x19715 != 0) {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":165:5)
        {
          auto& reg = arg2[116 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x93);
          reg = x93;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":166:5)
        {
          auto& reg = arg2[117 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":167:5)
        {
          auto& reg = arg2[118 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x0);
          reg = x0;
        }
        extern_args[0] = x93;
        extern_log(ctx, cycle, "isFromPageFault, set sysExitCode: %u", extern_args, extern_outs);
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":169:5)
        arg1[104] = x93;
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":170:5)
        arg1[105] = x95;
        {
          extern_args[0] = x93;
          extern_args[1] = x963;
          extern_halt(ctx, cycle, "", extern_args, extern_outs);
        }
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":14:23)
      auto x19716 = x963 + x78;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x19717 = Fp(x19716.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[6 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19717);
          reg = x19717;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x19718 = arg2[6 * steps + ((cycle - 0) & mask)];
      assert(x19718 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x19719 = x19716 - x19718;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x19720 = x19719 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x19721 = Fp(x19720.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[7 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19721);
          reg = x19721;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x19722 = arg2[7 * steps + ((cycle - 0) & mask)];
      assert(x19722 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x19723 = x19720 - x19722;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x19724 = x19723 * x91;
      {
        // loc("zirgen/components/bytes.cpp":96:21)
        auto x19725 = Fp(x19724.asUInt32() & x92.asUInt32());
        // loc("zirgen/components/bytes.cpp":96:12)
        {
          auto& reg = arg2[8 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19725);
          reg = x19725;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/BytesBody/PlonkBody/BytesPlonkElement/Reg"("zirgen/components/bytes.cpp":97:16))
      auto x19726 = arg2[8 * steps + ((cycle - 0) & mask)];
      assert(x19726 != Fp::invalid());
      // loc("zirgen/components/bytes.cpp":97:11)
      auto x19727 = x19724 - x19726;
      // loc("zirgen/components/bytes.cpp":97:10)
      auto x19728 = x19727 * x91;
      {
        // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":17:26)
        auto x19729 = Fp(x19728.asUInt32() & x76.asUInt32());
        // loc("./zirgen/components/bits.h":68:23)
        {
          auto& reg = arg2[70 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x19729);
          reg = x19729;
        }
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19730 = arg2[70 * steps + ((cycle - 0) & mask)];
      assert(x19730 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:18)
      auto x19731 = x19728 - x19730;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":18:17)
      auto x19732 = x19731 * x75;
      // loc("./zirgen/components/bits.h":68:23)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x19732);
        reg = x19732;
      }
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Twit/twit(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19733 = arg2[71 * steps + ((cycle - 0) & mask)];
      assert(x19733 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:23)
      auto x19734 = x96 - x19733;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:15)
      auto x19735 = x19733 * x19734;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":22:3)
      {
        auto& reg = arg2[98 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x19735);
        reg = x19735;
      }
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:17)
      auto x19736 = x93 - x19733;
      // loc("Top/mux(Mux)/body(BodyStep)/PCReg/Reg"("./zirgen/compiler/edsl/edsl.h":118:61))
      auto x19737 = arg2[98 * steps + ((cycle - 0) & mask)];
      assert(x19737 != Fp::invalid());
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      auto x19738 = x19737 * x19736;
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":23:7)
      assert(x19738 == 0 && "eqz failed at: zirgen/circuit/rv32im/v1/edsl/body.cpp:23");
      // loc("zirgen/circuit/rv32im/v1/edsl/body.cpp":177:3)
      {
        auto& reg = arg2[99 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x68);
        reg = x68;
      }
    }
  }
  // loc("Top/Code/OneHot/hot[6](Reg)"("./zirgen/components/mux.h":49:25))
  auto x19739 = arg0[7 * steps + ((cycle - 0) & mask)];
  assert(x19739 != Fp::invalid());
  if (x19739 != 0) {
    // loc("Top/Code/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x19740 = arg0[0 * steps + ((cycle - 0) & mask)];
    assert(x19740 != Fp::invalid());
    extern_args[0] = x19740;
    extern_log(ctx, cycle, "%u: RamFini", extern_args, extern_outs);
  }
  // loc("Top/Code/OneHot/hot[7](Reg)"("./zirgen/components/mux.h":49:25))
  auto x19741 = arg0[8 * steps + ((cycle - 0) & mask)];
  assert(x19741 != Fp::invalid());
  if (x19741 != 0) {
    // loc("Top/Code/Reg"("./zirgen/compiler/edsl/component.h":154:27))
    auto x19742 = arg0[0 * steps + ((cycle - 0) & mask)];
    assert(x19742 != Fp::invalid());
    extern_args[0] = x19742;
    extern_log(ctx, cycle, "%u: BytesFini", extern_args, extern_outs);
  }
  // loc("Top/Code/OneHot/hot[0](Reg)"("zirgen/circuit/rv32im/v1/edsl/top.cpp":84:27))
  auto x19743 = arg0[1 * steps + ((cycle - 0) & mask)];
  assert(x19743 != Fp::invalid());
  // loc("Top/Code/OneHot/hot[2](Reg)"("zirgen/circuit/rv32im/v1/edsl/top.cpp":84:27))
  auto x19744 = arg0[3 * steps + ((cycle - 0) & mask)];
  assert(x19744 != Fp::invalid());
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":84:16)
  auto x19745 = x19743 + x97;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":84:16)
  auto x19746 = x19745 + x19744;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":84:16)
  auto x19747 = x19746 + x422;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":84:16)
  auto x19748 = x19747 + x475;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":84:16)
  auto x19749 = x19748 + x948;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":84:16)
  auto x19750 = x19749 + x19739;
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":84:16)
  auto x19751 = x19750 + x19741;
  if (x948 != 0) {
    // loc("Top/mux(Mux)/body(BodyStep)/OneHot/hot[15](Reg)"("zirgen/circuit/rv32im/v1/edsl/top.cpp":92:18))
    auto x19752 = arg2[115 * steps + ((cycle - 0) & mask)];
    assert(x19752 != Fp::invalid());
    // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":93:5)
    {
      auto& reg = arg2[2 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x19752);
      reg = x19752;
    }
  }
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":95:23)
  auto x19753 = x19751 - x948;
  if (x19753 != 0) {
    // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":95:27)
    {
      auto& reg = arg2[2 * steps + cycle];
      assert(reg == Fp::invalid() || reg == x95);
      reg = x95;
    }
  }
  // loc("Top/halted(Reg)"("./zirgen/compiler/edsl/edsl.h":118:61))
  auto x19754 = arg2[2 * steps + ((cycle - 0) & mask)];
  assert(x19754 != Fp::invalid());
  // loc("zirgen/circuit/rv32im/v1/edsl/top.cpp":96:10)
  auto x19755 = x96 - x19754;
  if (x19744 != 0) {
    {
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[6 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[7 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[8 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[9 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[70 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[72 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[73 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[74 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[75 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[76 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[79 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[80 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[81 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[82 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[85 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[86 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[87 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[88 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
    }
  }
  if (x422 != 0) {
    {
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/ram.cpp":43:3)
      {
        auto& reg = arg2[135 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/ram.cpp":44:3)
      {
        auto& reg = arg2[136 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/ram.cpp":45:3)
      {
        auto& reg = arg2[137 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x96);
        reg = x96;
      }
      // loc("zirgen/components/u32.cpp":28:5)
      {
        auto& reg = arg2[138 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/u32.cpp":28:5)
      {
        auto& reg = arg2[139 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/u32.cpp":28:5)
      {
        auto& reg = arg2[140 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("zirgen/components/u32.cpp":28:5)
      {
        auto& reg = arg2[141 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[73 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[74 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[75 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[76 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[79 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[80 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[81 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[82 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[85 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[86 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[87 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[88 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
    }
  }
  if (x475 != 0) {
    {
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[75 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[76 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[79 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[80 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[81 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[82 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[85 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[86 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[87 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[88 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
    }
  }
  if (x948 != 0) {
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19756 = arg2[100 * steps + ((cycle - 0) & mask)];
    assert(x19756 != Fp::invalid());
    if (x19756 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19757 = arg2[101 * steps + ((cycle - 0) & mask)];
    assert(x19757 != Fp::invalid());
    if (x19757 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19758 = arg2[102 * steps + ((cycle - 0) & mask)];
    assert(x19758 != Fp::invalid());
    if (x19758 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19759 = arg2[103 * steps + ((cycle - 0) & mask)];
    assert(x19759 != Fp::invalid());
    if (x19759 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19760 = arg2[104 * steps + ((cycle - 0) & mask)];
    assert(x19760 != Fp::invalid());
    if (x19760 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19761 = arg2[105 * steps + ((cycle - 0) & mask)];
    assert(x19761 != Fp::invalid());
    if (x19761 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19762 = arg2[106 * steps + ((cycle - 0) & mask)];
    assert(x19762 != Fp::invalid());
    if (x19762 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19763 = arg2[107 * steps + ((cycle - 0) & mask)];
    assert(x19763 != Fp::invalid());
    if (x19763 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19764 = arg2[108 * steps + ((cycle - 0) & mask)];
    assert(x19764 != Fp::invalid());
    if (x19764 != 0) {
      // loc("zirgen/compiler/edsl/component.cpp":39:15)
      auto x19765 = arg2[187 * steps + ((cycle - 0) & mask)];
      assert(x19765 != Fp::invalid());
      if (x19765 != 0) {
        {
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":39:15)
      auto x19766 = arg2[188 * steps + ((cycle - 0) & mask)];
      assert(x19766 != Fp::invalid());
      if (x19766 != 0) {
        {
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":39:15)
      auto x19767 = arg2[189 * steps + ((cycle - 0) & mask)];
      assert(x19767 != Fp::invalid());
      if (x19767 != 0) {
        {
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":39:15)
      auto x19768 = arg2[190 * steps + ((cycle - 0) & mask)];
      assert(x19768 != Fp::invalid());
      if (x19768 != 0) {
        {
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
      // loc("zirgen/compiler/edsl/component.cpp":39:15)
      auto x19769 = arg2[191 * steps + ((cycle - 0) & mask)];
      assert(x19769 != Fp::invalid());
      if (x19769 != 0) {
        {
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[21 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[22 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[23 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[24 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[25 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[26 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[27 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[28 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[29 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[30 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[31 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[32 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[33 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[34 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[35 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bytes.h":45:30)
          {
            auto& reg = arg2[36 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[137 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[138 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[139 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[140 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[141 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[142 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[143 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":43:3)
          {
            auto& reg = arg2[144 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":44:3)
          {
            auto& reg = arg2[145 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/ram.cpp":45:3)
          {
            auto& reg = arg2[146 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x96);
            reg = x96;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[147 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[148 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[149 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("zirgen/components/u32.cpp":28:5)
          {
            auto& reg = arg2[150 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[76 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[77 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[78 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[79 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[80 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[81 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[82 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[83 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[84 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[85 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[86 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[87 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
          // loc("./zirgen/components/bits.h":37:46)
          {
            auto& reg = arg2[88 * steps + cycle];
            assert(reg == Fp::invalid() || reg == x95);
            reg = x95;
          }
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19770 = arg2[109 * steps + ((cycle - 0) & mask)];
    assert(x19770 != Fp::invalid());
    if (x19770 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19771 = arg2[110 * steps + ((cycle - 0) & mask)];
    assert(x19771 != Fp::invalid());
    if (x19771 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19772 = arg2[111 * steps + ((cycle - 0) & mask)];
    assert(x19772 != Fp::invalid());
    if (x19772 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19773 = arg2[112 * steps + ((cycle - 0) & mask)];
    assert(x19773 != Fp::invalid());
    if (x19773 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19774 = arg2[113 * steps + ((cycle - 0) & mask)];
    assert(x19774 != Fp::invalid());
    if (x19774 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19775 = arg2[114 * steps + ((cycle - 0) & mask)];
    assert(x19775 != Fp::invalid());
    if (x19775 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19776 = arg2[115 * steps + ((cycle - 0) & mask)];
    assert(x19776 != Fp::invalid());
    if (x19776 != 0) {
      {
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[9 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[10 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[11 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[12 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[13 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[14 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[15 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[16 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[17 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[18 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[19 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[20 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[21 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[22 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[23 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[24 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[25 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[26 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[27 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[28 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[29 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[30 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[31 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[32 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[33 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[34 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[35 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bytes.h":45:30)
        {
          auto& reg = arg2[36 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[72 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[73 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[74 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[75 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[76 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[77 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[78 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[79 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[80 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[81 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[82 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[83 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[84 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[85 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[86 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[87 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
        // loc("./zirgen/components/bits.h":37:46)
        {
          auto& reg = arg2[88 * steps + cycle];
          assert(reg == Fp::invalid() || reg == x95);
          reg = x95;
        }
      }
    }
  }
  if (x19739 != 0) {
    {
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[6 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[7 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[8 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[9 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[10 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[11 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[12 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[13 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[14 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[15 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[16 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[17 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[18 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[19 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[20 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[21 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[22 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[23 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[24 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[25 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[26 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[27 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[28 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[29 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[30 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[31 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[32 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[33 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[34 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[35 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bytes.h":45:30)
      {
        auto& reg = arg2[36 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[70 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[71 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[72 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[73 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[74 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[75 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[76 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[77 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[78 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[79 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[80 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[81 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[82 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[83 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[84 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[85 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[86 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[87 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
      // loc("./zirgen/components/bits.h":37:46)
      {
        auto& reg = arg2[88 * steps + cycle];
        assert(reg == Fp::invalid() || reg == x95);
        reg = x95;
      }
    }
  }
  if (x422 != 0) {
    {
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19777 = arg2[114 * steps + ((cycle - 0) & mask)];
      assert(x19777 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19778 = arg2[115 * steps + ((cycle - 0) & mask)];
      assert(x19778 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19779 = arg2[116 * steps + ((cycle - 0) & mask)];
      assert(x19779 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19780 = arg2[117 * steps + ((cycle - 0) & mask)];
      assert(x19780 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19781 = arg2[118 * steps + ((cycle - 0) & mask)];
      assert(x19781 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19782 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x19782 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19783 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x19783 != Fp::invalid());
      extern_args[0] = x19777;
      extern_args[1] = x19778;
      extern_args[2] = x19779;
      extern_args[3] = x19780;
      extern_args[4] = x19781;
      extern_args[5] = x19782;
      extern_args[6] = x19783;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19784 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x19784 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19785 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x19785 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19786 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x19786 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19787 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x19787 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19788 = arg2[125 * steps + ((cycle - 0) & mask)];
      assert(x19788 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19789 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x19789 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19790 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x19790 != Fp::invalid());
      extern_args[0] = x19784;
      extern_args[1] = x19785;
      extern_args[2] = x19786;
      extern_args[3] = x19787;
      extern_args[4] = x19788;
      extern_args[5] = x19789;
      extern_args[6] = x19790;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19791 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x19791 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19792 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x19792 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19793 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x19793 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19794 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x19794 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19795 = arg2[132 * steps + ((cycle - 0) & mask)];
      assert(x19795 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19796 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x19796 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19797 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x19797 != Fp::invalid());
      extern_args[0] = x19791;
      extern_args[1] = x19792;
      extern_args[2] = x19793;
      extern_args[3] = x19794;
      extern_args[4] = x19795;
      extern_args[5] = x19796;
      extern_args[6] = x19797;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19798 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x19798 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19799 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x19799 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19800 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x19800 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19801 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x19801 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19802 = arg2[139 * steps + ((cycle - 0) & mask)];
      assert(x19802 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19803 = arg2[140 * steps + ((cycle - 0) & mask)];
      assert(x19803 != Fp::invalid());
      // loc("Top/mux(Mux)/ram_load(RamLoadStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19804 = arg2[141 * steps + ((cycle - 0) & mask)];
      assert(x19804 != Fp::invalid());
      extern_args[0] = x19798;
      extern_args[1] = x19799;
      extern_args[2] = x19800;
      extern_args[3] = x19801;
      extern_args[4] = x19802;
      extern_args[5] = x19803;
      extern_args[6] = x19804;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
    }
  }
  if (x475 != 0) {
    {
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19805 = arg2[116 * steps + ((cycle - 0) & mask)];
      assert(x19805 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19806 = arg2[117 * steps + ((cycle - 0) & mask)];
      assert(x19806 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19807 = arg2[118 * steps + ((cycle - 0) & mask)];
      assert(x19807 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19808 = arg2[119 * steps + ((cycle - 0) & mask)];
      assert(x19808 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19809 = arg2[120 * steps + ((cycle - 0) & mask)];
      assert(x19809 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19810 = arg2[121 * steps + ((cycle - 0) & mask)];
      assert(x19810 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19811 = arg2[122 * steps + ((cycle - 0) & mask)];
      assert(x19811 != Fp::invalid());
      extern_args[0] = x19805;
      extern_args[1] = x19806;
      extern_args[2] = x19807;
      extern_args[3] = x19808;
      extern_args[4] = x19809;
      extern_args[5] = x19810;
      extern_args[6] = x19811;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19812 = arg2[123 * steps + ((cycle - 0) & mask)];
      assert(x19812 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19813 = arg2[124 * steps + ((cycle - 0) & mask)];
      assert(x19813 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19814 = arg2[125 * steps + ((cycle - 0) & mask)];
      assert(x19814 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19815 = arg2[126 * steps + ((cycle - 0) & mask)];
      assert(x19815 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19816 = arg2[127 * steps + ((cycle - 0) & mask)];
      assert(x19816 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19817 = arg2[128 * steps + ((cycle - 0) & mask)];
      assert(x19817 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19818 = arg2[129 * steps + ((cycle - 0) & mask)];
      assert(x19818 != Fp::invalid());
      extern_args[0] = x19812;
      extern_args[1] = x19813;
      extern_args[2] = x19814;
      extern_args[3] = x19815;
      extern_args[4] = x19816;
      extern_args[5] = x19817;
      extern_args[6] = x19818;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19819 = arg2[130 * steps + ((cycle - 0) & mask)];
      assert(x19819 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19820 = arg2[131 * steps + ((cycle - 0) & mask)];
      assert(x19820 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19821 = arg2[132 * steps + ((cycle - 0) & mask)];
      assert(x19821 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19822 = arg2[133 * steps + ((cycle - 0) & mask)];
      assert(x19822 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19823 = arg2[134 * steps + ((cycle - 0) & mask)];
      assert(x19823 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19824 = arg2[135 * steps + ((cycle - 0) & mask)];
      assert(x19824 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19825 = arg2[136 * steps + ((cycle - 0) & mask)];
      assert(x19825 != Fp::invalid());
      extern_args[0] = x19819;
      extern_args[1] = x19820;
      extern_args[2] = x19821;
      extern_args[3] = x19822;
      extern_args[4] = x19823;
      extern_args[5] = x19824;
      extern_args[6] = x19825;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19826 = arg2[137 * steps + ((cycle - 0) & mask)];
      assert(x19826 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19827 = arg2[138 * steps + ((cycle - 0) & mask)];
      assert(x19827 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19828 = arg2[139 * steps + ((cycle - 0) & mask)];
      assert(x19828 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19829 = arg2[140 * steps + ((cycle - 0) & mask)];
      assert(x19829 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19830 = arg2[141 * steps + ((cycle - 0) & mask)];
      assert(x19830 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19831 = arg2[142 * steps + ((cycle - 0) & mask)];
      assert(x19831 != Fp::invalid());
      // loc("Top/mux(Mux)/reset(ResetStep)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
      auto x19832 = arg2[143 * steps + ((cycle - 0) & mask)];
      assert(x19832 != Fp::invalid());
      extern_args[0] = x19826;
      extern_args[1] = x19827;
      extern_args[2] = x19828;
      extern_args[3] = x19829;
      extern_args[4] = x19830;
      extern_args[5] = x19831;
      extern_args[6] = x19832;
      extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
    }
  }
  if (x948 != 0) {
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19833 = arg2[100 * steps + ((cycle - 0) & mask)];
    assert(x19833 != Fp::invalid());
    if (x19833 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19834 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x19834 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19835 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x19835 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19836 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x19836 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19837 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x19837 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19838 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x19838 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19839 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x19839 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19840 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x19840 != Fp::invalid());
        extern_args[0] = x19834;
        extern_args[1] = x19835;
        extern_args[2] = x19836;
        extern_args[3] = x19837;
        extern_args[4] = x19838;
        extern_args[5] = x19839;
        extern_args[6] = x19840;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19841 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x19841 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19842 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x19842 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19843 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x19843 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19844 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x19844 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19845 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x19845 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19846 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x19846 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19847 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x19847 != Fp::invalid());
        extern_args[0] = x19841;
        extern_args[1] = x19842;
        extern_args[2] = x19843;
        extern_args[3] = x19844;
        extern_args[4] = x19845;
        extern_args[5] = x19846;
        extern_args[6] = x19847;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19848 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x19848 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19849 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x19849 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19850 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x19850 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19851 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x19851 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19852 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x19852 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19853 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x19853 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19854 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x19854 != Fp::invalid());
        extern_args[0] = x19848;
        extern_args[1] = x19849;
        extern_args[2] = x19850;
        extern_args[3] = x19851;
        extern_args[4] = x19852;
        extern_args[5] = x19853;
        extern_args[6] = x19854;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19855 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x19855 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19856 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x19856 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19857 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x19857 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19858 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x19858 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19859 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x19859 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19860 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x19860 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/0(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19861 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x19861 != Fp::invalid());
        extern_args[0] = x19855;
        extern_args[1] = x19856;
        extern_args[2] = x19857;
        extern_args[3] = x19858;
        extern_args[4] = x19859;
        extern_args[5] = x19860;
        extern_args[6] = x19861;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19862 = arg2[101 * steps + ((cycle - 0) & mask)];
    assert(x19862 != Fp::invalid());
    if (x19862 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19863 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x19863 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19864 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x19864 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19865 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x19865 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19866 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x19866 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19867 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x19867 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19868 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x19868 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19869 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x19869 != Fp::invalid());
        extern_args[0] = x19863;
        extern_args[1] = x19864;
        extern_args[2] = x19865;
        extern_args[3] = x19866;
        extern_args[4] = x19867;
        extern_args[5] = x19868;
        extern_args[6] = x19869;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19870 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x19870 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19871 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x19871 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19872 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x19872 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19873 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x19873 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19874 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x19874 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19875 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x19875 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19876 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x19876 != Fp::invalid());
        extern_args[0] = x19870;
        extern_args[1] = x19871;
        extern_args[2] = x19872;
        extern_args[3] = x19873;
        extern_args[4] = x19874;
        extern_args[5] = x19875;
        extern_args[6] = x19876;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19877 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x19877 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19878 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x19878 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19879 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x19879 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19880 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x19880 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19881 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x19881 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19882 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x19882 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19883 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x19883 != Fp::invalid());
        extern_args[0] = x19877;
        extern_args[1] = x19878;
        extern_args[2] = x19879;
        extern_args[3] = x19880;
        extern_args[4] = x19881;
        extern_args[5] = x19882;
        extern_args[6] = x19883;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19884 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x19884 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19885 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x19885 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19886 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x19886 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19887 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x19887 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19888 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x19888 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19889 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x19889 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/1(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19890 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x19890 != Fp::invalid());
        extern_args[0] = x19884;
        extern_args[1] = x19885;
        extern_args[2] = x19886;
        extern_args[3] = x19887;
        extern_args[4] = x19888;
        extern_args[5] = x19889;
        extern_args[6] = x19890;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19891 = arg2[102 * steps + ((cycle - 0) & mask)];
    assert(x19891 != Fp::invalid());
    if (x19891 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19892 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x19892 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19893 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x19893 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19894 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x19894 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19895 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x19895 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19896 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x19896 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19897 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x19897 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19898 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x19898 != Fp::invalid());
        extern_args[0] = x19892;
        extern_args[1] = x19893;
        extern_args[2] = x19894;
        extern_args[3] = x19895;
        extern_args[4] = x19896;
        extern_args[5] = x19897;
        extern_args[6] = x19898;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19899 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x19899 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19900 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x19900 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19901 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x19901 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19902 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x19902 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19903 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x19903 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19904 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x19904 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19905 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x19905 != Fp::invalid());
        extern_args[0] = x19899;
        extern_args[1] = x19900;
        extern_args[2] = x19901;
        extern_args[3] = x19902;
        extern_args[4] = x19903;
        extern_args[5] = x19904;
        extern_args[6] = x19905;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19906 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x19906 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19907 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x19907 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19908 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x19908 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19909 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x19909 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19910 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x19910 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19911 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x19911 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19912 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x19912 != Fp::invalid());
        extern_args[0] = x19906;
        extern_args[1] = x19907;
        extern_args[2] = x19908;
        extern_args[3] = x19909;
        extern_args[4] = x19910;
        extern_args[5] = x19911;
        extern_args[6] = x19912;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19913 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x19913 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19914 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x19914 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19915 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x19915 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19916 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x19916 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19917 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x19917 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19918 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x19918 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/2(ComputeWrap)/ComputeCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19919 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x19919 != Fp::invalid());
        extern_args[0] = x19913;
        extern_args[1] = x19914;
        extern_args[2] = x19915;
        extern_args[3] = x19916;
        extern_args[4] = x19917;
        extern_args[5] = x19918;
        extern_args[6] = x19919;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19920 = arg2[103 * steps + ((cycle - 0) & mask)];
    assert(x19920 != Fp::invalid());
    if (x19920 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19921 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x19921 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19922 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x19922 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19923 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x19923 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19924 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x19924 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19925 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x19925 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19926 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x19926 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19927 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x19927 != Fp::invalid());
        extern_args[0] = x19921;
        extern_args[1] = x19922;
        extern_args[2] = x19923;
        extern_args[3] = x19924;
        extern_args[4] = x19925;
        extern_args[5] = x19926;
        extern_args[6] = x19927;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19928 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x19928 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19929 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x19929 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19930 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x19930 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19931 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x19931 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19932 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x19932 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19933 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x19933 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19934 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x19934 != Fp::invalid());
        extern_args[0] = x19928;
        extern_args[1] = x19929;
        extern_args[2] = x19930;
        extern_args[3] = x19931;
        extern_args[4] = x19932;
        extern_args[5] = x19933;
        extern_args[6] = x19934;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19935 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x19935 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19936 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x19936 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19937 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x19937 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19938 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x19938 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19939 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x19939 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19940 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x19940 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19941 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x19941 != Fp::invalid());
        extern_args[0] = x19935;
        extern_args[1] = x19936;
        extern_args[2] = x19937;
        extern_args[3] = x19938;
        extern_args[4] = x19939;
        extern_args[5] = x19940;
        extern_args[6] = x19941;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19942 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x19942 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19943 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x19943 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19944 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x19944 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19945 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x19945 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19946 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x19946 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19947 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x19947 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19948 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x19948 != Fp::invalid());
        extern_args[0] = x19942;
        extern_args[1] = x19943;
        extern_args[2] = x19944;
        extern_args[3] = x19945;
        extern_args[4] = x19946;
        extern_args[5] = x19947;
        extern_args[6] = x19948;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19949 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x19949 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19950 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x19950 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19951 = arg2[146 * steps + ((cycle - 0) & mask)];
        assert(x19951 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19952 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x19952 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19953 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x19953 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19954 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x19954 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/3(MemIOCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19955 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x19955 != Fp::invalid());
        extern_args[0] = x19949;
        extern_args[1] = x19950;
        extern_args[2] = x19951;
        extern_args[3] = x19952;
        extern_args[4] = x19953;
        extern_args[5] = x19954;
        extern_args[6] = x19955;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19956 = arg2[104 * steps + ((cycle - 0) & mask)];
    assert(x19956 != Fp::invalid());
    if (x19956 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19957 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x19957 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19958 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x19958 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19959 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x19959 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19960 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x19960 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19961 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x19961 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19962 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x19962 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19963 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x19963 != Fp::invalid());
        extern_args[0] = x19957;
        extern_args[1] = x19958;
        extern_args[2] = x19959;
        extern_args[3] = x19960;
        extern_args[4] = x19961;
        extern_args[5] = x19962;
        extern_args[6] = x19963;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19964 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x19964 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19965 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x19965 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19966 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x19966 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19967 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x19967 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19968 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x19968 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19969 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x19969 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19970 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x19970 != Fp::invalid());
        extern_args[0] = x19964;
        extern_args[1] = x19965;
        extern_args[2] = x19966;
        extern_args[3] = x19967;
        extern_args[4] = x19968;
        extern_args[5] = x19969;
        extern_args[6] = x19970;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19971 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x19971 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19972 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x19972 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19973 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x19973 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19974 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x19974 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19975 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x19975 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19976 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x19976 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19977 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x19977 != Fp::invalid());
        extern_args[0] = x19971;
        extern_args[1] = x19972;
        extern_args[2] = x19973;
        extern_args[3] = x19974;
        extern_args[4] = x19975;
        extern_args[5] = x19976;
        extern_args[6] = x19977;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19978 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x19978 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19979 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x19979 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19980 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x19980 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19981 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x19981 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19982 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x19982 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19983 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x19983 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/4(MultiplyCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19984 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x19984 != Fp::invalid());
        extern_args[0] = x19978;
        extern_args[1] = x19979;
        extern_args[2] = x19980;
        extern_args[3] = x19981;
        extern_args[4] = x19982;
        extern_args[5] = x19983;
        extern_args[6] = x19984;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x19985 = arg2[105 * steps + ((cycle - 0) & mask)];
    assert(x19985 != Fp::invalid());
    if (x19985 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19986 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x19986 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19987 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x19987 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19988 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x19988 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19989 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x19989 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19990 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x19990 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19991 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x19991 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19992 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x19992 != Fp::invalid());
        extern_args[0] = x19986;
        extern_args[1] = x19987;
        extern_args[2] = x19988;
        extern_args[3] = x19989;
        extern_args[4] = x19990;
        extern_args[5] = x19991;
        extern_args[6] = x19992;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19993 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x19993 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19994 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x19994 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19995 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x19995 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19996 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x19996 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19997 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x19997 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19998 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x19998 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x19999 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x19999 != Fp::invalid());
        extern_args[0] = x19993;
        extern_args[1] = x19994;
        extern_args[2] = x19995;
        extern_args[3] = x19996;
        extern_args[4] = x19997;
        extern_args[5] = x19998;
        extern_args[6] = x19999;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20000 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20000 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20001 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20001 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20002 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20002 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20003 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20003 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20004 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20004 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20005 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20005 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20006 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20006 != Fp::invalid());
        extern_args[0] = x20000;
        extern_args[1] = x20001;
        extern_args[2] = x20002;
        extern_args[3] = x20003;
        extern_args[4] = x20004;
        extern_args[5] = x20005;
        extern_args[6] = x20006;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20007 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20007 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20008 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20008 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20009 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20009 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20010 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20010 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20011 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20011 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20012 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20012 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/5(DivideCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20013 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20013 != Fp::invalid());
        extern_args[0] = x20007;
        extern_args[1] = x20008;
        extern_args[2] = x20009;
        extern_args[3] = x20010;
        extern_args[4] = x20011;
        extern_args[5] = x20012;
        extern_args[6] = x20013;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x20014 = arg2[108 * steps + ((cycle - 0) & mask)];
    assert(x20014 != Fp::invalid());
    if (x20014 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20015 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x20015 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20016 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x20016 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20017 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20017 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20018 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20018 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20019 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20019 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20020 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20020 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20021 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20021 != Fp::invalid());
        extern_args[0] = x20015;
        extern_args[1] = x20016;
        extern_args[2] = x20017;
        extern_args[3] = x20018;
        extern_args[4] = x20019;
        extern_args[5] = x20020;
        extern_args[6] = x20021;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20022 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20022 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20023 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20023 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20024 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20024 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20025 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20025 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20026 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20026 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20027 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20027 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20028 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20028 != Fp::invalid());
        extern_args[0] = x20022;
        extern_args[1] = x20023;
        extern_args[2] = x20024;
        extern_args[3] = x20025;
        extern_args[4] = x20026;
        extern_args[5] = x20027;
        extern_args[6] = x20028;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20029 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20029 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20030 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20030 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20031 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20031 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20032 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20032 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20033 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20033 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20034 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20034 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20035 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20035 != Fp::invalid());
        extern_args[0] = x20029;
        extern_args[1] = x20030;
        extern_args[2] = x20031;
        extern_args[3] = x20032;
        extern_args[4] = x20033;
        extern_args[5] = x20034;
        extern_args[6] = x20035;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20036 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20036 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20037 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20037 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20038 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20038 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20039 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20039 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20040 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20040 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20041 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20041 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20042 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20042 != Fp::invalid());
        extern_args[0] = x20036;
        extern_args[1] = x20037;
        extern_args[2] = x20038;
        extern_args[3] = x20039;
        extern_args[4] = x20040;
        extern_args[5] = x20041;
        extern_args[6] = x20042;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20043 = arg2[144 * steps + ((cycle - 0) & mask)];
        assert(x20043 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20044 = arg2[145 * steps + ((cycle - 0) & mask)];
        assert(x20044 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20045 = arg2[146 * steps + ((cycle - 0) & mask)];
        assert(x20045 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20046 = arg2[147 * steps + ((cycle - 0) & mask)];
        assert(x20046 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20047 = arg2[148 * steps + ((cycle - 0) & mask)];
        assert(x20047 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20048 = arg2[149 * steps + ((cycle - 0) & mask)];
        assert(x20048 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/8(ECallCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20049 = arg2[150 * steps + ((cycle - 0) & mask)];
        assert(x20049 != Fp::invalid());
        extern_args[0] = x20043;
        extern_args[1] = x20044;
        extern_args[2] = x20045;
        extern_args[3] = x20046;
        extern_args[4] = x20047;
        extern_args[5] = x20048;
        extern_args[6] = x20049;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x20050 = arg2[109 * steps + ((cycle - 0) & mask)];
    assert(x20050 != Fp::invalid());
    if (x20050 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20051 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x20051 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20052 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x20052 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20053 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20053 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20054 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20054 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20055 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20055 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20056 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20056 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20057 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20057 != Fp::invalid());
        extern_args[0] = x20051;
        extern_args[1] = x20052;
        extern_args[2] = x20053;
        extern_args[3] = x20054;
        extern_args[4] = x20055;
        extern_args[5] = x20056;
        extern_args[6] = x20057;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20058 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20058 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20059 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20059 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20060 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20060 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20061 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20061 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20062 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20062 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20063 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20063 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/9(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20064 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20064 != Fp::invalid());
        extern_args[0] = x20058;
        extern_args[1] = x20059;
        extern_args[2] = x20060;
        extern_args[3] = x20061;
        extern_args[4] = x20062;
        extern_args[5] = x20063;
        extern_args[6] = x20064;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x20065 = arg2[110 * steps + ((cycle - 0) & mask)];
    assert(x20065 != Fp::invalid());
    if (x20065 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20066 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x20066 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20067 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x20067 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20068 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20068 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20069 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20069 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20070 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20070 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20071 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20071 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20072 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20072 != Fp::invalid());
        extern_args[0] = x20066;
        extern_args[1] = x20067;
        extern_args[2] = x20068;
        extern_args[3] = x20069;
        extern_args[4] = x20070;
        extern_args[5] = x20071;
        extern_args[6] = x20072;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20073 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20073 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20074 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20074 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20075 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20075 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20076 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20076 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20077 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20077 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20078 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20078 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/10(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20079 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20079 != Fp::invalid());
        extern_args[0] = x20073;
        extern_args[1] = x20074;
        extern_args[2] = x20075;
        extern_args[3] = x20076;
        extern_args[4] = x20077;
        extern_args[5] = x20078;
        extern_args[6] = x20079;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x20080 = arg2[111 * steps + ((cycle - 0) & mask)];
    assert(x20080 != Fp::invalid());
    if (x20080 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20081 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x20081 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20082 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x20082 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20083 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20083 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20084 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20084 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20085 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20085 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20086 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20086 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20087 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20087 != Fp::invalid());
        extern_args[0] = x20081;
        extern_args[1] = x20082;
        extern_args[2] = x20083;
        extern_args[3] = x20084;
        extern_args[4] = x20085;
        extern_args[5] = x20086;
        extern_args[6] = x20087;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20088 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20088 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20089 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20089 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20090 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20090 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20091 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20091 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20092 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20092 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20093 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20093 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/11(ShaWrap)/ShaCycle/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20094 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20094 != Fp::invalid());
        extern_args[0] = x20088;
        extern_args[1] = x20089;
        extern_args[2] = x20090;
        extern_args[3] = x20091;
        extern_args[4] = x20092;
        extern_args[5] = x20093;
        extern_args[6] = x20094;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x20095 = arg2[113 * steps + ((cycle - 0) & mask)];
    assert(x20095 != Fp::invalid());
    if (x20095 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20096 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x20096 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20097 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x20097 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20098 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20098 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20099 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20099 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20100 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20100 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20101 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20101 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20102 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20102 != Fp::invalid());
        extern_args[0] = x20096;
        extern_args[1] = x20097;
        extern_args[2] = x20098;
        extern_args[3] = x20099;
        extern_args[4] = x20100;
        extern_args[5] = x20101;
        extern_args[6] = x20102;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20103 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20103 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20104 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20104 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20105 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20105 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20106 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20106 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20107 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20107 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20108 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20108 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20109 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20109 != Fp::invalid());
        extern_args[0] = x20103;
        extern_args[1] = x20104;
        extern_args[2] = x20105;
        extern_args[3] = x20106;
        extern_args[4] = x20107;
        extern_args[5] = x20108;
        extern_args[6] = x20109;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20110 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20110 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20111 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20111 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20112 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20112 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20113 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20113 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20114 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20114 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20115 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20115 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20116 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20116 != Fp::invalid());
        extern_args[0] = x20110;
        extern_args[1] = x20111;
        extern_args[2] = x20112;
        extern_args[3] = x20113;
        extern_args[4] = x20114;
        extern_args[5] = x20115;
        extern_args[6] = x20116;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20117 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20117 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20118 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20118 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20119 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20119 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20120 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20120 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20121 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20121 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20122 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20122 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/13(ECallCopyInCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20123 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20123 != Fp::invalid());
        extern_args[0] = x20117;
        extern_args[1] = x20118;
        extern_args[2] = x20119;
        extern_args[3] = x20120;
        extern_args[4] = x20121;
        extern_args[5] = x20122;
        extern_args[6] = x20123;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
    // loc("zirgen/compiler/edsl/component.cpp":39:15)
    auto x20124 = arg2[114 * steps + ((cycle - 0) & mask)];
    assert(x20124 != Fp::invalid());
    if (x20124 != 0) {
      {
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20125 = arg2[116 * steps + ((cycle - 0) & mask)];
        assert(x20125 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20126 = arg2[117 * steps + ((cycle - 0) & mask)];
        assert(x20126 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20127 = arg2[118 * steps + ((cycle - 0) & mask)];
        assert(x20127 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20128 = arg2[119 * steps + ((cycle - 0) & mask)];
        assert(x20128 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20129 = arg2[120 * steps + ((cycle - 0) & mask)];
        assert(x20129 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20130 = arg2[121 * steps + ((cycle - 0) & mask)];
        assert(x20130 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20131 = arg2[122 * steps + ((cycle - 0) & mask)];
        assert(x20131 != Fp::invalid());
        extern_args[0] = x20125;
        extern_args[1] = x20126;
        extern_args[2] = x20127;
        extern_args[3] = x20128;
        extern_args[4] = x20129;
        extern_args[5] = x20130;
        extern_args[6] = x20131;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20132 = arg2[123 * steps + ((cycle - 0) & mask)];
        assert(x20132 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20133 = arg2[124 * steps + ((cycle - 0) & mask)];
        assert(x20133 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20134 = arg2[125 * steps + ((cycle - 0) & mask)];
        assert(x20134 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20135 = arg2[126 * steps + ((cycle - 0) & mask)];
        assert(x20135 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20136 = arg2[127 * steps + ((cycle - 0) & mask)];
        assert(x20136 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20137 = arg2[128 * steps + ((cycle - 0) & mask)];
        assert(x20137 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20138 = arg2[129 * steps + ((cycle - 0) & mask)];
        assert(x20138 != Fp::invalid());
        extern_args[0] = x20132;
        extern_args[1] = x20133;
        extern_args[2] = x20134;
        extern_args[3] = x20135;
        extern_args[4] = x20136;
        extern_args[5] = x20137;
        extern_args[6] = x20138;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20139 = arg2[130 * steps + ((cycle - 0) & mask)];
        assert(x20139 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20140 = arg2[131 * steps + ((cycle - 0) & mask)];
        assert(x20140 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20141 = arg2[132 * steps + ((cycle - 0) & mask)];
        assert(x20141 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20142 = arg2[133 * steps + ((cycle - 0) & mask)];
        assert(x20142 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20143 = arg2[134 * steps + ((cycle - 0) & mask)];
        assert(x20143 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20144 = arg2[135 * steps + ((cycle - 0) & mask)];
        assert(x20144 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20145 = arg2[136 * steps + ((cycle - 0) & mask)];
        assert(x20145 != Fp::invalid());
        extern_args[0] = x20139;
        extern_args[1] = x20140;
        extern_args[2] = x20141;
        extern_args[3] = x20142;
        extern_args[4] = x20143;
        extern_args[5] = x20144;
        extern_args[6] = x20145;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/addr(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20146 = arg2[137 * steps + ((cycle - 0) & mask)];
        assert(x20146 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/cycle(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20147 = arg2[138 * steps + ((cycle - 0) & mask)];
        assert(x20147 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/mem_op(Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20148 = arg2[139 * steps + ((cycle - 0) & mask)];
        assert(x20148 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[0](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20149 = arg2[140 * steps + ((cycle - 0) & mask)];
        assert(x20149 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[1](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20150 = arg2[141 * steps + ((cycle - 0) & mask)];
        assert(x20150 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[2](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20151 = arg2[142 * steps + ((cycle - 0) & mask)];
        assert(x20151 != Fp::invalid());
        // loc("Top/mux(Mux)/body(BodyStep)/Mux/14(BigIntCycle)/RamBody/PlonkBody/RamPlonkElement/data(U32Reg)/byte[3](Reg)"("./zirgen/compiler/edsl/component.h":154:27))
        auto x20152 = arg2[143 * steps + ((cycle - 0) & mask)];
        assert(x20152 != Fp::invalid());
        extern_args[0] = x20146;
        extern_args[1] = x20147;
        extern_args[2] = x20148;
        extern_args[3] = x20149;
        extern_args[4] = x20150;
        extern_args[5] = x20151;
        extern_args[6] = x20152;
        extern_plonkWrite_ram(ctx, cycle, "ram", extern_args, extern_outs);
      }
    }
  }
}
